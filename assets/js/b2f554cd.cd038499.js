"use strict";(self.webpackChunkalvarolorente_dev=self.webpackChunkalvarolorente_dev||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2025/04/30/T00:00:00.000Z-Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change","metadata":{"permalink":"/blog/2025/04/30/T00:00:00.000Z-Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2025-04-30T00:00:00.000Z-Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change.md","source":"@site/blog/2025-04-30T00:00:00.000Z-Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change.md","title":"Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change","description":"Over the last months, I\'ve witnessed firsthand the transformation of my team from a basic operation provider to an internal service provider.","date":"2025-04-30T00:00:00.000Z","formattedDate":"April 30, 2025","tags":[],"readingTime":4.4,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2025-04-30T00:00:00.000Z","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"Tags":["tech","devops","cloud","architecture"],"title":"Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change"},"nextItem":{"title":"The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command","permalink":"/blog/2025/04/28/T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command"}},"content":"Over the last months, I\'ve witnessed firsthand the transformation of my team from a basic operation provider to an internal service provider. \\n\\nIn many organizations, systems operations teams are often segmented into specialized units such as DBA, backend operations, networking, etc. While this specialization ensures deep expertise and support to teams in complex situations. It also leads to inefficiencies as it focuses on the reactiveness to the needs of the teams & company and not a proactive approach towards the same long-term needs due to the lack of common vision. It also has the drawback that enforces the dev vs ops culture and not a DevOps culture that has shown over and over again the positive effect on quality and speed of delivery of stream-aligned teams.\\n\\n\\n## \u2019DevOps\u2019 or \u2018Dev vs Ops\u2019\\n\\n\\nTraditionally, Dev and Ops teams have operated in silos, each with their own distinct goals and priorities. \\n\\n\\n|                 | Focus                                                                                                                                 | **Priorities**         |\\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- |\\n| **Dev Culture** | Development teams are primarily focused on creating new features, writing code, and ensuring the software meets user requirements.    | Speed and innovation   |\\n| **Ops Culture** | Operations teams are responsible for maintaining the stability, security, and performance of the software in production environments. | Reliability and uptime |\\n\\n\\nThis separation can lead to several challenges:\\n\\n- **Communication Barriers:**\xa0Lack of communication between Dev and Ops can result in misunderstandings and delays. Developers may not fully understand the operational constraints, while Ops may struggle with the rapid pace of development.\\n- **Conflicting Goals:**\xa0Developers prioritize speed and innovation, while Ops prioritize stability and reliability. These conflicting goals can create friction and hinder collaboration.\\n- **Inefficiencies:**\xa0Siloed teams often duplicate efforts and use different tools, leading to inefficiencies and wasted resources.\\n\\n## **The DevOps Solution**\\n\\n\\nThe goal of DevOps is to create a culture of ownership to stream aligned teams to do development and operations, breaking down traditional silos and fostering a more integrated approach to software delivery. While the existing operations teams become a provider of abstractions that simplifies that work, reducing the cognitive load of operating the system.\\n\\n\\nThis brings the next benefits:\\n\\n- **Enhanced Collaboration:**\xa0Breaking down silos fosters a culture of collaboration, enabling teams to work together more effectively and share knowledge.\\n- **Improved Efficiency:**\xa0Streamlined workflows and standardized tools reduce redundancy and improve operational efficiency.\\n- **Greater Innovation:**\xa0A unified approach allows teams to quickly adapt to new technologies and methodologies, driving innovation and continuous improvement.\\n- **Customer-Centric Approach:**\xa0By aligning development and operations goals, teams can better understand and meet the needs of end-users, resulting in higher customer satisfaction.\\n\\n## The Birth of the Platform Team\\n\\n\\nA platform team acts as a service provider for all internal stream-aligned teams, offering essential tools, infrastructure, and support to streamline their work and enhance productivity. We could start enumerating systems and solutions that a platform team can own. But the reality is that would be the same as creating a product without doing any research on your clients.\\n\\n\\nTo truly drive value within an organization, a platform team must deeply understand and address the needs of stream-aligned teams. These teams are directly responsible for delivering products and services to customers, and their success hinges on the support and resources provided by the platform team. Here\u2019s how a platform team can effectively drive value by focusing on the needs of stream-aligned teams:\\n\\n- **Active Engagement and Communication:**\xa0work collaboratively with stream-aligned teams to develop solutions that address their specific pain points, fostering a sense of shared responsibility and mutual support.\\n- **Continuous Improvement and Innovation:**\xa0Implement iterative development practices to continuously refine and improve tools and services.\\n- **Metrics and Performance Tracking:**\xa0Establish key performance indicators (KPIs) to measure the effectiveness of the platform team\u2019s support and use data-driven approaches to make informed decisions about resource allocation and process improvements.\\n- **Empowerment and Autonomy:**\xa0Develop self-service platforms that empower stream-aligned teams to manage their own resources and workflows, and provide comprehensive training and support to ensure proficiency in using the tools and services offered by the platform team.\\n\\n**The key benefits this strategy tries to achieve are:**\\n\\n- **Efficiency:**\xa0By centralizing infrastructure management, tooling, and support, the platform team reduces redundancy and improves operational efficiency. Stream-aligned teams can focus on delivering value to customers without worrying about underlying infrastructure.\\n- **Consistency:**\xa0Standardized tools and processes ensure consistency across the organization, making it easier to manage and scale applications.\\n- **Reliability:**\xa0A dedicated platform team ensures that the infrastructure is reliable and secure, minimizing downtime and enhancing the overall stability of applications.\\n\\n## Closing thoughts\\n\\n\\nBy fostering a culture of ownership and collaboration, and by providing abstractions that simplify operations, the platform team can significantly reduce the cognitive load on stream-aligned teams. This transformation brings enhanced collaboration, improved efficiency, greater innovation, and a customer-centric approach, ultimately driving the success of the organization.\\n\\n\\nAs we continue to evolve, the key to driving value lies in deeply understanding and addressing the needs of stream-aligned teams. Through active engagement, continuous improvement, metrics tracking, and empowerment, the platform team can ensure that stream-aligned teams are equipped to deliver exceptional products and services to our customers. This strategy not only centralizes infrastructure management and standardizes tools but also ensures reliability and consistency across the organization, paving the way for sustained growth and success."},{"id":"/2025/04/28/T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command","metadata":{"permalink":"/blog/2025/04/28/T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2025-04-28T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command.md","source":"@site/blog/2025-04-28T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command.md","title":"The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command","description":"Discover why transparency is a cornerstone of effective leadership and how it contributes to a healthy chain of command. Learn how being open and honest with your team builds trust, fosters accountability, and enhances employee morale. Explore the importance of avoiding secrecy in strategic decisions to improve engagement and organizational performance. Embrace transparency to become a trusted and effective leader.","date":"2025-04-28T00:00:00.000Z","formattedDate":"April 28, 2025","tags":[],"readingTime":4.05,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2025-04-28T06:00:00.000Z","canonical_url":"https://leadshorizons.com/p/the-role-of-transparency-in-leadership","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover why transparency is a cornerstone of effective leadership and how it contributes to a healthy chain of command. Learn how being open and honest with your team builds trust, fosters accountability, and enhances employee morale. Explore the importance of avoiding secrecy in strategic decisions to improve engagement and organizational performance. Embrace transparency to become a trusted and effective leader.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/858508ac-8e94-4943-aca2-c8ac362e097e/img3.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=ec8330469fb9833df0f66388987cd57ba82be141b23009707f6ae8b78c7eaed5&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command"},"prevItem":{"title":"Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change","permalink":"/blog/2025/04/30/T00:00:00.000Z-Transforming Systems Operations Teams into a Unified Platform Team: The Cultural Change"},"nextItem":{"title":"Job Trial Period: A Two Way Street For Success","permalink":"/blog/2024/09/26/T22:00:00.000Z-Job Trial Period: A Two Way Street For Success"}},"content":"As someone who has spent years navigating the complexities of engineering leadership, I can tell you that transparency is one of the most critical elements of effective leadership. If you\'re aspiring to take on a leadership role, understanding the importance of transparency and how it contributes to a healthy chain of command is essential.\\n\\n\\n![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/f0f021ee-1928-4761-8864-9d2992de42b9/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4667NHSBZZO%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD9to3uKVVkQLmoLUIA2bPBcwDtiPa6p%2FcroWa7eX1rxwIhAK99TsL8ZE0tozeB48uYo990gWYRDSVBuxyYUW7Ow0AvKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwQdNMmozzhImGCSnUq3AN3y4o%2BV1sT4ZgeysCyaKrqIdzo9qsQaoiHFq1zTpT6saR9QO2RY3IPPpfuab6xf58LfrZYbL9AjMQEdZbMBQA%2FdnKrzxPeCOA%2FPqeUwhpSal1aq9GCKglfCjIcGkyyZJPPNqh6UkmgP1MJPI2VmX%2BaBbRavM8wplpGudxzBnbAgX6kB6AIu2A%2BiQ34CzPC5T5VE%2F2aFCXF8suWrgXZKhmtm8Sc4yBNS15qt4qOLgQsaKw3Oi1lqZixb0W91RffS0Z2A42PgDRXrF430MxXyietmnxdFNmNfDyUNFnq7Y8g2DCHFn7ESzGPq6mi%2BmmgD%2BbvhjfkPAW%2FwgQaIWDjcW4dNS92xDtcmt3G0yDkTDwZD5Z%2F0aw7a%2Fw8hBcPTp3rNTxp0Gn%2BbOzWzVj8uY%2F1%2BcZ7laVtXy%2Fb3ZLRLhS5WjC4Sen9SSWbThy2qbMISVxin1r89TTcFq0nvSJB3kz1BW10Dn7EE6tUQiK80xGdOzM3yQrmvHt5Xhq%2BOTHJlZ7m3KYzJPt3q%2FnSPag72Szs2yAeBh43pHsnl1Oi2EnKZWMtaxpVDiEh8BNdX99nepXUqFosgnWntPWqGUgPBAFBUA73V0Xfe4M54z5eiXliHg15ofQONgdTe4EJD0FWZzD4nK3EBjqkAdmS7BdzugaH0RZswP114eb09GXlStUahSMuGyYggLCXCpFQsld3tvZeyorNiD2m5BJKtO8ZO8uDQqOVJXV0TtKq%2BkdDKyjee092C0CY7VoWsqvhqA9jJiLfAAcRouB%2FHlZJ2n2izduaLRjvaEQt0QAFAyf7BFHoRl%2FL8p3gsbfhIAI8fBv%2F7r5voAKVsY2M3xLRnG%2B8IoFekxjTQkMTX6dUsgXJ&X-Amz-Signature=93721462968a2990d25f4acc615fdfb7875f27b3ba88d01c07bcc37ead3dee83&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## **Why Transparency Matters**\\n\\n\\nTransparency in leadership is about being open, honest, and straightforward with your team. It involves sharing information, explaining decisions, and being clear about expectations and goals. This openness builds trust, fosters a culture of accountability, and encourages open communication.\\n\\n\\nWhen leaders are transparent, they create an environment where team members feel valued and respected. They know that their leaders are not hiding anything from them and that they can rely on the information provided. This helps to:\\n\\n- **Building Trust and Credibility:** Trust is not something that can be demanded; it must be earned. By being transparent, you demonstrate integrity and honesty, which are crucial for building credibility.\\n- **Encouraging Open Communication:** When team members see that their leaders are open and honest, they are more likely to reciprocate. This creates a culture where everyone feels comfortable sharing their ideas, concerns, and feedback.\\n- **Fostering Accountability:** When you are open about your own performance and hold yourself accountable for your actions, you encourage your team to do the same. This culture of accountability leads to higher performance and continuous improvement.\\n- **Enhancing Employee Morale and Engagement:** Employees who work in a transparent environment are generally more satisfied and engaged. They appreciate knowing that their leaders are honest and forthcoming, which creates a sense of security and belonging. When employees feel informed and included in the decision-making process, they are more likely to be committed to the organization\'s mission and values.\\n\\n## **Transparency in a Healthy Chain of Command**\\n\\n\\nA healthy chain of command relies heavily on transparency. In a transparent organization, information flows freely up and down the hierarchy. Leaders at all levels are open about their decisions, goals, and challenges, which ensures that everyone is aligned and working towards the same objectives.\\n\\n\\nWhen transparency is lacking, it can lead to misunderstandings, mistrust, and a breakdown in communication. Team members may feel left out of the loop, leading to disengagement and decreased morale. On the other hand, a transparent chain of command fosters a sense of unity and collaboration, as everyone is aware of their roles and how they contribute to the organization\'s success.\\n\\n\\n## **The Importance of Avoiding Secrecy in Strategic Decisions**\\n\\n\\nWhile there are instances where strategic secrecy is necessary, it\'s equally important to recognize the potential downsides of keeping strategic decisions hidden from your team. Transparency in strategic decision-making can significantly enhance trust, engagement, and overall organizational performance. \\n\\n\\n![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/c4f8e2a4-13c8-4265-9de2-068dd8950a51/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4667NHSBZZO%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD9to3uKVVkQLmoLUIA2bPBcwDtiPa6p%2FcroWa7eX1rxwIhAK99TsL8ZE0tozeB48uYo990gWYRDSVBuxyYUW7Ow0AvKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwQdNMmozzhImGCSnUq3AN3y4o%2BV1sT4ZgeysCyaKrqIdzo9qsQaoiHFq1zTpT6saR9QO2RY3IPPpfuab6xf58LfrZYbL9AjMQEdZbMBQA%2FdnKrzxPeCOA%2FPqeUwhpSal1aq9GCKglfCjIcGkyyZJPPNqh6UkmgP1MJPI2VmX%2BaBbRavM8wplpGudxzBnbAgX6kB6AIu2A%2BiQ34CzPC5T5VE%2F2aFCXF8suWrgXZKhmtm8Sc4yBNS15qt4qOLgQsaKw3Oi1lqZixb0W91RffS0Z2A42PgDRXrF430MxXyietmnxdFNmNfDyUNFnq7Y8g2DCHFn7ESzGPq6mi%2BmmgD%2BbvhjfkPAW%2FwgQaIWDjcW4dNS92xDtcmt3G0yDkTDwZD5Z%2F0aw7a%2Fw8hBcPTp3rNTxp0Gn%2BbOzWzVj8uY%2F1%2BcZ7laVtXy%2Fb3ZLRLhS5WjC4Sen9SSWbThy2qbMISVxin1r89TTcFq0nvSJB3kz1BW10Dn7EE6tUQiK80xGdOzM3yQrmvHt5Xhq%2BOTHJlZ7m3KYzJPt3q%2FnSPag72Szs2yAeBh43pHsnl1Oi2EnKZWMtaxpVDiEh8BNdX99nepXUqFosgnWntPWqGUgPBAFBUA73V0Xfe4M54z5eiXliHg15ofQONgdTe4EJD0FWZzD4nK3EBjqkAdmS7BdzugaH0RZswP114eb09GXlStUahSMuGyYggLCXCpFQsld3tvZeyorNiD2m5BJKtO8ZO8uDQqOVJXV0TtKq%2BkdDKyjee092C0CY7VoWsqvhqA9jJiLfAAcRouB%2FHlZJ2n2izduaLRjvaEQt0QAFAyf7BFHoRl%2FL8p3gsbfhIAI8fBv%2F7r5voAKVsY2M3xLRnG%2B8IoFekxjTQkMTX6dUsgXJ&X-Amz-Signature=7f69bfc4cefc7281b2f294d1221d5686f55aa8958fbe41724032bec35d5b3a82&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nHere\u2019s why avoiding secrecy in strategic decisions is crucial:\\n\\n- **Enhancing Trust and Engagement:** When leaders are transparent about strategic decisions, it builds trust within the team. Employees feel valued and respected when they are kept in the loop about the direction of the organization. This trust fosters a sense of ownership and commitment, leading to higher levels of engagement and motivation. Research has shown that organizations with high levels of trust and transparency tend to have more engaged employees, which directly correlates with improved performance and lower turnover rates.\\n- **Improving Decision Quality:** Transparency in strategic decision-making encourages diverse perspectives and input from various levels of the organization. When employees are aware of the strategic direction and the reasons behind it, they can provide valuable insights and feedback that might not have been considered otherwise. This collaborative approach leads to more informed and well-rounded decisions, ultimately benefiting the organization.\\n\\n\\tFor example, a study by Harvard Business Review found that companies that involve employees in strategic planning processes are more likely to achieve their goals and adapt to changes effectively. By avoiding secrecy, leaders can tap into the collective intelligence of their team, leading to better outcomes.\\n\\n- **Preventing Misinformation and Rumors:** Secrecy can often lead to misinformation and rumors, which can be detrimental to organizational morale and cohesion. When employees are left in the dark, they may speculate and create their own narratives, which can lead to confusion and mistrust. By being transparent about strategic decisions, leaders can ensure that accurate information is disseminated, reducing the likelihood of rumors and fostering a more cohesive and informed team.\\n\\n### **Conclusion**\\n\\n\\nIn conclusion, transparency is a cornerstone of effective leadership and a healthy chain of command. By being open and honest, leaders can build trust, encourage open communication, foster accountability, enhance employee morale, and drive organizational success. As you aspire to take on leadership roles, remember that transparency is not just a strategy; it\'s a commitment to creating a positive and thriving workplace culture.\\n\\n\\nEmbrace transparency, and you\'ll be well on your way to becoming a trusted and effective leader."},{"id":"/2024/09/26/T22:00:00.000Z-Job Trial Period: A Two Way Street For Success","metadata":{"permalink":"/blog/2024/09/26/T22:00:00.000Z-Job Trial Period: A Two Way Street For Success","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-09-26T22:00:00.000Z-Job Trial Period: A Two Way Street For Success.md","source":"@site/blog/2024-09-26T22:00:00.000Z-Job Trial Period: A Two Way Street For Success.md","title":"Job Trial Period: A Two Way Street For Success","description":"Discover how job trial periods benefit both employers and employees. Learn to maximize this evaluation time for mutual success and informed decision-making.","date":"2024-09-26T00:00:00.000Z","formattedDate":"September 26, 2024","tags":[],"readingTime":5.91,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-09-26T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/job-trial-period-a-two-way-street","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover how job trial periods benefit both employers and employees. Learn to maximize this evaluation time for mutual success and informed decision-making.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/630c13dd-5a1f-4664-bb0e-af68a3bc17e3/Designer_%283%29.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=12aca40c71f197a7dc15042c9c995bdbc27e0f073b200e2b99c42700627217fb&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Job Trial Period: A Two Way Street For Success"},"prevItem":{"title":"The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command","permalink":"/blog/2025/04/28/T06:00:00.000Z-The Role of Transparency in Leadership: How You can Build Trust and Healthy Chains of Command"},"nextItem":{"title":"Rethinking Technical Tasks: Define any task as user value","permalink":"/blog/2024/07/31/T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value"}},"content":"Dear readers, I am back. I apologize for the hiatus, it has been a few \u201cinteresting\u201d months in my life that have made me reflect a lot on some topics that before I thought were trivial, and one-sided. I will try to share some thoughts over the next few posts. So let\'s start with a subject that is really fresh in my mind, as it\'s what has been affecting me over the last few months.\\n\\n\\nTo the question \u201cDuring your career, did to pass a Job trial period?\u201d the most common answer will be \u201cYes\u201d. Traditionally, it is viewed as a tool for employers to evaluate potential hires, nevertheless it\'s crucial to recognize that these periods serve a dual purpose. They are, in fact, a two-way street that benefits both employers and employees alike.\\n\\n\\n## What is in for Us?\\n\\n\\nThe trial period is an evaluation period, it can even be seen as an extension of the interview process, as you will never get to know a person you will spend most of your awake workday day with.\\n\\nWith this in mind, the same as in interview, we need to remember is not a one-sided evaluation, Employers should evaluate ROI & employees should evaluate company fitness.\\n\\n\\nFrom an **employer\'s standpoint**, trial periods offer several advantages:\\n\\n- **Skill Assessment:** Employers can evaluate a candidate\'s practical skills and how they apply their knowledge in real-world scenarios.\\n- **Cultural Fit:** It provides an opportunity to assess how well the new hire integrates with the existing team and company culture.\\n- **Performance Evaluation:** Employers can gauge the employee\'s productivity, work ethic, and ability to meet deadlines.\\n- **Risk Mitigation:** If the employee doesn\'t meet expectations, the company can part ways with minimal legal and financial implications.\\n\\nEqually important, but often overlooked, is the **employee\'s perspective** on trial periods:\\n\\n- **Company Culture Experience:** Employees can immerse themselves in the company culture and determine if it aligns with their values and work style.\\n- **Job Satisfaction Assessment:** It allows individuals to evaluate if the role meets their expectations and career aspirations.\\n- **Team Dynamics:** Employees can assess how well they work with their colleagues and immediate supervisors.\\n- **Work-Life Balance:** The trial period offers insight into the company\'s approach to work-life balance and flexibility\\n\\n## Maximizing the Trial Period\\n\\n\\nTo make the most of a job trial period, both parties should approach it with openness and clear communication:\\n\\n- **Set Clear Expectations:** Employers should outline specific goals and performance metrics for the trial period.\\n- **Regular Feedback:** Implement a system for frequent, two-way feedback to address concerns and acknowledge progress.\\n- **Encourage Questions:** Create an environment where the new hire feels comfortable asking questions and seeking clarification.\\n- **Provide Necessary Resources:** Ensure the employee has all the tools and information needed to perform their job effectively.\\n\\nTo achieve this, we need to use the correct tools for the job\\n\\n\\n### Onboarding Plan\\n\\n\\nAn effective onboarding plan should contain:\\n\\n- **Comprehensive introduction:** Include an overview of the company\'s culture, policies, and procedures.\\n- **Role-specific training:** Provide training tailored to the new employee\'s specific job responsibilities.\\n- **Introduction to team and colleagues:** Facilitate meetings with team members and key personnel.\\n- **Resource provision:** Ensure the employee has all necessary tools and information to perform their job effectively.\\n- **Assign a buddy**: pair the employee with a more experienced colleague who can provide informal guidance and support that can help navigate the day-to-day aspects of the job.\\n- **Assign a mentor**: pair the employee mentor is usually a more senior employee who can provide guidance, share industry insights, and help them grow in their role over a longer period.\\n- **Regular feedback sessions:** as a manager, schedule frequent check-ins to address concerns and acknowledge progress.\\n\\nA well-structured onboarding plan helps new employees quickly integrate into their roles and the organization, reducing the learning curve and increasing productivity during the trial period.\\n\\n\\n### 30-60-90 Plan\\n\\n\\nA 30-60-90 plan is a strategic framework used for onboarding new employees or setting goals for the first 90 days in a new role. It breaks down objectives and expectations into three distinct periods:\\n\\n- **30 days:** Focus on learning and understanding the role, company culture, and immediate responsibilities.\\n- **60 days:** Begin contributing more actively, implementing initial strategies, and identifying areas for improvement.\\n- **90 days:** Fully integrate into the role, start driving results, and propose long-term strategies or improvements.\\n\\nThis plan helps structure the transition period, ensuring clear expectations and measurable progress for both the employee and the employer during the trial period, with a framework that can help focus the feedback and\\n\\n\\n## Evaluation of the outcome of a trial period\\n\\n\\n### Pass\\n\\n\\nWhen a trial period results in a successful outcome, it\'s important to celebrate this achievement. Both the employer and employee should acknowledge the positive experience and use it as a foundation for future growth.\\n\\n\\nThis is an opportunity to set new goals, discuss career development plans, and reinforce the mutual commitment to success. A successful trial period can lead to increased motivation, job satisfaction, and a stronger sense of belonging within the organization.\\n\\n\\n### No Pass by Employer\\n\\n\\nIf an employer decides not to continue the employment relationship after the trial period, it\'s crucial to handle the situation professionally and sensitively. \\n\\n\\nThe employer should provide clear, constructive feedback about why the trial was unsuccessful, focusing on the root cause without personal criticisms. This feedback can be valuable for the employee\'s future career development. \\n\\n\\nAdditionally, the employer should ensure all legal and contractual obligations are met, including any notice periods or severance pay if applicable. Treating the departing employee with respect and dignity during this process is not only ethical, but also maintains the company\'s reputation as a fair employer.\\n\\n\\n### No Pass by Employee\\n\\n\\nWhen an employee decides not to continue after the trial period, it\'s equally important to handle the situation professionally. \\n\\n\\nThe employee should provide honest feedback about their experience, highlighting any misalignment or concerns that led to their decision. This feedback can be valuable for the employer to improve their onboarding process or workplace environment. \\n\\n\\nThe employee should also ensure they fulfill any contractual obligations, such as providing proper notice.\\n\\n\\n## Conclusion\\n\\n\\nJob trial periods are an opportunity for both parties to evaluate the potential for a long-term, mutually beneficial relationship. By approaching these periods with transparency, open communication, and a willingness to learn, both employers and employees can make informed decisions about their future together.\\n\\n\\nThis period should not be demonized, even if it ends in a \u201cNo Pass\u201d, it should be taken as a good outcome as it\'s a relationship that would have most probably failed, or would create friction and other risks down the road when legal obligation from both sides are more complex.\\nIf you\'re the employee, remember this is not a failure. Your worth remains unchanged\u2014it simply wasn\'t the right fit or timing. If you\'re the employer, don\'t be too hard on yourself. Not all relationships work out. The best approach is to move forward and end things on the best terms possible."},{"id":"/2024/07/31/T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value","metadata":{"permalink":"/blog/2024/07/31/T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-07-31T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value.md","source":"@site/blog/2024-07-31T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value.md","title":"Rethinking Technical Tasks: Define any task as user value","description":"Discover how to eliminate the divide between technical and product tasks in your development team. Learn strategies for a unified approach to task management that enhances product quality, efficiency, and team collaboration.","date":"2024-07-31T00:00:00.000Z","formattedDate":"July 31, 2024","tags":[],"readingTime":3.965,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-07-31T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/rethinking-technical-tasks-define","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover how to eliminate the divide between technical and product tasks in your development team. Learn strategies for a unified approach to task management that enhances product quality, efficiency, and team collaboration.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/f719bb20-85ea-427a-8a14-6e0fce563885/Designer.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=77536d03333625b8f61b7f7623a4d1b672fd9fd383dd8d7a4c33116e49632ca6&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Rethinking Technical Tasks: Define any task as user value"},"prevItem":{"title":"Job Trial Period: A Two Way Street For Success","permalink":"/blog/2024/09/26/T22:00:00.000Z-Job Trial Period: A Two Way Street For Success"},"nextItem":{"title":"Improving Mental Health at Work: Strategies for a Healthier Workplace","permalink":"/blog/2024/07/25/T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace"}},"content":"Have you ever considered the various types of tasks within a team? Why do we often separate tasks into \'technical\' and \'product\' categories? Is this division a reality, or is it simply a reflection of our difficulty in articulating the value of non-functional behavior?\\n\\n\\n## The Current Concept of Technical Task\\n\\n\\nTechnical tasks are typically considered those that involve the underlying work on non-functional related endeavors. These can include activities like updating dependencies, improving performance, etc. \\nWhile they may not always have a direct visible impact on the end user, In reality, almost every task a development team undertakes has some level of impact on the product. Even tasks perceived as purely technical, such as improving code quality or optimizing performance, ultimately contribute to a better user experience and product reliability. \\n\\n\\n## Understanding the Net Value of Tasks\\n\\n\\n> Any team effort needs to have a clear purpose, whether it\'s technical or product-related. \\n\\n\\nIIf we approach our work with the previous quote in mind, any endeavor a team undertakes should yield a positive return on investment. Let\'s express this value as a simple formula:\\n\\n\\n$ = Value - Cost\\n\\n\\nwhere:\\n\\n- **Value**: The benefit or worth that a task or project brings to the organization, often measured in terms of revenue.\\n- **Cost**: The amount of resources, including time, money, and effort, required to complete a task or project.\\n\\nIt\'s normally simpler to calculate the expected value of functional tasks because their impact on user experience and business metrics is more direct and measurable. However, even technical tasks, when evaluated through this lens, can reveal significant contributions to the product\'s overall value.\\n\\n\\nThe benefit we will achieve from this approach is a more cohesive and efficient development process, where all tasks are recognized for their contribution to the product\'s success. This integrated approach to task management allows for more strategic prioritization. When all tasks are evaluated based on their potential impact on the product, teams can make more informed decisions about where to allocate their resources. This can result in more timely delivery of features and improvements, better risk management, and a more adaptable development process.\\n\\n\\n## Example of Task Calculations\\n\\n\\n### Functional Task: Adding a New Feature\\n\\n\\n**Task**: Implement a new user login feature.\\n\\n- **Value**: This feature is expected to increase user sign-ups by 5%, leading to an estimated increase in revenue of $5,000 per month.\\n- **Cost**: The development team estimates that it will take a week to complete this task (around 40 hours). Assuming an average hourly rate of $50, the total cost is $2,000.\\n\\n**$ Value Calculation**:\\n$ = Value - Cost\\n\\n\\n$ = $5,000 - $2,000\\n\\n\\n$ = $3,000 per month\\n\\n\\n### Non-Functional Task: Performance Improvements\\n\\n\\n**Task**: Optimize the application\'s performance to reduce load times and enhance user experience.\\n\\n- **Value**: Faster load times are expected to improve user retention by 15%, leading to an estimated increase in paid users and an additional revenue of $7,000 per month.\\n- **Cost**: The development team estimates that it will take 50 hours to complete this task. Assuming an average hourly rate of $50, the total cost is $2,500.\\n\\n**$ Value Calculation**:\\n$ = Value - Cost\\n\\n\\n$ = $7,000 - $2,500\\n\\n\\n$ = $4,500 per month\\n\\n\\nWith these examples in mind, it makes more sense to start with performance improvements and not working on the functional task.\\n\\n\\n## Embrace a Unified Approach to Task Management\\n\\n\\nTo truly integrate technical and product tasks, teams should adopt a unified approach to task management. This involves recognizing that every task, no matter how technical it may seem, plays a crucial role in the overall product vision. Here are some additional strategies to ensure this integration:\\n\\n1. **Unified Backlog**: Maintain a single backlog that includes both product features and technical tasks. This ensures that all tasks are visible to the entire team and can be prioritized based on their overall impact on the product.\\n2. **Cross-functional Teams**: Foster cross-functional teams where developers, product managers, and other stakeholders work closely together. This can help bridge the gap between technical and product perspectives, leading to more informed decision-making.\\n3. **Regular Reviews**: Conduct regular reviews of the backlog and ongoing tasks to ensure that technical debt is being addressed, and that product features are aligned with technical improvements.\\n\\n## Final Thoughts\\n\\n\\nIn conclusion, the distinction between technical and product tasks is often more conceptual than practical. By recognizing the interdependence of these tasks and integrating them into a unified development process, teams can enhance both product quality and development efficiency. It\'s time to stop segregating tasks and start viewing them as integral parts of a cohesive product development strategy. This holistic approach will improve the end product and foster a more collaborative and productive team environment."},{"id":"/2024/07/25/T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace","metadata":{"permalink":"/blog/2024/07/25/T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-07-25T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace.md","source":"@site/blog/2024-07-25T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace.md","title":"Improving Mental Health at Work: Strategies for a Healthier Workplace","description":"Discover essential strategies to enhance mental health in the workplace. Learn how to balance workloads, foster a supportive culture, and implement practical tips for both organizations and individuals to maintain well-being and productivity.","date":"2024-07-25T00:00:00.000Z","formattedDate":"July 25, 2024","tags":[],"readingTime":5.925,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-07-25T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/improving-mental-health-at-work","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover essential strategies to enhance mental health in the workplace. Learn how to balance workloads, foster a supportive culture, and implement practical tips for both organizations and individuals to maintain well-being and productivity.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/d742e674-d543-42c9-9a88-2353cbd091cb/Designer_%282%29.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=88d0d4ab66d535ce8a243bbc449b90fd4f84bdadb688c4b55b5506eb20de43e2&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Improving Mental Health at Work: Strategies for a Healthier Workplace"},"prevItem":{"title":"Rethinking Technical Tasks: Define any task as user value","permalink":"/blog/2024/07/31/T22:00:00.000Z-Rethinking Technical Tasks: Define any task as user value"},"nextItem":{"title":"Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout","permalink":"/blog/2024/07/18/T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout"}},"content":"Last week, we discussed the importance of managing 100% utilization within the team to maintain their well-being. As individuals, we each react differently to experiences, which can have long-term consequences.\\n\\n\\nYou may have noticed that I haven\'t been writing as frequently as I would like. I feel bad about this, but I was overwhelmed from overworking in multiple areas. Had this continued without any action, I might have faced significant burnout. So, let\'s talk today about mental health at work.\\n\\n\\n## What is Mental Health & Why is it Important\\n\\n\\nMental health goes beyond the absence of mental illness; it includes our overall emotional, psychological, and social well-being. It affects how we think, feel, and act, influencing our ability to manage stress, relate to others, and make decisions. Understanding and prioritizing mental health is crucial for maintaining a productive and positive work environment.\\n\\n\\nWe typically spend 50% of our waking hours at work, this is why work can significantly impact our mental health.\\n\\n\\n## Evaluating Mental Health\\n\\n\\n## Self\\n\\n\\nIt\'s important to regularly assess your own mental health. Reflect on how you\'re feeling, both physically and emotionally. While this can be challenging, several tools and methods can help:\\n\\n1. **Journaling**: Keeping a daily journal of your thoughts, feelings, and experiences can help you identify patterns and triggers of stress or anxiety.\\n2. **Mood Tracking**: Apps or simple paper-based mood trackers can help you monitor your mood over time and notice any significant changes.\\n3. **Online Assessments**: Various websites offer self-assessment tools that provide insights into your mental health status. These assessments often cover areas like stress, anxiety, and depression.\\n4. **Physical Health Monitoring**: Since mental and physical health are closely linked, tracking physical symptoms like sleep patterns, appetite, and energy levels can provide clues about your mental health.\\n5. **Professional Help**: Regular check-ins with a mental health professional, even when you\'re feeling okay, can offer valuable insights and support.\\n\\nUsing these tools regularly can help you stay in tune with your mental health and take proactive steps to address any issues that arise.\\n\\n\\n### Others\\n\\n\\nAs leaders, it\'s equally important to recognize signs of burnout and stress in others. Here are some indicators to watch out for:\\n\\n- **Decreased Productivity**: Noticeable decline in work output.\\n- **Increased Absenteeism**: Frequent sick days or unexplained absences.\\n- **Changes in Behavior**: Irritability, mood swings, or withdrawal from team activities.\\n- **Physical Symptoms**: Complaints of headaches, fatigue, or other stress-related ailments.\\n- **Lack of Engagement**: Disinterest in work or decreased enthusiasm for projects.\\n\\n## Factors That Affect Mental Health At Work\\n\\n\\nSeveral factors can significantly affect mental health in the workplace, and it\u2019s essential to recognize these to create a supportive environment for everyone on the team. Here are some of the key factors:\\n\\n- Workload and Stress: Excessive workload and high levels of stress are common contributors to poor mental health. When employees are consistently overwhelmed with tasks and responsibilities, it can lead to burnout, anxiety, and decreased productivity.\\n- Work-Life Balance: A lack of work-life balance can negatively impact mental health. When work encroaches on personal time, it can lead to stress, fatigue, and strained relationships. It\u2019s crucial for organizations to promote a healthy balance between work and personal life.\\n- Job Security: Uncertainty about job security can cause significant stress and anxiety. Concerns about layoffs, contract renewals, or organizational changes can create an environment of fear and instability.\\n- Workplace Relationships: The quality of relationships with colleagues and supervisors can greatly influence mental health. Positive, supportive interactions can enhance well-being, while toxic or unsupportive relationships can lead to stress and dissatisfaction.\\n- Organizational Culture: A company\'s culture plays a vital role in mental health. A culture that values mental well-being, provides support, and encourages open communication can help mitigate stress and improve overall morale.\\n- Recognition and Reward: Feeling undervalued or unrecognized for contributions can negatively impact mental health. Regular acknowledgment and reward for hard work and accomplishments can boost morale and motivation.\\n- Physical Environment: The physical work environment, including factors like noise levels, lighting, and ergonomics, can affect mental well-being. A comfortable and conducive workspace can enhance productivity and reduce stress.\\n- Change Management: How changes are managed within an organization can impact mental health. Poorly communicated or managed changes can create uncertainty and stress, while transparent and supportive change management can ease transitions.\\n- Personal Factors: Personal issues such as financial concerns, health problems, or family responsibilities can also impact mental health at work. It\u2019s important for organizations to be aware of and sensitive to these external factors.\\n- Team Dynamics: The dynamics within a team can greatly influence individual mental health. A collaborative, cohesive team can provide support and reduce stress, while a dysfunctional team can create additional pressure and conflict.\\n\\n## Strategies to Improve Mental Health \\n\\n\\nAddressing mental health in the workplace requires a multifaceted approach. Here are some strategies that can help create a healthier work environment:\\n\\n\\n### Organizational Strategies\\n\\n1. **Promote Work-Life Balance**: Encourage employees to take regular breaks, use their vacation days, and disconnect after work hours. Flexible work schedules can also help employees manage their personal and professional responsibilities more effectively.\\n2. **Foster a Supportive Culture**: Create a culture where mental health is openly discussed and supported. Encourage leaders to model healthy behaviors and provide training on recognizing and addressing mental health issues.\\n3. **Provide Resources**: Offer access to mental health resources such as Employee Assistance Programs, counseling services, and stress management workshops. Make sure employees know how to access these resources.\\n4. **Manage Workload**: Ensure that workloads are reasonable and that employees have the resources they need to complete their tasks. Regularly check in with team members to assess their workload and make adjustments as needed.\\n5. **Encourage Social Connections**: Foster a sense of community within the workplace. Encourage team-building activities, social events, and opportunities for employees to connect on a personal level.\\n\\n### Individual Strategies\\n\\n1. **Set Boundaries**: Clearly define your work hours and stick to them. Avoid checking emails or working outside your designated work time.\\n2. **Practice Self-Care**: Engage in activities that help you relax and recharge. This could include exercise, meditation, hobbies, or spending time with loved ones.\\n3. **Seek Support**: Don\u2019t hesitate to reach out for help if you\u2019re struggling. Talk to a trusted colleague, supervisor, or mental health professional.\\n4. **Stay Organized**: Use tools like to-do lists, calendars, and project management software to keep track of your tasks and deadlines. This can help reduce feelings of overwhelm.\\n5. **Take Breaks**: Regular breaks throughout the day can help you stay focused and reduce stress. Even a short walk or a few minutes of deep breathing can make a big difference.\\n\\n## Closing Words\\n\\n\\nMental health is a crucial aspect of overall well-being and productivity in the workplace. By recognizing the factors that affect mental health and implementing strategies to address them, we can create a supportive and healthy work environment. Remember, prioritizing mental health benefits not only individuals but also the entire organization. It\u2019s okay to take a step back, evaluate your well-being, and make necessary adjustments. Your mental health matters."},{"id":"/2024/07/18/T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout","metadata":{"permalink":"/blog/2024/07/18/T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-07-18T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout.md","source":"@site/blog/2024-07-18T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout.md","title":"Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout","description":"Discover the hidden dangers of continuous sprinting in software development. Learn how queuing theory impacts productivity, the adverse effects of long-term high utilization, and strategies to maintain a balanced, efficient, and creative development team.","date":"2024-07-18T00:00:00.000Z","formattedDate":"July 18, 2024","tags":[],"readingTime":5.74,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-07-18T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/long-term-team-productivity","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover the hidden dangers of continuous sprinting in software development. Learn how queuing theory impacts productivity, the adverse effects of long-term high utilization, and strategies to maintain a balanced, efficient, and creative development team.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/7c0143d4-2f2f-4948-8252-7a01bd6977fd/sts3.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=da0a0e9b5a5e965799a227a386dc326ff031d248841747d687421216cb2cf4c2&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout"},"prevItem":{"title":"Improving Mental Health at Work: Strategies for a Healthier Workplace","permalink":"/blog/2024/07/25/T22:00:00.000Z-Improving Mental Health at Work: Strategies for a Healthier Workplace"},"nextItem":{"title":"Boosting Success in Engineering Changes: The Power of Patience & Alignment","permalink":"/blog/2024/06/26/T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment"}},"content":"It has been almost a year since McKinsey released their developer productivity approach. While I fully disagree with their ideas, it highlights the ongoing interest of companies in continuously improving per-developer productivity.\\n\\n\\nRegardless of whether you work within an agile or non-agile framework, most teams seem unable to complete the assigned work for each cycle. This indicates that we are maximizing utilization.\\n\\n\\n## The Queuing Theory Behind Work\\n\\n\\nAs work is a continuous stream of requests, it typically takes the form of a waiting queue and is governed by its principles. This is why queuing theory helps us understand how tasks accumulate and how delays can propagate through the system. By analyzing the flow of tasks and identifying bottlenecks, we can better manage workloads and improve efficiency.\\n\\n\\nHere are two formulas that actually drive the entire system:\\n\\n\\n### Kingman\'s Formula\\n\\n\\nKingman\'s Formula, also known as the VUT equation, is a widely used approximation in queuing theory. It helps estimate the average waiting time in a queue. The formula is given by:\\n\\n\\n\\\\[ W_q \\\\approx \\\\frac{VUT}{1-U} \\\\]\\n\\n\\nWhere:\\n\\n- \\\\( W_q \\\\) is the average waiting time in the queue.\\n- \\\\( V \\\\) is the variability of inter-arrival and service times.\\n- \\\\( U \\\\) is the utilization factor (the ratio of arrival rate to service rate).\\n- \\\\( T \\\\) is the average service time.\\n\\nKingman\'s Formula highlights the impact of variability and utilization on waiting times. As utilization approaches 100%, waiting times increase dramatically, which is why it\'s crucial to avoid overloading systems.\\n\\n\\n### Little\'s Law\\n\\n\\nLittle\'s Law is a fundamental theorem in queuing theory that relates the average number of items in a queue (L), the average arrival rate of items (\u03bb), and the average time an item spends in the system (W). The law is expressed as:\\n\\n\\n\\\\[ L = \\\\lambda W \\\\]\\n\\n\\nWhere:\\n\\n- \\\\( L \\\\) is the average number of items in the system.\\n- \\\\( \\\\lambda \\\\) is the average arrival rate of items.\\n- \\\\( W \\\\) is the average time an item spends in the system.\\n\\nLittle\'s Law is useful for understanding and managing queues in various contexts, including software development. It implies that to reduce the number of tasks in progress (L), you can either decrease the arrival rate of tasks (\u03bb) or reduce the time tasks spend in the system (W). This principle supports the idea of not overloading development teams and allowing adequate time for tasks to be completed efficiently.\\n\\n\\n## Effects of +100% Long-Term  Utilization \\n\\n\\nThere are many systems that follow these principles, allowing us to observe the long-term effects on both human and non-human systems. Spoiler alert: they are quite similar.\\n\\n\\nFor example, when a CPU or any other system is used at 100% for extended periods or overclocked beyond its standard limits, several adverse effects can occur:\\n\\n1. **Heat Generation**: High utilization and overclocking increase the CPU\'s heat output. Excessive heat can lead to thermal throttling, reducing performance, and in extreme cases, hardware damage.\\n2. **Reduced Lifespan**: Constant high usage or overclocking can shorten the CPU\'s lifespan. Increased electrical stress and heat degrade the CPU\'s materials over time.\\n3. **System Instability**: Overclocking can cause crashes, freezes, and unexpected reboots. Even at 100% utilization, a system can become unresponsive if it lacks resources.\\n4. **Increased Power Consumption**: High utilization and overclocking lead to higher power consumption, raising energy costs and stressing the power supply unit (PSU) and cooling systems.\\n5. **Performance Bottlenecks**: Consistent 100% CPU utilization can bottleneck other components like the GPU, RAM, and storage devices, leading to suboptimal performance.\\n6. **Noise Levels**: Higher utilization and overclocking often require more aggressive cooling, increasing noise levels and potentially creating a less comfortable working environment.\\n\\nTranslating this to humans, constant busyness leaves no time for creative thinking or effective problem-solving, leading to burnout, decreased work quality, and overall productivity loss.\\n\\n\\n## Preventing the Effects of High Utilization In Humans\\n\\n\\nSimilar to a CPU, there are ways to mitigate these effects:\\n\\n\\n### Be Strategic About 100% Utilization\\n\\n\\nStrategic planning for 100% utilization during critical periods can be beneficial but should be done cautiously to avoid long-term negative effects.\\n\\n- **Critical Deadlines**: Reserve 100% utilization for critical deadlines or important milestones. Ensure the team understands the importance and temporary nature of this increased workload.\\n- **Clear Communication**: Communicate clearly about the reasons for the increased workload, its expected duration, and available support. Transparency helps manage expectations and reduce stress.\\n- **Support Systems**: Provide additional support during these periods, such as extra resources, temporary team members, or access to mental health services.\\n\\nBy being strategic about 100% utilization and ensuring adequate cooling-down periods, you can maintain a healthy and productive team, ready to tackle challenges without burning out.\\n\\n\\n### Cooling Down\\n\\n\\nAllow periods of reduced workload for recovery and creative thinking to maintain long-term productivity and prevent burnout.\\n\\n- **Scheduled Breaks**: Implement regular breaks throughout the workday. Encourage short breaks to rest and recharge, improving focus and productivity.\\n- **Downtime Projects**: Allocate time for side projects, learning opportunities, or innovation days. This gives a break from usual tasks and fosters creativity.\\n- **Flexible Work Hours**: Offer flexible work hours or remote work options to accommodate different working styles and needs, leading to a more balanced and satisfied team.\\n\\n### Monitoring and Feedback\\n\\n\\nJust as monitoring CPU temperatures and stability is crucial, regularly checking in on your team\'s workload and well-being is essential. This can involve:\\n\\n- **Regular Check-ins**: Schedule regular meetings to discuss workload, challenges, and signs of burnout. Encourage open communication and provide a safe space for concerns.\\n- **Performance Metrics**: Use tools to monitor the team\u2019s performance and workload. Metrics like cycle time, throughput, and work-in-progress (WIP) limits help understand the team\u2019s capacity and adjust workloads accordingly.\\n- **Feedback Loops**: Establish continuous feedback loops for team input on processes, workload, and job satisfaction. This helps make informed decisions to improve productivity and well-being.\\n\\n### Preventing Bottlenecks\\n\\n\\nTo prevent bottlenecks in your development process, consider these strategies:\\n\\n- **Task Prioritization**: Prioritize tasks by urgency and importance. Ensure critical tasks are completed first to avoid overwhelming the team with less important work.\\n- **Workload Distribution**: Distribute tasks evenly among team members to avoid overburdening individuals, which can lead to delays and decreased productivity.\\n- **Cross-Training**: Encourage cross-training to ensure multiple team members can handle different tasks, reducing dependency on single individuals and allowing for a more flexible team.\\n\\n## Final Thoughts\\n\\n\\nIt\'s easy to fall into the trap of continuous sprinting and overutilization at work, so recognizing the importance of balance is crucial. Allowing time for cooldown periods, fostering creativity, and ensuring a healthy work environment are essential for long-term success.\\n\\n\\nSustainable productivity is about creating an environment where teams can thrive, innovate, and deliver high-quality work consistently. By being strategic and mindful, we can achieve a more productive and satisfied team ready to tackle any challenge."},{"id":"/2024/06/26/T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment","metadata":{"permalink":"/blog/2024/06/26/T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-06-26T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment.md","source":"@site/blog/2024-06-26T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment.md","title":"Boosting Success in Engineering Changes: The Power of Patience & Alignment","description":"Explore how patience and knowledge alignment can enhance the success rate of implementing new methodologies in engineering departments. Understand the role of culture, transparent communication, and leadership in fostering change.","date":"2024-06-26T00:00:00.000Z","formattedDate":"June 26, 2024","tags":[],"readingTime":2.885,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-06-26T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/boosting-success-in-engineering-changes","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore how patience and knowledge alignment can enhance the success rate of implementing new methodologies in engineering departments. Understand the role of culture, transparent communication, and leadership in fostering change.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/8e64c321-a8ac-45d0-9177-d2daffbc25f8/lotus3.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=e7c1116f6e9db6cff03e2862963627c470b27e7dc031e7b500c571509866f8ca&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Boosting Success in Engineering Changes: The Power of Patience & Alignment"},"prevItem":{"title":"Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout","permalink":"/blog/2024/07/18/T00:00:00.000Z-Long-Term Team Productivity: The Risks of Continuous Sprinting and How to Prevent Team Burnout"},"nextItem":{"title":"Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams","permalink":"/blog/2024/06/12/T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams"}},"content":"Ever found yourself in engineering departments where tools and practices are adopted and discarded rapidly?\\n\\n\\nOne example that might resonate are companies that try to implement their goals through OKRs. Typically, the first year doesn\'t yield substantial value, leading to a gradual disregard in the second year. Before the close of year two, a new acronym supersedes the existing goal definition, setting off yet another cycle.\\n\\n\\n![ep1.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/3816ad44-52a9-4057-83c7-faac3b9e61b8/ep1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TXZD6IVJ%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDvuCKEP3jbPBLQKeIqfmBx%2BxDHFunROfLcgrcQxLVcggIgaYVv7%2F%2B%2FdQ5e273qo6VHVywHCynoag3vTRLvAZHlPL8qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDdLQn5J9BdoE4dl%2ByrcA%2FbYycgT52TKq%2BS2vuQvC4CNUK4UG3VRz3%2F%2BNkY23ymVvham7lQ1MKoZqEgudSJ9cSLqTsk01pzqTqhQiXKAMrSqcUx5W1uBj0MVAHjCU9SA0%2BEz%2FheffdvBN7luSAcZfuScSlnlHlZW9MXv6fBCbUZF1Unx6aFKefUWxA2JlvLq2%2B%2F0W31yUyR5EuMlrEu1XaDY6e%2Bo4SZZK0feHrE9RqQD6ObAs35a0tD9GCsi0XMTciMKgAd6%2Fs6qzkmrc%2BQbU7u9IEJZH5wa9wJc8aLKFp8t6cQBNcTNMk6DMxAcsBW5DNLVZ4NIf0igDX6%2FdBX%2F2tZgieNEhVKa4DxUY2oaFEdbmBcaJcEhKVFWlZPUqIQaeD0smw%2F77MKF9F84VIlhvwJbCjz6XKHemt7mMi2Y%2FK1fW2fBGF9IBO4Utx6MaIX1RqiCbOvYCmV9E2194OPxNGSUU0GKJBUBXCiycKEGRjyfiF%2FdlGwtEW%2F7PafkzT%2FOYJNtYyIwT4TwuFdEtBwA4oNHT12nwZb8haLEmI3ymWFER5eeRoL7SUVPRqyZ7e9f87bfUl%2BNJtwXR%2Bvy6eOeuu10Gs0lXrP1ya7yEO6wPvo4HXpkPRtNJ37KZQ3MEQd0vjXfjoGjZXys0tLQMMmdrcQGOqUBUKi12VFvcAfjhKJ2DYrU64jASEXhOq6Gt%2Fg%2FAEf9SkNAJ8wuGhsVOAcmcA2TqCghK0isXlGdu3R%2F20ayJXTM20xa1ntbjR%2FFkWoS%2BOe02GhL%2BwkIL4sR1ibN%2F%2BFRPIxfa%2F2ZFrnbV0OzK7aGWboMTYGwN7dA78gaJaOqmjHGYpiSaChdOjDUl7xu8BEApX4linsSfdfewwhJkMPBAE4LvpOQX%2Bis&X-Amz-Signature=9f140f9726439b44697da47b8f577b843c7751aa7b510c81c462e7e22328afdd&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Understanding Why New Methodology Implementations Often Fall Short\\n\\n\\nWhether we\'re discussing company-wide methodologies like OKRs or team-specific practices like pair programming, it\'s common to see implementations fall short. Often, methodologies bear the brunt of the blame due to misalignment.\\n\\n\\nLet\'s delve into the reasons behind these failures, and assess whether the methodology itself is at fault.\\n\\n- **Difficulty in Tracking Results**: When new methods are introduced, it\'s often challenging to see immediate results or advantages. This can lead to premature rejection of the new approach.\\n- **Insufficient Engagement**: This covers situations where members aren\'t entirely on board with the new process. This could stem from inadequate understanding, disagreement with the methodology, or simple resistance to change.\\n\\nWhile there are other reasons for failure, they typically fall under or relate closely to these main points.\\n\\n\\n## Boosting Success Rates via Engineering Culture\\n\\n\\nAs we\'ve previously discussed, enhancing the success rate of engineering changes hinges on shifts in the following cultural aspects:\\n\\n\\n### Patience\\n\\n\\n> Remember, results take time\\n\\n\\nTo foster patience within the engineering department, it\'s essential that the company culture not only values it, but actively encourages it. Here\'s how:\\n\\n- **Celebrate Patience**: Recognize and reward patience in your workspace. This could involve acknowledging those who demonstrate patience when faced with challenges, or associating rewards and promotions with the successful long-term execution of changes.\\n- **Highlight the Role of Patience**: Keep reminding your people about the crucial role patience plays in long-term success. Share anecdotes or instances where patience has proven beneficial in the past.\\n- **Lead by Example**: Leadership should portray patience in their actions and decision-making. This means resisting the urge to follow the latest trends without adequate evaluation, and allowing new processes sufficient time to integrate and yield results.\\n\\n![patience.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/bbd1c363-b3fc-484c-8d7d-2c8df4994176/patience.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TXZD6IVJ%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDvuCKEP3jbPBLQKeIqfmBx%2BxDHFunROfLcgrcQxLVcggIgaYVv7%2F%2B%2FdQ5e273qo6VHVywHCynoag3vTRLvAZHlPL8qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDdLQn5J9BdoE4dl%2ByrcA%2FbYycgT52TKq%2BS2vuQvC4CNUK4UG3VRz3%2F%2BNkY23ymVvham7lQ1MKoZqEgudSJ9cSLqTsk01pzqTqhQiXKAMrSqcUx5W1uBj0MVAHjCU9SA0%2BEz%2FheffdvBN7luSAcZfuScSlnlHlZW9MXv6fBCbUZF1Unx6aFKefUWxA2JlvLq2%2B%2F0W31yUyR5EuMlrEu1XaDY6e%2Bo4SZZK0feHrE9RqQD6ObAs35a0tD9GCsi0XMTciMKgAd6%2Fs6qzkmrc%2BQbU7u9IEJZH5wa9wJc8aLKFp8t6cQBNcTNMk6DMxAcsBW5DNLVZ4NIf0igDX6%2FdBX%2F2tZgieNEhVKa4DxUY2oaFEdbmBcaJcEhKVFWlZPUqIQaeD0smw%2F77MKF9F84VIlhvwJbCjz6XKHemt7mMi2Y%2FK1fW2fBGF9IBO4Utx6MaIX1RqiCbOvYCmV9E2194OPxNGSUU0GKJBUBXCiycKEGRjyfiF%2FdlGwtEW%2F7PafkzT%2FOYJNtYyIwT4TwuFdEtBwA4oNHT12nwZb8haLEmI3ymWFER5eeRoL7SUVPRqyZ7e9f87bfUl%2BNJtwXR%2Bvy6eOeuu10Gs0lXrP1ya7yEO6wPvo4HXpkPRtNJ37KZQ3MEQd0vjXfjoGjZXys0tLQMMmdrcQGOqUBUKi12VFvcAfjhKJ2DYrU64jASEXhOq6Gt%2Fg%2FAEf9SkNAJ8wuGhsVOAcmcA2TqCghK0isXlGdu3R%2F20ayJXTM20xa1ntbjR%2FFkWoS%2BOe02GhL%2BwkIL4sR1ibN%2F%2BFRPIxfa%2F2ZFrnbV0OzK7aGWboMTYGwN7dA78gaJaOqmjHGYpiSaChdOjDUl7xu8BEApX4linsSfdfewwhJkMPBAE4LvpOQX%2Bis&X-Amz-Signature=b74c5099333a92fe4b484f49bdb63e762659e2154eb010bf7b04ced6a4b41520&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Aligning Knowledge\\n\\n\\n> Teamwork makes the dream work.\\n\\n\\nTo effectively share knowledge throughout the engineering department, it\'s essential that our company culture actively supports and fosters it. This includes:\\n\\n- **Transparent communication**: It\'s crucial for everyone to understand why we\'re making changes and what we should anticipate. A thorough explanation of the process, timeline, potential challenges, and anticipated benefits can ensure we\'re all on the same page.\\n- **Offering support and resources**: As we\'ve discussed, lack of support can lead to frustration and potential failure. We must ensure our people have the necessary resources to successfully implement new methodologies.\\n- **Promoting open dialogue**: We should create spaces for our people to share their thoughts, concerns, and feelings about upcoming changes. This approach encourages a sense of ownership and commitment, which can minimize the risk of premature termination.\\n\\n![teamwork.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/33d6a69c-f572-4538-88d7-e722705b7191/teamwork.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TXZD6IVJ%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDvuCKEP3jbPBLQKeIqfmBx%2BxDHFunROfLcgrcQxLVcggIgaYVv7%2F%2B%2FdQ5e273qo6VHVywHCynoag3vTRLvAZHlPL8qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDDdLQn5J9BdoE4dl%2ByrcA%2FbYycgT52TKq%2BS2vuQvC4CNUK4UG3VRz3%2F%2BNkY23ymVvham7lQ1MKoZqEgudSJ9cSLqTsk01pzqTqhQiXKAMrSqcUx5W1uBj0MVAHjCU9SA0%2BEz%2FheffdvBN7luSAcZfuScSlnlHlZW9MXv6fBCbUZF1Unx6aFKefUWxA2JlvLq2%2B%2F0W31yUyR5EuMlrEu1XaDY6e%2Bo4SZZK0feHrE9RqQD6ObAs35a0tD9GCsi0XMTciMKgAd6%2Fs6qzkmrc%2BQbU7u9IEJZH5wa9wJc8aLKFp8t6cQBNcTNMk6DMxAcsBW5DNLVZ4NIf0igDX6%2FdBX%2F2tZgieNEhVKa4DxUY2oaFEdbmBcaJcEhKVFWlZPUqIQaeD0smw%2F77MKF9F84VIlhvwJbCjz6XKHemt7mMi2Y%2FK1fW2fBGF9IBO4Utx6MaIX1RqiCbOvYCmV9E2194OPxNGSUU0GKJBUBXCiycKEGRjyfiF%2FdlGwtEW%2F7PafkzT%2FOYJNtYyIwT4TwuFdEtBwA4oNHT12nwZb8haLEmI3ymWFER5eeRoL7SUVPRqyZ7e9f87bfUl%2BNJtwXR%2Bvy6eOeuu10Gs0lXrP1ya7yEO6wPvo4HXpkPRtNJ37KZQ3MEQd0vjXfjoGjZXys0tLQMMmdrcQGOqUBUKi12VFvcAfjhKJ2DYrU64jASEXhOq6Gt%2Fg%2FAEf9SkNAJ8wuGhsVOAcmcA2TqCghK0isXlGdu3R%2F20ayJXTM20xa1ntbjR%2FFkWoS%2BOe02GhL%2BwkIL4sR1ibN%2F%2BFRPIxfa%2F2ZFrnbV0OzK7aGWboMTYGwN7dA78gaJaOqmjHGYpiSaChdOjDUl7xu8BEApX4linsSfdfewwhJkMPBAE4LvpOQX%2Bis&X-Amz-Signature=178c4675a0ba7939cb6b570ca5e0a7a1505becc2cf03d26b319a84199ce44355&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Final thoughts\\n\\n\\nRemember, embracing change is a journey, not a race. It\'s important to acknowledge that while the process may be fraught with challenges, the benefits of perseverance  often outweigh the initial discomfort or resistance.\\n\\n\\nPatience, coupled with knowledge alignment, can significantly increase the success rate of implementing new methodologies in engineering departments. By fostering a culture that values patience and open communication, we can better adapt to changes, overcome challenges, and achieve our long-term goals."},{"id":"/2024/06/12/T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams","metadata":{"permalink":"/blog/2024/06/12/T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-06-12T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams.md","source":"@site/blog/2024-06-12T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams.md","title":"Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams","description":"Discover the unique roles and contributions of Superstar and Rockstar engineers in tech teams. Learn how to balance innovation and stability for optimal productivity and competitiveness","date":"2024-06-12T00:00:00.000Z","formattedDate":"June 12, 2024","tags":[],"readingTime":2.985,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-06-12T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/superstar-vs-rockstar-engineers","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover the unique roles and contributions of Superstar and Rockstar engineers in tech teams. Learn how to balance innovation and stability for optimal productivity and competitiveness","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/6cc9f17b-747a-4a8b-a526-e26d9b4e9486/sr2.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=4efc66ae8bd67e099ff62bb2a31cdc1099a111222b0abc296a9d9b5ffac4971a&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams"},"prevItem":{"title":"Boosting Success in Engineering Changes: The Power of Patience & Alignment","permalink":"/blog/2024/06/26/T22:00:00.000Z-Boosting Success in Engineering Changes: The Power of Patience & Alignment"},"nextItem":{"title":"Key Strategies for Building High-Performance Teams in Tech","permalink":"/blog/2024/06/07/T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech"}},"content":"Have you noticed a broad spectrum of aspirations among your team members?\\n\\n\\nSome individuals are eager to tackle new challenges and progress rapidly, while others prefer maintaining the status quo. Do you find one approach more valuable than the other, and if so, why?\\n\\n\\nDrawing inspiration from the book Radical Candor, this article will discuss the categorization of engineers into Superstars and Rockstars. We\'ll examine their unique traits, contributions, and roles within the development process.\\n\\n\\n## Superstar Engineers\\n\\n\\nSuperstar Engineers are those who strive for more than just the ordinary, who are ready to take calculated risks for innovation. Within the technology sector, they act as catalysts for change and disruption.\\n\\n\\nSome traits you can find in the work of these engineers:\\n\\n- They continuously pursue growth and development\\n- They\u2019re not content with the status quo\\n- They\u2019re willing to take risks to innovate\\n- They\u2019re frequently the driving force behind breakthroughs  in technologies, processes, practices, or products\\n- They\u2019re motivated by a passion for innovation and growth\\n- They propel the team forward, ensuring it stays relevant and competitive\\n\\n## Rockstar Engineers\\n\\n\\nRockstar Engineers are the backbone of the team, providing the dependability that keeps everything running smoothly. Without their steady influence, the boundary-pushing work of Superstars would be far less effective.\\n\\n\\nSome traits you can find in the work of these engineers:\\n\\n- They provide stability and consistency within the team.\\n- They\'re domain experts, with a deep understanding of particular systems or processes\\n- They ensure the smooth running of systems and processes\\n- They manage and enhance existing systems\\n- They\'re highly reliable, often serving as the go-to person for issues within their domain\\n- They\'re incredibly dependable, often the first person you\'d call for problems in their area\\n- They value quality and take genuine pride in their work\\n- While they may not be the most visible, their contribution to the team and the business is absolutely critical\\n\\n## Types of Engineers and engineering strategy\\n\\n\\nHaving discussed different types of engineers, let\'s now explore how this impacts various aspects of our company or team.\\n\\n\\n### Team & Company Composition\\n\\n\\nIt\'s crucial to strike a balance between these two types of engineers inside a team or company. The optimal engineering strategy blends Superstars and Rockstars, ensuring the team has both the stability to manage current tasks and the innovative spirit required to stay competitive.\\n\\n\\nAn overabundance of Superstars may lead to instability due to frequent changes, causing the team to remain in a perpetual state of upheaval.\\n\\n\\nOn the other hand, an excess of Rockstars might lead to stagnation, preventing the team from adapting to necessary changes and reducing productivity.\\n\\n\\n### Remuneration & Growth\\n\\n\\nEqually important than having the correct profiles is ensuring that both are valued equally. \\n\\n\\nThis is often a challenge as engineering ladders tend to favor Superstars, who are generally more motivated to climb the ladder. \\nThese ladders often dictate an employee\'s financial compensation. Leading to Superstars accelerating their remuneration faster than Rockstars, who may hit a pay ceiling. \\nFor this, it\'s important to tie compensation not to a specific role, but to the unique value an individual contributes to the company or team.\\n\\n\\n## Closing thoughts\\n\\n\\nRecognizing this duality and managing it effectively is one of the key roles of leadership in the tech industry. By acknowledging and valuing the unique contributions of both Superstars and Rockstars, leaders can foster a diverse, balanced, and highly productive team. This duality is not a hindrance, but a strength that can be harnessed to drive a team or company\'s success."},{"id":"/2024/06/07/T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech","metadata":{"permalink":"/blog/2024/06/07/T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-06-07T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech.md","source":"@site/blog/2024-06-07T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech.md","title":"Key Strategies for Building High-Performance Teams in Tech","description":"Explore the journey from forming a team to creating a high-performance tech team. Discover the stages of team development, learn about traits of high-performance teams, and uncover effective tools to enhance team dynamics for optimum productivity.","date":"2024-06-07T00:00:00.000Z","formattedDate":"June 7, 2024","tags":[],"readingTime":6.06,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-06-07T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/key-strategies-for-building-high","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the journey from forming a team to creating a high-performance tech team. Discover the stages of team development, learn about traits of high-performance teams, and uncover effective tools to enhance team dynamics for optimum productivity.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/707bb04d-d35a-4e59-b0b2-730f51bf620e/team1.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=eaff30c4c0c10089908a761722a936172bb5d5882123e67d8d2fbe978c533f89&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Key Strategies for Building High-Performance Teams in Tech"},"prevItem":{"title":"Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams","permalink":"/blog/2024/06/12/T22:00:00.000Z-Superstar vs. Rockstar Engineers: Balancing Innovation and Stability in Tech Teams"},"nextItem":{"title":"Most Engineering Hiring Processes Are Broken","permalink":"/blog/2024/05/30/T22:00:00.000Z-Most Engineering Hiring Processes Are Broken"}},"content":"We all continuously hear about high-performance teams and the importance of becoming one. But there is actual no real definition of it. Is it?\\n\\n- A team that releases many cards\\n- The one that delivers high-quality code\\n- The one that has all the best engineers\\n\\nThe answer, at least for me, is none of the above. \\n\\n\\n## What is a Team?\\n\\n\\nA definition by Professor Leigh Thompson of the Kellogg School of Management: \\n\\n\\n> A team is a group of people who are interdependent with respect to   \\n> information, resources, knowledge and skills and who seek to combine   \\n> their efforts to achieve a common goal.\\n\\n\\nA group itself does not represent a team, for a group to become a team, there is a need for a common goal. As a group evolves into a team, it needs to go through several transformations.\\n\\n\\n## Evolution From Group to Team\\n\\n\\nTeams typically go through several stages of development. These stages represent the journey from a group of strangers to a united group with common goals.\\n\\n\\nTuckman\'s model describes the four stages of team development as:\\n\\n1. **Forming**: This is the initial stage where team members meet for the first time. Everyone is polite and positive, and there are high expectations but little understanding of the tasks ahead.\\n2. **Storming**: As team members start to work together, differences of opinion may lead to conflict. This stage is marked by resistance, competition, and conflict as individual personalities emerge.\\n3. **Norming**: Gradually, the team moves into the norming stage where they start to resolve their differences, appreciate colleagues\' strengths, and respect the leader\'s authority. The team begins to develop cohesion and unity.\\n4. **Performing**: This is the stage where the team is fully functional and works towards achieving the team\'s goals. There is a strong bond between team members, and everyone works collaboratively and efficiently.\\n\\nOn the top of Performing, we could say there is o**utperforming** is where **High-Performance** teams live. This final stage is reached when the team consistently exceeds expectations and delivers exceptional results. The team is highly collaborative, innovative, and operates with a shared vision and purpose. \\n\\n\\n## Transitioning from One Team Stage to Another\\n\\n1. **Forming to Storming**: The transition from forming to storming requires team members to start working together and engaging in discussions and decision-making. It\'s important for each member to feel comfortable expressing their opinions and ideas, even if they differ from others. This phase often triggers conflicts due to diverse views, but it is a crucial part of the team\'s evolution, as it allows members to understand and appreciate each other\'s perspectives.\\n2. **Storming to Norming**: The shift from storming to norming is marked by the resolution of conflicts and the establishment of processes and norms. This stage requires effective conflict management and open communication. Besides, the team should focus on recognizing and appreciating the strengths of each member and fostering a collaborative environment. The team begins to feel a sense of unity, and a collaborative culture starts to develop.\\n3. **Norming to Performing**: Moving from norming to performing entails the team becoming more focused on achieving shared goals. The team has now established effective working relationships and understood each other\'s working styles. At this stage, it\'s important to stay focused on the team\'s objectives and ensure everyone is working collaboratively towards them. The team becomes more autonomous, with members taking on responsibilities and roles that align with their strengths.\\n4. **Performing to Outperforming (High-Performance)**: The leap from performing to outperforming is achieved by exceeding expectations consistently. It\'s vital to maintain the momentum, continuously innovate, and strive for improvement. Commitment to the team\'s shared vision and purpose, trust among team members, and open communication are crucial factors in this stage. The team should also be flexible in adapting to changes and challenges and should be driven to continually improve their performance.\\n\\n![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/aef88634-c6eb-45e7-a72c-5d2ffd4c7737/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RHCGMUO6%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3rynQTZV%2BJFFa2PlmHIv7usOv9%2FnEUL8U5vhBpm1xxAiAA4sewwC%2FfYIZsAHAwDYKkSO1b0HDpEyUKXKClooQTqiqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM0oJA40bCGC3mtcSRKtwDpWH4OshfNZoKe9TBdKwTx3wUbCLTE5yRJIHvSfNjzD%2FVoe%2Fmud7oc9zYQdokFeis2AIy6%2Bw1tmObD7ByBprOuPr%2Fqn6RjoR4AxPTE2f6T5oAZ8fXD8PtI%2FQbk3kLgwFgs9oWDvTLNYrQoZlyuFFN1tXaEM9hkjVOPMW3xdZjBW8jIcOru4CveAzuZUGBtoMdgNNeEj70dM4aoBD%2FHLOHg5hhuaWFcCrUQdY550wbhhXy40RXCQz5HbPJft0dF2Q1cAbhiHa9F%2FIEcUOTKBDuSmGFfK%2BD%2B8mnATjGA1F%2BazqpiIBgRORLjCJ6pXzRb5KPtXaA3qr1vK7bGvpanRnBLNu3xeu2Qywp8E4Z5oy9mZdt8kSh9wWyeo2vQweBaIqPXwck1xJygM1K9%2FQIKBf0Hy3v0KYgTDIQg%2Fb6L%2FbNJFf0y35MGtXZY2Ux2A1NQ4GJ2vQ3wX3%2BQaq82yxvjmwyH6%2BdJLyp%2BbVKBHoI0srdEdQUG91Bx3UNph%2FD9UE36ukYI4xGataoBNxUmvo16UQODavVfCGrRbafZ5rbR4Zjdk8PRhRmLQ6q%2BNNn148qwutvpyLLBGT%2FDazPokEVm1v3i7tmbKFc8YNFyLnvVbojDxfGy2QgunhDqpLrfx4wnJ2txAY6pgE0UKYvx0nKt9AYxWrDsDKAHxzAtPO7xhpGvoQlrO2PT6sqjiXcjeoGXS5ESixN4ue6X%2FWyJ755Rm52Oo5LFO2b%2FVkwpX9q89bz%2BagJv8y5zyQg0s3SGiKiECqbJ3ZJj8FQeHSC2VWSNkpsVvUZYre0RRF763fjhzSHVoECeSQ4buBhIiCW6s1%2FXb3z7or78ByldIN1fUZ41z059iG4ubv06DOrMPMu&X-Amz-Signature=be975562d7898da976dd27df71b42e3779ad19d119fbcddaf520307279f38d29&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Traits Of a High-Performance Team\\n\\n- **Trust**: This refers to the confidence among team members that each person will fulfill their responsibilities and maintain a commitment to the common goal.\\n- **Mutual Support**: This involves members actively helping each other to succeed, promoting a culture of cooperation and interdependence.\\n- **Drive**: This indicates the team\'s collective motivation and ambition to achieve their goals and continually improve their performance.\\n- **Edit Their Needs**: This implies the team\'s ability to self-assess and adjust their requirements and strategies based on the evolving circumstances.\\n- **Open Communication**: This refers to the team\'s ability to communicate effectively, ensuring that everyone feels heard and understood. Open communication fosters transparency and encourages team members to share their ideas and feedback.\\n- **Do Not Depend on a Leader**: This means the team operates in a decentralized manner where every member takes initiative and responsibility, rather than relying on a single leader for direction and decisions.\\n\\n## Example Tools To Improve Team Traits\\n\\n\\n### Getting to Know the Human Behind: Team Personal Presentations\\n\\n\\nTeam Personal Presentations is an exercise where each team member creates a short presentation about themselves to share with the rest of the team. This can include information about their background, interests, strengths, weaknesses, and even fun facts. The goal is to allow team members to get to know each other on a deeper level, beyond just their professional roles. \\n\\nThis exercise can help to build stronger relationships within the team, foster empathy and understanding, and improve team cohesion. It gives team members an insight into who their colleagues really are, which can lead to greater trust, better communication, and a more effective working environment.\\n\\n\\n![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/e79385f5-d419-4a56-bda7-84f370889a82/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RHCGMUO6%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3rynQTZV%2BJFFa2PlmHIv7usOv9%2FnEUL8U5vhBpm1xxAiAA4sewwC%2FfYIZsAHAwDYKkSO1b0HDpEyUKXKClooQTqiqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM0oJA40bCGC3mtcSRKtwDpWH4OshfNZoKe9TBdKwTx3wUbCLTE5yRJIHvSfNjzD%2FVoe%2Fmud7oc9zYQdokFeis2AIy6%2Bw1tmObD7ByBprOuPr%2Fqn6RjoR4AxPTE2f6T5oAZ8fXD8PtI%2FQbk3kLgwFgs9oWDvTLNYrQoZlyuFFN1tXaEM9hkjVOPMW3xdZjBW8jIcOru4CveAzuZUGBtoMdgNNeEj70dM4aoBD%2FHLOHg5hhuaWFcCrUQdY550wbhhXy40RXCQz5HbPJft0dF2Q1cAbhiHa9F%2FIEcUOTKBDuSmGFfK%2BD%2B8mnATjGA1F%2BazqpiIBgRORLjCJ6pXzRb5KPtXaA3qr1vK7bGvpanRnBLNu3xeu2Qywp8E4Z5oy9mZdt8kSh9wWyeo2vQweBaIqPXwck1xJygM1K9%2FQIKBf0Hy3v0KYgTDIQg%2Fb6L%2FbNJFf0y35MGtXZY2Ux2A1NQ4GJ2vQ3wX3%2BQaq82yxvjmwyH6%2BdJLyp%2BbVKBHoI0srdEdQUG91Bx3UNph%2FD9UE36ukYI4xGataoBNxUmvo16UQODavVfCGrRbafZ5rbR4Zjdk8PRhRmLQ6q%2BNNn148qwutvpyLLBGT%2FDazPokEVm1v3i7tmbKFc8YNFyLnvVbojDxfGy2QgunhDqpLrfx4wnJ2txAY6pgE0UKYvx0nKt9AYxWrDsDKAHxzAtPO7xhpGvoQlrO2PT6sqjiXcjeoGXS5ESixN4ue6X%2FWyJ755Rm52Oo5LFO2b%2FVkwpX9q89bz%2BagJv8y5zyQg0s3SGiKiECqbJ3ZJj8FQeHSC2VWSNkpsVvUZYre0RRF763fjhzSHVoECeSQ4buBhIiCW6s1%2FXb3z7or78ByldIN1fUZ41z059iG4ubv06DOrMPMu&X-Amz-Signature=42dacb6d0ed803f7328528cbde35eca7402eaa28bcd05960c0639c9c611b3e6e&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Getting to Know How We Exchange: Communication Preferences\\n\\n\\nCommunication Preferences is an activity that helps team members understand each other\'s preferred methods of communication. This can include when and how they like to receive information, how they handle conflict, and how they give and receive feedback. Understanding these preferences can greatly improve team collaboration and prevent misunderstandings.\\n\\n\\n![https://excalidraw.com/#json=STnnDPzkDh1E7vMwED4Ln,53YwRgNjbRDrcQiMz6lfLQ](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/e53de265-96d6-44b1-b4df-c182f7d5be88/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RHCGMUO6%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3rynQTZV%2BJFFa2PlmHIv7usOv9%2FnEUL8U5vhBpm1xxAiAA4sewwC%2FfYIZsAHAwDYKkSO1b0HDpEyUKXKClooQTqiqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM0oJA40bCGC3mtcSRKtwDpWH4OshfNZoKe9TBdKwTx3wUbCLTE5yRJIHvSfNjzD%2FVoe%2Fmud7oc9zYQdokFeis2AIy6%2Bw1tmObD7ByBprOuPr%2Fqn6RjoR4AxPTE2f6T5oAZ8fXD8PtI%2FQbk3kLgwFgs9oWDvTLNYrQoZlyuFFN1tXaEM9hkjVOPMW3xdZjBW8jIcOru4CveAzuZUGBtoMdgNNeEj70dM4aoBD%2FHLOHg5hhuaWFcCrUQdY550wbhhXy40RXCQz5HbPJft0dF2Q1cAbhiHa9F%2FIEcUOTKBDuSmGFfK%2BD%2B8mnATjGA1F%2BazqpiIBgRORLjCJ6pXzRb5KPtXaA3qr1vK7bGvpanRnBLNu3xeu2Qywp8E4Z5oy9mZdt8kSh9wWyeo2vQweBaIqPXwck1xJygM1K9%2FQIKBf0Hy3v0KYgTDIQg%2Fb6L%2FbNJFf0y35MGtXZY2Ux2A1NQ4GJ2vQ3wX3%2BQaq82yxvjmwyH6%2BdJLyp%2BbVKBHoI0srdEdQUG91Bx3UNph%2FD9UE36ukYI4xGataoBNxUmvo16UQODavVfCGrRbafZ5rbR4Zjdk8PRhRmLQ6q%2BNNn148qwutvpyLLBGT%2FDazPokEVm1v3i7tmbKFc8YNFyLnvVbojDxfGy2QgunhDqpLrfx4wnJ2txAY6pgE0UKYvx0nKt9AYxWrDsDKAHxzAtPO7xhpGvoQlrO2PT6sqjiXcjeoGXS5ESixN4ue6X%2FWyJ755Rm52Oo5LFO2b%2FVkwpX9q89bz%2BagJv8y5zyQg0s3SGiKiECqbJ3ZJj8FQeHSC2VWSNkpsVvUZYre0RRF763fjhzSHVoECeSQ4buBhIiCW6s1%2FXb3z7or78ByldIN1fUZ41z059iG4ubv06DOrMPMu&X-Amz-Signature=5060c36f7aecf8198000140395ce7d47fba8e16619d2d1ea758c1e0ed1c621c1&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Getting to Know What We Care About: Moving motivators\\n\\n\\nThe Moving Motivators exercise is a tool from Management 3.0 that helps in understanding the intrinsic motivations of individuals within a team. It involves a deck of ten cards, each representing a key motivator such as acceptance, curiosity, freedom, or power. \\n\\nThe participant orders these cards in order of personal importance. Then, they consider a recent change in their work or life and move the cards up or down based on whether this change has positively or negatively impacted each motivator. This provides valuable insights into what drives a person and how changes affect their motivation, which is crucial for effective team management and leadership.\\n\\n\\n![https://excalidraw.com/#json=9p-2kVpQEkhCmKF-EouDI,OCPiUgI6FaQHTX1JMIKWeg](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/57afc750-5aeb-44fc-8ae0-0db80f16946f/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RHCGMUO6%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3rynQTZV%2BJFFa2PlmHIv7usOv9%2FnEUL8U5vhBpm1xxAiAA4sewwC%2FfYIZsAHAwDYKkSO1b0HDpEyUKXKClooQTqiqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM0oJA40bCGC3mtcSRKtwDpWH4OshfNZoKe9TBdKwTx3wUbCLTE5yRJIHvSfNjzD%2FVoe%2Fmud7oc9zYQdokFeis2AIy6%2Bw1tmObD7ByBprOuPr%2Fqn6RjoR4AxPTE2f6T5oAZ8fXD8PtI%2FQbk3kLgwFgs9oWDvTLNYrQoZlyuFFN1tXaEM9hkjVOPMW3xdZjBW8jIcOru4CveAzuZUGBtoMdgNNeEj70dM4aoBD%2FHLOHg5hhuaWFcCrUQdY550wbhhXy40RXCQz5HbPJft0dF2Q1cAbhiHa9F%2FIEcUOTKBDuSmGFfK%2BD%2B8mnATjGA1F%2BazqpiIBgRORLjCJ6pXzRb5KPtXaA3qr1vK7bGvpanRnBLNu3xeu2Qywp8E4Z5oy9mZdt8kSh9wWyeo2vQweBaIqPXwck1xJygM1K9%2FQIKBf0Hy3v0KYgTDIQg%2Fb6L%2FbNJFf0y35MGtXZY2Ux2A1NQ4GJ2vQ3wX3%2BQaq82yxvjmwyH6%2BdJLyp%2BbVKBHoI0srdEdQUG91Bx3UNph%2FD9UE36ukYI4xGataoBNxUmvo16UQODavVfCGrRbafZ5rbR4Zjdk8PRhRmLQ6q%2BNNn148qwutvpyLLBGT%2FDazPokEVm1v3i7tmbKFc8YNFyLnvVbojDxfGy2QgunhDqpLrfx4wnJ2txAY6pgE0UKYvx0nKt9AYxWrDsDKAHxzAtPO7xhpGvoQlrO2PT6sqjiXcjeoGXS5ESixN4ue6X%2FWyJ755Rm52Oo5LFO2b%2FVkwpX9q89bz%2BagJv8y5zyQg0s3SGiKiECqbJ3ZJj8FQeHSC2VWSNkpsVvUZYre0RRF763fjhzSHVoECeSQ4buBhIiCW6s1%2FXb3z7or78ByldIN1fUZ41z059iG4ubv06DOrMPMu&X-Amz-Signature=dd714cf91e084276a5b0aababc0268752d6afb4f9e563c1d90baa767c45efbb2&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Getting to Know What Area to Improve Next: Team Health Check\\n\\n\\nThe Team Health Check is an exercise developed by Spotify to assess the health of their teams. \\n\\n\\nTeams collectively assess how they are doing on several aspects, such as collaboration, value delivery, mission, fun, learning, and leadership. Each team member votes on each aspect using a traffic light system (green for good, yellow for okay, red for not good). \\n\\n\\nThe results are then discussed openly, helping to facilitate communication about challenges, improvements, and actions to be taken. The exercise is not about blaming or pointing fingers but about understanding and improving team dynamics and performance.\\n\\n\\n![https://excalidraw.com/#json=RnIvsEE-MBK6_FtvveL92,xfbgr6blEekHkZyGb3E7og](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/5683f85a-60a7-4bb0-970e-e79c2ac3a537/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RHCGMUO6%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3rynQTZV%2BJFFa2PlmHIv7usOv9%2FnEUL8U5vhBpm1xxAiAA4sewwC%2FfYIZsAHAwDYKkSO1b0HDpEyUKXKClooQTqiqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM0oJA40bCGC3mtcSRKtwDpWH4OshfNZoKe9TBdKwTx3wUbCLTE5yRJIHvSfNjzD%2FVoe%2Fmud7oc9zYQdokFeis2AIy6%2Bw1tmObD7ByBprOuPr%2Fqn6RjoR4AxPTE2f6T5oAZ8fXD8PtI%2FQbk3kLgwFgs9oWDvTLNYrQoZlyuFFN1tXaEM9hkjVOPMW3xdZjBW8jIcOru4CveAzuZUGBtoMdgNNeEj70dM4aoBD%2FHLOHg5hhuaWFcCrUQdY550wbhhXy40RXCQz5HbPJft0dF2Q1cAbhiHa9F%2FIEcUOTKBDuSmGFfK%2BD%2B8mnATjGA1F%2BazqpiIBgRORLjCJ6pXzRb5KPtXaA3qr1vK7bGvpanRnBLNu3xeu2Qywp8E4Z5oy9mZdt8kSh9wWyeo2vQweBaIqPXwck1xJygM1K9%2FQIKBf0Hy3v0KYgTDIQg%2Fb6L%2FbNJFf0y35MGtXZY2Ux2A1NQ4GJ2vQ3wX3%2BQaq82yxvjmwyH6%2BdJLyp%2BbVKBHoI0srdEdQUG91Bx3UNph%2FD9UE36ukYI4xGataoBNxUmvo16UQODavVfCGrRbafZ5rbR4Zjdk8PRhRmLQ6q%2BNNn148qwutvpyLLBGT%2FDazPokEVm1v3i7tmbKFc8YNFyLnvVbojDxfGy2QgunhDqpLrfx4wnJ2txAY6pgE0UKYvx0nKt9AYxWrDsDKAHxzAtPO7xhpGvoQlrO2PT6sqjiXcjeoGXS5ESixN4ue6X%2FWyJ755Rm52Oo5LFO2b%2FVkwpX9q89bz%2BagJv8y5zyQg0s3SGiKiECqbJ3ZJj8FQeHSC2VWSNkpsVvUZYre0RRF763fjhzSHVoECeSQ4buBhIiCW6s1%2FXb3z7or78ByldIN1fUZ41z059iG4ubv06DOrMPMu&X-Amz-Signature=eb7503a74cf09eedfbc4478049766bd2a95eafc2a9f4baad72e128d0b4afb012&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)"},{"id":"/2024/05/30/T22:00:00.000Z-Most Engineering Hiring Processes Are Broken","metadata":{"permalink":"/blog/2024/05/30/T22:00:00.000Z-Most Engineering Hiring Processes Are Broken","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-05-30T22:00:00.000Z-Most Engineering Hiring Processes Are Broken.md","source":"@site/blog/2024-05-30T22:00:00.000Z-Most Engineering Hiring Processes Are Broken.md","title":"Most Engineering Hiring Processes Are Broken","description":"Explore effective strategies for streamlining the hiring process in the tech industry. Learn how simplifying the evaluation process and reducing feedback loops can help you attract top-tier talent faster and more efficiently.","date":"2024-05-30T00:00:00.000Z","formattedDate":"May 30, 2024","tags":[],"readingTime":4.95,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-05-30T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/most-engineering-hiring-process-are","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore effective strategies for streamlining the hiring process in the tech industry. Learn how simplifying the evaluation process and reducing feedback loops can help you attract top-tier talent faster and more efficiently.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/b763c282-0a18-4103-9342-db563c97ae40/rb.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=f6d6e3e9a4cabae83c3535c2baee6e902a36224301387d05f52a70c5eb38ab48&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Most Engineering Hiring Processes Are Broken"},"prevItem":{"title":"Key Strategies for Building High-Performance Teams in Tech","permalink":"/blog/2024/06/07/T00:00:00.000Z-Key Strategies for Building High-Performance Teams in Tech"},"nextItem":{"title":"Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements","permalink":"/blog/2024/05/23/T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements"}},"content":"Leading a team or a company necessitates having individuals who can assist in realizing your objectives. Undoubtedly, this involves establishing a hiring process. Have you considered how hiring for software projects may consume extensive time and effort?\\n\\n\\n## The Average Hiring Process\\n\\n\\nWhenever I step into a company, my gaze is often drawn to their recruitment procedures. Typically, the process aligns with or forms a subset of this schematic.\\n\\n\\n![average_process.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/8f086c27-5449-4a04-b2b5-f8b50b110c83/average_process.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666VSUFUQK%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHoSO8TGUzjX%2FooDEYC77hpQ08I%2BNBmeZbb7GVD2QmqbAiEA4vyMI7gRiMr5hBqvFK8e4GTfYBjEHOs8Lc6u6sSm%2FnsqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAmxF5wKk5IDcBf6MCrcA5sEGYXg8iIJecHEmb87WNumhvscmQ1lMNx%2Bmu9TZYxo6xnbVHgfwM2cXo%2FgP5JbN%2BOaOQfLiSfKzbmFx4bikdram3gEla4EC9f4MSkwdqoe28a9eZvdtK1aYUnSQ02aoItQaFJY4HUzio3cFn2ibjbp5CFGYXH3V7AKYDfrztyUm9lmjKO9BwzgFEenQ8MpoBnvJeejO8QePaXH9BYlWz7L3RMJ7ystJ%2BBD9%2Fu4VbU%2B8HBfIv5oDbMljL%2Ff%2BaJmVxuy77wrFKHvoJWgolHtJrIjftGxl5qMWkVRKuvRD5Pnn%2FxZSs6n%2B2WHdIlmOToTQkn%2FTpFLOYA9qry4fNLprheMqCaoy6Vtdj%2FndgrOcqmQ5YnFNwn95j4LI3noiRLAPaDeiyCRxHzBuhGZehTblGvVdrl5cz2gxLUtZh%2BdiZlHYbs%2Baa1DkXKvNnCfg6AqHxATC7iOtG3JiCnqWP%2F8bRfZPCp4%2FhCxVqh%2BM2qf8oqU0n2rKlY3NqoyQLoXpGh%2FSvOzj3trBbPG9w0n7JJJ9fRg5XFUL4L86dVdcurFL2Q3scW%2F6dneBjLnP%2FZFK3YrqKaWUyLrkZKNZnRzizyJY0WkOrUhrhUqOJP7QDkqfvKbIIlP5DT1zptwN5%2BRMMedrcQGOqUBAFOjsqY59XWkGhGfGiDGEz4mzF5M9mr04h1nJUSfO7%2FMcgE1sgg0mTpjitg8V8xZGvfp1TWyNl6DT1Rsyi04hVr5ll3rE1K6iHmWuY6jTaU2IMnF814LTKGoTB25d6j9SocTxcjJuynJCLIPtRh1SD8PHzNB1KZX7R843IbMqo7dvtp9qKuvZe3OsNxKYYOgObXCB3IXcFs%2Bbf9l%2B%2Bv3faXKmwMk&X-Amz-Signature=7df5f63d1e68ac5f76b1025a907d39daad70e15a7b337ce56e99b5508efe2cf1&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nMost companies employ these steps as filters, aiming to discover the \u201cideal candidate\u201d with the least possible commitment. This turns the hiring process into a lengthy, high-effort endeavor that can span multiple months. As you can see, from application to hire, we\'re looking at an average of 32 days and a time investment of 15.5 hours.\\n\\n\\nIn competitive markets\u2014such as the one I\'m familiar with\u2014the top candidates are often hired within a maximum of two weeks after applying for a job. How can this be?\\n\\n\\n## The Issue at hand\\n\\n\\nOver-engineering can be pinpointed as the root cause of the issue.\\n\\n\\nHere are the three main concerns that lead to this:\\n\\n- **Risk Avoidance Leads to Over-Complication:** Trying to avoid any slip-ups during the hiring process often results in a complicated and lengthy procedure. This method is more about reducing the risk of a bad hire, even if it sacrifices speed and efficiency.\\n- **Fear of Overlooking the Perfect Candidate:** The worry of not finding that potentially perfect candidate leads to an exhaustive process. Every candidate is meticulously screened at each stage, lengthening the hiring period.\\n- **Concern Over Wasting Employee Time:** The fear of spending current employee time on unsuccessful hiring processes is a worry. This concern stems from knowing that time is valuable, especially in fast-paced work environments. If the hiring process doesn\'t yield a successful hire, it\'s considered a misuse of employee time that could have been used for immediate needs and goals.\\n\\nHowever, lengthy processes are the embodiment of these fears. The rationale is straightforward: the top candidates are often the first to be snapped up. If your hiring process is sluggish due to numerous feedback loops, chances are you\'re missing out on top-tier talent.\\n\\n\\nRemember, most companies aren\'t engaged in rocket science, which means you probably don\'t need a rocket scientist on your team. What you do need are team players who can collaborate effectively and add value to your product.\\n\\n\\n![https://devrant.com/rants/2848905/interview-vs-job](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/5bda32ba-6fad-4a72-b770-456f2f682215/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666VSUFUQK%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHoSO8TGUzjX%2FooDEYC77hpQ08I%2BNBmeZbb7GVD2QmqbAiEA4vyMI7gRiMr5hBqvFK8e4GTfYBjEHOs8Lc6u6sSm%2FnsqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAmxF5wKk5IDcBf6MCrcA5sEGYXg8iIJecHEmb87WNumhvscmQ1lMNx%2Bmu9TZYxo6xnbVHgfwM2cXo%2FgP5JbN%2BOaOQfLiSfKzbmFx4bikdram3gEla4EC9f4MSkwdqoe28a9eZvdtK1aYUnSQ02aoItQaFJY4HUzio3cFn2ibjbp5CFGYXH3V7AKYDfrztyUm9lmjKO9BwzgFEenQ8MpoBnvJeejO8QePaXH9BYlWz7L3RMJ7ystJ%2BBD9%2Fu4VbU%2B8HBfIv5oDbMljL%2Ff%2BaJmVxuy77wrFKHvoJWgolHtJrIjftGxl5qMWkVRKuvRD5Pnn%2FxZSs6n%2B2WHdIlmOToTQkn%2FTpFLOYA9qry4fNLprheMqCaoy6Vtdj%2FndgrOcqmQ5YnFNwn95j4LI3noiRLAPaDeiyCRxHzBuhGZehTblGvVdrl5cz2gxLUtZh%2BdiZlHYbs%2Baa1DkXKvNnCfg6AqHxATC7iOtG3JiCnqWP%2F8bRfZPCp4%2FhCxVqh%2BM2qf8oqU0n2rKlY3NqoyQLoXpGh%2FSvOzj3trBbPG9w0n7JJJ9fRg5XFUL4L86dVdcurFL2Q3scW%2F6dneBjLnP%2FZFK3YrqKaWUyLrkZKNZnRzizyJY0WkOrUhrhUqOJP7QDkqfvKbIIlP5DT1zptwN5%2BRMMedrcQGOqUBAFOjsqY59XWkGhGfGiDGEz4mzF5M9mr04h1nJUSfO7%2FMcgE1sgg0mTpjitg8V8xZGvfp1TWyNl6DT1Rsyi04hVr5ll3rE1K6iHmWuY6jTaU2IMnF814LTKGoTB25d6j9SocTxcjJuynJCLIPtRh1SD8PHzNB1KZX7R843IbMqo7dvtp9qKuvZe3OsNxKYYOgObXCB3IXcFs%2Bbf9l%2B%2Bv3faXKmwMk&X-Amz-Signature=c81a4d4f156ae3c3c3785c683ca969b3bbe6d6573a436778a2dc6a6d7293362a&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Solving the problem\\n\\n\\nTo attract and secure top-tier talent in a fast and efficient manner, it is imperative to streamline and reform our hiring process.\\n\\n\\nThe objective is to create a process that is not only efficient in its operations, but also effective in securing the best possible talent for our teams. This approach must consider the existing challenges in the hiring process and devise solutions that counter these issues, while optimizing for speed and quality of hires.\\n\\n\\nTo facilitate such transformation in the hiring process, we need to undertake the following steps:\\n\\n\\n### Simplify Evaluation Process\\n\\n\\nThe prevailing approach in many companies operates like a wishlist, confirming that candidates meet an extensive set of expectations. However, these wishlists often become an endless array of checkboxes that candidates must tick off.\\n\\n\\nA more efficient solution would be to invert this evaluation method, implementing a flagging system to identify what is unacceptable in a candidate. This method streamlines the process, as it\'s a true or false evaluation where we all have the same expectation. Instead of having a checklist of 100 items that can have different readings by the evaluator to be covered in 2 to 4 technically focused interviews, we\'re able to identify any red flags in just one or two interviews.\\n\\n\\nLet\'s see examples that I have seen in real life:\\n\\n\\n| Wishlist| Flags                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\\n|| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| **Coding Interview:**\\n    - Does hexagonal architecture\\n    - Has done unit tests\\n    - Has done integration test\\n    - Follows SOLID principles\\n    - Writes Clean Code\\n    - Refactors when needed\\n    - \u2026\\n**Whiteboard Session:**\\n    - Decouples Systems\\n    - Takes in count Scalability\\n    - Takes in count Security\\n    - Understands sharding\\n    - Understands different types of DB and their use\\n    - Understand evolutionary architecture\\n    - \u2026\\n**Technical Conversation:**\\n    - Can explain the business of a project\\n    - Can explain the technical aspect of a project\\n    - Understands CI/CD\\n    - Understands testing value\\n    - \u2026\\n**Values Session:** \\n    - Is an active listener\\n    - Understand fairness\\n    - Understand no blame culture \\n    - \u2026 | \ud83d\udd34 Discriminates based on social or technical aspects.\\n\ud83d\udd34 Lies on an explanation when they don\'t know a subject.\\n\ud83d\udd34 Ignores feedback, continues without reflection.\\n\ud83d\udd34 Does not explain their train of though, after request.\\n\ud83d\udd34 Does not accommodate for people\'s needs regarding communication styles (ex. Drawing). \\n\ud83d\udfe1 Makes things overcomplicated.\\n\ud83d\udfe1 Is unable to explain certain aspects of what they do.\\n\ud83d\udfe1 Does not execute or compile while working.\\n\ud83d\udfe1 Does not do any kind of test while working. |\\n\\n\\nHere is how the simplified process looks like:\\n\\n\\n![simple_process_1.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/890e4faa-9308-4243-b289-6a539acc9cdd/simple_process_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666VSUFUQK%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHoSO8TGUzjX%2FooDEYC77hpQ08I%2BNBmeZbb7GVD2QmqbAiEA4vyMI7gRiMr5hBqvFK8e4GTfYBjEHOs8Lc6u6sSm%2FnsqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAmxF5wKk5IDcBf6MCrcA5sEGYXg8iIJecHEmb87WNumhvscmQ1lMNx%2Bmu9TZYxo6xnbVHgfwM2cXo%2FgP5JbN%2BOaOQfLiSfKzbmFx4bikdram3gEla4EC9f4MSkwdqoe28a9eZvdtK1aYUnSQ02aoItQaFJY4HUzio3cFn2ibjbp5CFGYXH3V7AKYDfrztyUm9lmjKO9BwzgFEenQ8MpoBnvJeejO8QePaXH9BYlWz7L3RMJ7ystJ%2BBD9%2Fu4VbU%2B8HBfIv5oDbMljL%2Ff%2BaJmVxuy77wrFKHvoJWgolHtJrIjftGxl5qMWkVRKuvRD5Pnn%2FxZSs6n%2B2WHdIlmOToTQkn%2FTpFLOYA9qry4fNLprheMqCaoy6Vtdj%2FndgrOcqmQ5YnFNwn95j4LI3noiRLAPaDeiyCRxHzBuhGZehTblGvVdrl5cz2gxLUtZh%2BdiZlHYbs%2Baa1DkXKvNnCfg6AqHxATC7iOtG3JiCnqWP%2F8bRfZPCp4%2FhCxVqh%2BM2qf8oqU0n2rKlY3NqoyQLoXpGh%2FSvOzj3trBbPG9w0n7JJJ9fRg5XFUL4L86dVdcurFL2Q3scW%2F6dneBjLnP%2FZFK3YrqKaWUyLrkZKNZnRzizyJY0WkOrUhrhUqOJP7QDkqfvKbIIlP5DT1zptwN5%2BRMMedrcQGOqUBAFOjsqY59XWkGhGfGiDGEz4mzF5M9mr04h1nJUSfO7%2FMcgE1sgg0mTpjitg8V8xZGvfp1TWyNl6DT1Rsyi04hVr5ll3rE1K6iHmWuY6jTaU2IMnF814LTKGoTB25d6j9SocTxcjJuynJCLIPtRh1SD8PHzNB1KZX7R843IbMqo7dvtp9qKuvZe3OsNxKYYOgObXCB3IXcFs%2Bbf9l%2B%2Bv3faXKmwMk&X-Amz-Signature=f9da3d3d9d8e1b1ddb5e9e62278c5313416a648f6bd5ca99b15d0cce360500d7&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Reduce The Feedback Loops\\n\\n\\nIn line with product development, minimizing feedback loops can enhance agility.\\n\\n\\nInserting filters into the process simply creates delay in decision-making, as feedback must be revisited before proceeding. These waiting periods regularly lead to candidates disengaging from the process.\\n\\n\\nMoreover, these filters may inadvertently prevent a potential candidate from showcasing their full potential in later stages of the process, frequently leading to premature dismissal of suitable candidates for the position.\\n\\n\\nEliminating filters from feedback loops can accelerate the process and lessen the burden on our existing employees. By removing reporting for future steps and not discarding candidates early, candidate success rate will increase, resulting in fewer interviews in the long run.\\n\\n\\n![simple_process_2.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/61e97fe8-23a7-49a2-bea8-4d60ab7b4bd3/simple_process_2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4666VSUFUQK%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIHoSO8TGUzjX%2FooDEYC77hpQ08I%2BNBmeZbb7GVD2QmqbAiEA4vyMI7gRiMr5hBqvFK8e4GTfYBjEHOs8Lc6u6sSm%2FnsqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDAmxF5wKk5IDcBf6MCrcA5sEGYXg8iIJecHEmb87WNumhvscmQ1lMNx%2Bmu9TZYxo6xnbVHgfwM2cXo%2FgP5JbN%2BOaOQfLiSfKzbmFx4bikdram3gEla4EC9f4MSkwdqoe28a9eZvdtK1aYUnSQ02aoItQaFJY4HUzio3cFn2ibjbp5CFGYXH3V7AKYDfrztyUm9lmjKO9BwzgFEenQ8MpoBnvJeejO8QePaXH9BYlWz7L3RMJ7ystJ%2BBD9%2Fu4VbU%2B8HBfIv5oDbMljL%2Ff%2BaJmVxuy77wrFKHvoJWgolHtJrIjftGxl5qMWkVRKuvRD5Pnn%2FxZSs6n%2B2WHdIlmOToTQkn%2FTpFLOYA9qry4fNLprheMqCaoy6Vtdj%2FndgrOcqmQ5YnFNwn95j4LI3noiRLAPaDeiyCRxHzBuhGZehTblGvVdrl5cz2gxLUtZh%2BdiZlHYbs%2Baa1DkXKvNnCfg6AqHxATC7iOtG3JiCnqWP%2F8bRfZPCp4%2FhCxVqh%2BM2qf8oqU0n2rKlY3NqoyQLoXpGh%2FSvOzj3trBbPG9w0n7JJJ9fRg5XFUL4L86dVdcurFL2Q3scW%2F6dneBjLnP%2FZFK3YrqKaWUyLrkZKNZnRzizyJY0WkOrUhrhUqOJP7QDkqfvKbIIlP5DT1zptwN5%2BRMMedrcQGOqUBAFOjsqY59XWkGhGfGiDGEz4mzF5M9mr04h1nJUSfO7%2FMcgE1sgg0mTpjitg8V8xZGvfp1TWyNl6DT1Rsyi04hVr5ll3rE1K6iHmWuY6jTaU2IMnF814LTKGoTB25d6j9SocTxcjJuynJCLIPtRh1SD8PHzNB1KZX7R843IbMqo7dvtp9qKuvZe3OsNxKYYOgObXCB3IXcFs%2Bbf9l%2B%2Bv3faXKmwMk&X-Amz-Signature=4888b1d0f447bdf3fcedcfdb384bd3028a682c545662c0f844b2033ab0155320&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Final Words\\n\\n\\nIn conclusion, the key to a successful hiring process lies in simplicity and efficiency. By focusing on eliminating unnecessary steps and reducing feedback loops, companies can accelerate their hiring process and attract and retain the best talent in the market."},{"id":"/2024/05/23/T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements","metadata":{"permalink":"/blog/2024/05/23/T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-05-23T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements.md","source":"@site/blog/2024-05-23T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements.md","title":"Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements","description":"Explore the limitations of incremental improvements and the potential of big leaps in software development and business strategy. Learn to identify signs of stagnation, enact change, and maximize your team\'s potential.","date":"2024-05-23T00:00:00.000Z","formattedDate":"May 23, 2024","tags":[],"readingTime":5.16,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-05-23T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/breaking-out-of-the-comfort-zone","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the limitations of incremental improvements and the potential of big leaps in software development and business strategy. Learn to identify signs of stagnation, enact change, and maximize your team\'s potential.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/5d1ce020-cdb7-462a-a773-8d9e53ff8eff/cz4.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=042ecd0fd3584886ddebece51fea7f471b22121975645d8dbd66e65dc12c8c77&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements"},"prevItem":{"title":"Most Engineering Hiring Processes Are Broken","permalink":"/blog/2024/05/30/T22:00:00.000Z-Most Engineering Hiring Processes Are Broken"},"nextItem":{"title":"T-Shaped players, what the Market Needs Now!","permalink":"/blog/2024/05/14/T03:00:00.000Z-T-Shaped players, what the Market Needs Now"}},"content":"Have you ever felt stuck or that you\'re not making progress towards your goal with the current approach you or your team are employing?\\n\\n\\n![cz1.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/38240359-a9c4-40de-a201-258d672ad902/cz1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466S55LPARM%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEcjj5Ijjqi7jbc6pLtn3oiQ%2Fl83%2Be8bFhwTlEuUhOTPAiEA45ipQt%2Ft5%2BGEJO9HILzhyjBhGrSR98G%2FSYfdLEkAo60qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDMQBHS2Lz5AgjU%2BCwyrcA2uSKjuUtdW7kmd88nHnT0dMG1Uzn4LFLqD1MaL603yEtjWkIA3CjM%2Fe7hCd%2BLM%2BEhDK69QAwPMYffs%2FatfCNCZgoXfxVsH5vkgSk7sTX3iL71RAS%2By8N3IBlUTAYR114pLFOEXBh0KkDbZwVIKxBkOzexzCpThuJ70LtymrEc4QRCGfPJxhzOzlKQ44QBFYZiuqgKdMMYNsto%2Ff03xdo9ymyMUmEm1i2gx9uvAhdu51%2BUTj23%2FabOe93jDRDI9zqh1Bl2xYDuqfybNBngM26DtxsGcpikLCSHUUi77%2FadEeFPLgcBl1erdn54xtz4cLHfKyg1Hff%2BtZsbLDkWGUfaHrxQS0FR7AavmIYtEBj52%2B24xOkuUVGXQEbdFrDX8X6o6A0YMVlX9WmU7rHhKTtTX5g3FgcNcAhrDtGBKqtche%2BZVbMv0DyWddMSN0FTE9Z2yAB%2FXGLCC3oTr379Jqt1NjPFqOrvMrAiTd2sIYXnI8TDJGIxd2kSkjfmxBRRGRvC1i8mY9%2Fd8n95%2BwdfyhDZq0i1satPf0Tv%2Bfh5LrsXfEGY7gzVS6SmDyP17tR9JJWvJSZ3nfSJOAk7XhWn6k%2BDspOTUpj75bFgpoL7J9zyKnRlgH61TZvPW25GxpMOmdrcQGOqUBMYZV%2FqDeYbl8iuDsCmEIPEMQOX16Un3ZxgdfZZUecYRc5XJynfhnj9UdFR2m21Vbwkm4b%2FQoklnyikH48L4BN%2BNbOjIWk6Js8B4HIND%2B3K8i0kzX0%2BU93WDPXELEEf46HbhPCs23N8pZYXk4rvm3jX8slXmjzLMKtiZTDaem1iPhIMQHZTifmddZc4xW%2FfWUTZj6mlHL%2BMvNID%2BDlNdL3li4Ote0&X-Amz-Signature=9dfb6199d6e5911f94c4c6724906fe323a65122ef7c14e4cc4ca268c84509cea&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nFrom a young age, we\'re taught the value of steady, incremental progress. The idea is that like a determined tortoise, we can reach our goals by moving deliberately in the right direction. But could there be a more efficient approach?\\n\\n\\n## The Comfort Zone a Default State\\n\\n\\nIt\'s widely recognized that individuals typically operate within their comfort zones. But what exactly is the comfort zone? Here\'s a potential definition:\\n\\n\\n> The comfort zone refers to a psychological state in which one feels familiar, safe, and at ease. It is the area of experience where a person operates in an anxiety-neutral condition, using a limited set of behaviors to deliver a steady level of performance, usually without any sense of risk or need for change.\\n\\n\\nSticking to what\'s familiar can often deter us from making significant strides in improving our lives. More often than not, we choose minor, incremental changes that don\'t veer too far from our routine.\\n\\n\\nThis fondness for comfort zones isn\'t just personal\u2014it extends into software development practices and product development too. Frequently, teams would rather make minor adjustments than take the risk of adopting an entirely new approach. This could be due to fear of failure, resistance to change, or simply not being aware of the potential benefits of a different approach.\\n\\n\\nSure, these incremental changes are easier to manage and implement. They cause less disruption to our current systems and processes, letting us maintain stability and make small steps forward. But, they can also restrict our potential for innovation and growth. When we only focus on baby steps, we might overlook the chance to make a big leap that could bring about significant benefits.\\n\\n\\nThis leads us to ask: Are these small improvements enough? Do they truly meet the needs of the team and the organization, or are they simply a safe and comfortable route that leads to average results?\\n\\n\\n## Signs of Need For change\\n\\n\\nLet\'s consider some signs that may indicate the presence of comfort zones:\\n\\n- **Stalled Progress**: If we see little to no significant progress over a lengthy period, it could mean our team might be tweaking things without making a real impact. In this case, the next level of improvement could be further than anticipated.\\n- **Reluctance towards new ideas**: A quick dismissal or resistance to new suggestions can indicate a deep-rooted reluctance to change. This resistance is often due to the comfort of the familiar, fear of the unknown, and potential risks associated with change.\\n- **Unchanging strategies**: If we find ourselves continually resorting to the same solutions or minor variations of past strategies, it suggests that we\'re stuck in a comfort zone. A hesitation to try new approaches, especially when facing repetitive challenges, signals a comfort zone.\\n\\nTherefore, it\'s crucial to continually assess your team\'s adaptability. If there are signs of stagnation, resistance to change, or a lack of creative problem-solving, it may be time to challenge the comfort zone and think about making more substantial changes instead of small, incremental ones.\\n\\n\\nIf you are already measuring the behavior, you will notice comfort zones can be represented as logarithmic functions. \\n\\n\\n![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/26a9ed95-154a-4067-93be-3e546a6b040e/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466S55LPARM%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIEcjj5Ijjqi7jbc6pLtn3oiQ%2Fl83%2Be8bFhwTlEuUhOTPAiEA45ipQt%2Ft5%2BGEJO9HILzhyjBhGrSR98G%2FSYfdLEkAo60qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDMQBHS2Lz5AgjU%2BCwyrcA2uSKjuUtdW7kmd88nHnT0dMG1Uzn4LFLqD1MaL603yEtjWkIA3CjM%2Fe7hCd%2BLM%2BEhDK69QAwPMYffs%2FatfCNCZgoXfxVsH5vkgSk7sTX3iL71RAS%2By8N3IBlUTAYR114pLFOEXBh0KkDbZwVIKxBkOzexzCpThuJ70LtymrEc4QRCGfPJxhzOzlKQ44QBFYZiuqgKdMMYNsto%2Ff03xdo9ymyMUmEm1i2gx9uvAhdu51%2BUTj23%2FabOe93jDRDI9zqh1Bl2xYDuqfybNBngM26DtxsGcpikLCSHUUi77%2FadEeFPLgcBl1erdn54xtz4cLHfKyg1Hff%2BtZsbLDkWGUfaHrxQS0FR7AavmIYtEBj52%2B24xOkuUVGXQEbdFrDX8X6o6A0YMVlX9WmU7rHhKTtTX5g3FgcNcAhrDtGBKqtche%2BZVbMv0DyWddMSN0FTE9Z2yAB%2FXGLCC3oTr379Jqt1NjPFqOrvMrAiTd2sIYXnI8TDJGIxd2kSkjfmxBRRGRvC1i8mY9%2Fd8n95%2BwdfyhDZq0i1satPf0Tv%2Bfh5LrsXfEGY7gzVS6SmDyP17tR9JJWvJSZ3nfSJOAk7XhWn6k%2BDspOTUpj75bFgpoL7J9zyKnRlgH61TZvPW25GxpMOmdrcQGOqUBMYZV%2FqDeYbl8iuDsCmEIPEMQOX16Un3ZxgdfZZUecYRc5XJynfhnj9UdFR2m21Vbwkm4b%2FQoklnyikH48L4BN%2BNbOjIWk6Js8B4HIND%2B3K8i0kzX0%2BU93WDPXELEEf46HbhPCs23N8pZYXk4rvm3jX8slXmjzLMKtiZTDaem1iPhIMQHZTifmddZc4xW%2FfWUTZj6mlHL%2BMvNID%2BDlNdL3li4Ote0&X-Amz-Signature=7ffc1b11fdab2107837efedef68e422fd9eec425099dbf3443459e29894f92e7&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n## Implementing Change\\n\\n\\nRecognizing the need for change is just the beginning. Here\'s how we can pave the way forward:\\n\\n1. **Spot key metrics**: Initiate by spotting key metrics that accurately represent the area you\'re aiming to enhance. These metrics should be specific, measurable, and directly tied to the performance or behavior you\'re looking to improve.\\n2. **Gauge the current situation**: Use these as a benchmark to contrast your future performance and evaluate the progress of your initiative.\\n3. **Set a North Star**: Set a clear, ambitious yet attainable goal that will steer your efforts. This goal should push your team to step out of their comfort zone, but still be within reach. Ensure this goal is in line with your wider business objectives and resonates with your team members, providing them a strong incentive to aim for the initiative.\\n4. **Estimate the gap**: Evaluate the difference between your current performance and your North Star. This is the distance your team needs to traverse to achieve the desired improvement. Understanding this gap will give you a clear sense of the scope of the change required and will help shape your strategy for the initiative.\\n5. **Plan the change**: Having defined your key metrics and North Star, begin plotting the course required for the initiative. You will be faced with 2 options:\\n\\t1. **Bold Move**: Occasionally, a significant departure from the current state to your ultimate goal is necessary. Always consider this as your primary option.\\n\\t2. **Gradual Progress**: If the change appears overwhelming or too abrupt, reduce it by taking smaller steps towards your ultimate goal.\\n6. **Review and Refine**: Continually track your progress and compare it to your initial benchmark. Use this information to fine-tune your approach, adjust your strategy, and implement necessary modifications.\\n\\n## Final Thoughts\\n\\n\\nIt\'s crucial to remember that change is not always easy, but it\'s often necessary for growth. Incremental improvements have their place, but occasionally, we need to take confident leaps to truly innovate and realize our full potential. By willing to step outside our comfort zones, we open ourselves up to new possibilities and opportunities for improvement. Next time you\'re with your team, ponder over these topics. It\'s vital to identify your guiding star to reach it. \\nFor example, consider this in the context of your team\'s productivity. What practices could make you the most efficient team? For me, the answer was Extreme Programming (XP). You might contemplate a significant shift from individual development with pull requests to mob programming, and smaller steps towards adopting Trunk-Based Development due to the need for additional tools.\\n\\n\\nAlso, don\'t hesitate to think creatively about product development. For instance, we often have to shift Key Performance Indicators (KPIs) to meet Objectives and Key Results (OKRs), like increasing the lead conversion percentage. If the leap percentage is high, you might need to implement revolutionary new strategies, rather than sticking with the status quo."},{"id":"/2024/05/14/T03:00:00.000Z-T-Shaped players, what the Market Needs Now","metadata":{"permalink":"/blog/2024/05/14/T03:00:00.000Z-T-Shaped players, what the Market Needs Now","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-05-14T03:00:00.000Z-T-Shaped players, what the Market Needs Now.md","source":"@site/blog/2024-05-14T03:00:00.000Z-T-Shaped players, what the Market Needs Now.md","title":"T-Shaped players, what the Market Needs Now!","description":"Explore the T-shaped model for professionals in tech and business, highlighting the blend of deep expertise and broad understanding that fosters success in complex, user-centric markets. Learn how this model encourages continuous learning, enhancement of job satisfaction, and increases marketability.","date":"2024-05-14T00:00:00.000Z","formattedDate":"May 14, 2024","tags":[],"readingTime":4.005,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-05-14T03:00:00.000Z","canonical_url":"https://leadshorizons.com/p/product-developers","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the T-shaped model for professionals in tech and business, highlighting the blend of deep expertise and broad understanding that fosters success in complex, user-centric markets. Learn how this model encourages continuous learning, enhancement of job satisfaction, and increases marketability.","Tags":["business","technology","tech","productivity"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/2ca7b332-0030-45ac-85c1-d5d3df157491/bearly-generated-image-NKDTDS.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RWJMTAMG%2F20250227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250227T120440Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDsaCXVzLXdlc3QtMiJHMEUCIQDP62R3PI1BPyOGGMHRlgt%2BGHx2oIkm%2BdidZEeqltLKdAIgM%2FgDcObzoef5Kpe5emwncMUTqMic5vbSQCquIpTQQ9wq%2FwMIdBAAGgw2Mzc0MjMxODM4MDUiDHI3b9flIksTLahAVircAzu9%2BTz9kbiOpXH8cFaicIMEAC8Xmz2UM%2FGeqZsHcqk6sOmqbkf3AeUrwhBP7dsjUy09%2FbWVrmJpsonJ1VcHrW5VUzooUp2A8O6lTyaVfroa5lDarX30NoBeo4t%2BjGnXjNhl92iEr6PIqgLUoQIT%2FFnbmWN1OJtT3WV2woqMax8mGW0WonM8wxJCiaXUW4uSyKkta8TXqX77iH8ILqjioKinYo6gv%2BTyWSc1xlkX4GY8Au7V2UrDQrNufAFD%2Bt36uoo%2BHCILzH3l0s2hw96AQfJnmXofWbaSSxIRlGJVD2D8YvOmAw%2BguK81WKOdZUBCwn%2BHztGuDLuooNXzlxNR47unjhOODlJaiE4VRjZSjjumglZdOWSAA1rtBs5ONWrBsGLgQl71GO3mRznw8xnmL7o64d3G5j2ntXnMj6yOn7iDN6OyuwlTxVzN4BUYOydWg326viSvG41dH7uc4PGP5vKvmaQiCl7aLOe%2Fl26klNQUQzqqFn8tJmwLjJofa%2BY5YMxLxUrxjWV3CsP2jSOmNSEqVHCxfmXiTfZNlb0QVt3InPTA70f3x9QPdROA71T6Rn43GYpJI45CE4qTOEL%2Fo2%2B3Q%2BRIMALVYzMYBpDRigjqswKRVSDDdhBXoSqRMPuQgb4GOqUBrVUsQ2ig1%2FX2qWIW6BfMPQWMZfhc8Z%2Fjg5H%2F4Lobv%2FW%2BL8lgHvxEd4DqBvtsYGSVWReWBYBH0NZC%2FFxTL0s7F3%2FfZtitD6Lb6fI9GSK6IE%2BXzvtx4pnfstbJT1UXNyYtCMv3GJJLPlYQk%2Bc8VB3IIu31i8I3YZy6HO5lvi0v3Sifwh%2FJZW6igUBYyGnRx0lRSDCfsesy89VHuirL9lj8M%2Fc%2B%2FpC2&X-Amz-Signature=68717e237073fc573fcc6796fd98aa9d2282437f6fa69c59fbd0dfbb1bc4f800&X-Amz-SignedHeaders=host&x-id=GetObject","title":"T-Shaped players, what the Market Needs Now!"},"prevItem":{"title":"Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements","permalink":"/blog/2024/05/23/T00:00:00.000Z-Break Out Of The Comfort Zone: The Need for Big Leaps Over Incremental Improvements"},"nextItem":{"title":"Make Remote Work, Great Again","permalink":"/blog/2024/05/01/T22:00:00.000Z-Make Remote Work, Great Again"}},"content":"Before starting this article, I would like to extend my thanks for reading, and also my apologies to for not being able to write last week. It was a busy but enriching week at some training where I actually learned quite a few things, I will share them here soon so stay tuned. \\n\\nI will today release this short article, and expect a longer one towards the end of this week.\\n\\n\\n---\\n\\n\\nHave you ever encountered professionals who seem to place importance only on a certain type of knowledge? It\'s a situation humorously depicted in this comic strip from CommitStrip.\\n\\n\\n![https://www.commitstrip.com/en/2016/09/09/the-mistakes-of-youth/?setLocale=1](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/fd39b0b1-9017-499d-ae0e-71cd764be906/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466W7FIWCRH%2F20250227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250227T120441Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDsaCXVzLXdlc3QtMiJIMEYCIQDBzesE11y7P%2BM8ixJ%2BEKXzf9WC%2FmQAS10cjNxA4OhbQAIhAMmihbRwfKCZ7RivObXWdiozOswxV0a1w1ClpUu6xn3WKv8DCHQQABoMNjM3NDIzMTgzODA1Igzx0GdVrB3paF%2Fq8k4q3APGWp8Y1dXekHWnEYCguRWlxcKKfYgsCDiGAPfLTtiOjktrKJBrqC%2BMVvcAFZ46O%2FHUw7D7NHzAS1VYsStCMad2zf7S0y0BK2vohw9H50Sdbxf6QGyzvYWK4mgr2ZjXbpmzRB3slKZ9clT%2BpsOKSF4CEGIXRdXC%2BEiFk81vDEyM8P9Qdp%2B5uahF1mizqEyNSurQx0uWBvc92hgB3Y3CSDnKkJLxEu0Ql0jPsWmMgV3Y%2BLa2ddn9nkGOZX59jZnwjoO5%2FOHK76B28jx3ZfGSyZdsmYZLCHAOEo0dU%2B5VahtcX6m0t4do0RgF7BZpNqpX8h96reI30x78sblU81RlKnSkQHyZzh8%2BAw%2BTcXHn691h6GS7p3LIvmsdD2%2BwdkFniwxZinMBUtBA9bP6eLD47K%2F7sDYobPqUoA2yBG9pONeamcCtJjyGgA6usyTQgQsghAJDGBZEaKE%2FoAvl0noGEtyGgJtRl1bEn4PcHQkBz2AWDwNr5B2MBfd4FLEbdkT3WosZKtPWxDp%2FgPpq54IWriwlPYGyM0N5JmHpui4%2FNTgyD3bMzfLTy6WlgrNezFxflZFVwkXoZ7HjtJRRTASvoF4HrH%2B%2BB23fjr%2BkiDPlzbVDlgXrS1y57HiVyGwzPDCLkYG%2BBjqkAaYcqAKZ1bobpbafr8RrnETJwmzk9zOyh1dKv5GITvygnttS%2B1S%2FHB4xDX50bX7pzNqLXX5Xrtcs2qC0eFvfioQmvQaCsPvqy5Q4tGLN02tUlw5PvT1dFxvUpPFrfv6tj6PB99OMRIhFvCbXcJcNFgr8kIN5fBLzS%2BLhiKQs3TzUS2su74hvOzQoLSzujxrUWNVSic6FMTeb4FXATF1RkAdqgWX3&X-Amz-Signature=77ecf3baadb2ff04f54992bc3ae72e6809dc55ae3b495fc6474fc92382bbb738&X-Amz-SignedHeaders=host&x-id=GetObject)\\n\\n\\nWhile expertise is certainly beneficial, it\'s not always a necessity in the market.  In the end, we need to ask ourselves the question if we are either \u201cproblem solvers\u201d or \u201cexecuting monkeys\u201d.\\n\\n\\nThe role of engineering professionals is evolving, moving from a sole focus on knowledge to an all-encompassing approach, represented by the \u201cT-shaped\u201d model. The objective is not just to build right, but to build what\'s necessary. This calls for a blend of product, technical, and interpersonal skills.\\nFor leaders, this translates into promoting continuous learning, cross-functional teamwork, and advocating for stepping beyond comfort zones, thereby cultivating a culture that appreciates all facets of everyday work.\\n\\n\\n## T-Shape: A Blend of Breadth and Depth\\n\\n\\nThe T-shaped model is the idea that everyone should possess a depth of vertical expertise in their preferred area (the vertical bar of the \u201cT\u201d) while also having a broad horizontal understanding of ancillary areas (the horizontal bar of the \u201cT\u201d). \\nThis dual focus ensures not only the capability to execute specific tasks but also the ability to see beyond and understand the larger context, ensuring that what is built is truly what is needed and also not selling snake oil.\\n\\n\\n### Vertical Expertise: The Depth\\n\\n\\nThe vertical bar of the \u201cT\u201d serves as a symbol for an individual\'s core skill set, demonstrating their domain of deep expertise. It is their specialty, the area where they could be considered an expert or a specialist. \\nThis deep expertise is what most people have traditionally concentrated on in their day-to-day professional lives. It\'s the strength that they bring to the table in their field and what they are known for.\\n\\n\\n### Horizontal Skills: The Breadth\\n\\n\\nThe horizontal bar symbolizes the broad range of complementary skills outside of one\'s core expertise. This notably includes:\\n\\n- **Product Sense**: An understanding of the product\'s goals, target users, and market position. This involves empathy towards the user\'s needs, an appreciation of user experience (UX) principles, and the ability to prioritize features based on user and business value.\\n- **Collaboration and Communication**: The ability to work effectively with cross-functional teams, including product managers, designers, and other stakeholders. Clear communication of technical difficulties, solutions, and trade-offs in a way that is accessible to non-technical team members is vital.\\n- **Business Acumen**: A grasp of the business context in which the product operates. This includes understanding the competitive landscape, business models, and how one\'s work contributes to the overall success and strategy of the company.\\n- **Adaptability and Learning**: The capacity to quickly learn new skills, adapt to new tools, technologies, and methodologies as required by the ever-changing tech landscape.\\n- **Any & All Technical Knowledge**: refers to a wide range of technical skills and understanding that one might need to do their job effectively. It emphasizes the need for individuals to be comfortable with various technologies and able to learn and adapt to new technical tools and methodologies as required.\\n\\n## Benefits of becoming T-Shaped\\n\\n\\nHere are the benefits of becoming T-shaped:\\n\\n- **Personal Growth**: The T-shaped model encourages continuous learning and adaptation, leading to personal and professional development.\\n- **Enhanced Job Satisfaction**: Having a broader understanding of the product and the business can make the work more meaningful and satisfying.\\n- **Increased Marketability**: With a diverse set of skills, T-shaped people are more attractive to employers in a competitive job market.\\n- **Job Security**: The ability to adapt to new technologies and methodologies also provides more job security in a rapidly changing industry.\\n\\n## Rounding Up\\n\\n\\nAs you may have noticed, I am not naming development anywhere. T-shaped has already crossed that line, it\'s not only applicable to technical roles but also to business roles. Where, for example, to take decisions is not only valid anymore to not understand certain parts of the product.\\n\\n\\nIn conclusion, T-shaped embodies the holistic skill set essential in today\'s dynamic product development environments. By fostering these all-rounded professionals, engineering leaders can ensure their teams are not just executing to spec but actively contributing to the creation of meaningful, impactful products. As we progress into increasingly complex and user-centric markets, the T-shaped approach will undoubtedly become not just beneficial, but essential for success.\\n\\n\\n## Related Articles\\n\\n\\n[bookmark](https://leadshorizons.com/p/the-future-of-teams-crossfunctional-and-t-shaped)"},{"id":"/2024/05/01/T22:00:00.000Z-Make Remote Work, Great Again","metadata":{"permalink":"/blog/2024/05/01/T22:00:00.000Z-Make Remote Work, Great Again","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-05-01T22:00:00.000Z-Make Remote Work, Great Again.md","source":"@site/blog/2024-05-01T22:00:00.000Z-Make Remote Work, Great Again.md","title":"Make Remote Work, Great Again","description":"Explore the nuances of remote work in our in-depth analysis. Discover how the right strategies and tools can transform remote work into an effective, productive, and rewarding experience.","date":"2024-05-01T00:00:00.000Z","formattedDate":"May 1, 2024","tags":[],"readingTime":9.935,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-05-01T22:00:00.000Z","canonical_url":"https://leadshorizons.com/p/make-remote-work-great-again","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the nuances of remote work in our in-depth analysis. Discover how the right strategies and tools can transform remote work into an effective, productive, and rewarding experience.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/f1850c68-ed9c-46fa-911e-ab0072dd8502/rw1.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=18a7d9cd744bb5a5060b864458bdb6c353fa96db8fea9a891f6ef04c368beef9&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Make Remote Work, Great Again"},"prevItem":{"title":"T-Shaped players, what the Market Needs Now!","permalink":"/blog/2024/05/14/T03:00:00.000Z-T-Shaped players, what the Market Needs Now"},"nextItem":{"title":"Unpacking the Truth of Peer Reviews in the Software Industry","permalink":"/blog/2024/04/25/T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry"}},"content":"What is your stand on the location where you work from? Work location seems to have become a complex subject for companies and employees in the last year. With an imbalance in the demand for local and remote work, the issue merits discussion.\\n\\n\\n![Employers Offer Fewer Fully Remote Jobs and More Fully Onsite Jobs Than Employees Want \u2014 WFH Research [1]](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/d0c68370-26e8-43d4-b883-eeef626c5dbd/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466VDEZN2VN%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCjVYjb9rSrpWkUr7iEb8bbxZjW16KWHGk%2Fm88R5vJXvgIgcYyJNmfnim4I5g26Y4VkLIbEHDFdGVf%2FXDspRzHzCD4qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDH1%2Bb19iT5qs%2B9DzSCrcAwdA%2BJZyJCGX6xqRvQWM1aTVyuQJz5LSVdiKVimCN8hikLOJwonDw64dbQabhsMylDeiAoFvMzZNV9DiL72d3E2wEfkyf5%2BNBhtqgUHmHo%2Ba6qU4CHBBfMX%2Broa58UV87GizFO%2Bc3FaGqvnAJ3ACBtmroJH4rRZTj7MrSrqo3SiYREafsfkT%2BGvjkc81K92ftjRLCXL9logjM%2F0y0b1uoZpVE1VuJvWWDd7%2BjD%2BSgCEcHet3OsdX6Io04QpqIIbRTe1WxA0Qf6%2B99ZPKO1ApGWug4ufK%2BCOdyCfXfBAdE5XIOZ%2FIu824s4QyeaDiMSI5cS7a%2F1%2FZ8pqoyUOlW3n5rb%2FbuvGJBS3RHuO1yyAMIpLVKKt%2FiMO1Wq%2FiEtlrucxyArh9cvqZMf7RqQQDleeHmhmKmWZuU9z8tllivS16hFFoQ%2F6eO65VDqMXwPh6Cb8bogAFf%2BVAr%2FDeiq5fCU6mpbee8MDg93WqsvDR%2Fu83IfksHHUJFeeFGwRKWfwSHmp0wdrqliah4Zzt65ywE%2B%2BJR8K3nKEu9N2RQ1NQTTlvm3G2Irdgnnhi6QRQVKpTVrh9IbdD3WpF7ksFW0lPW6lz9Ft87gbVFF4uVjL3cO3rMA2U%2FhmPT%2B%2Fa34jGqDLkMO2crcQGOqUBZL%2BGi7IDopGrNBqi27qsZbI1nIC0o%2BnxMNrGs5Zs39BvborYjD1lJTZDHMRPU0MLZYGUBeNZpwhcv%2BBxP2DzgciqMSeRvsrPPpIImjicC5Ic9%2FTlOKBsUOJUiZQ2XyKyVvD5bh2zSC1I9WknAuko2dSREbiuPSHWEVTrz9KSuuh1rgIfmuLzBXc1%2F1LQwvRSyhS27OcrbBxYtP48obRyXzshGj2y&X-Amz-Signature=4a7a781cfa6fdde9db1e9984e91aa3f532259e9f05fd1994d8402f993887a824&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nReflecting on my professional journey, I have had the opportunity to explore various work modalities. From my early days in on-site environments, savoring technical discussions around me, to remote work across different regions, embracing the nomadic lifestyle and thriving in multicultural settings.\\n\\n\\nLet\'s delve into this topic further in the article.\\n\\n\\n## Work Location in the past 5 Years\\n\\n\\nLet\'s address an important aspect first. Remote work isn\'t a novel concept that emerged during the COVID-19 pandemic. In fact, I\'ve been working remotely from various locations including France, Spain, and the USA since 2016. The tools and infrastructure for remote work, however, have definitely evolved over time.\\n\\n\\nBefore the pandemic, the majority of companies preferred on-site operations and invested heavily in office spaces to meet their employees\' needs.\\n\\n\\nHowever, the pandemic essentially forced a large-scale social experiment in remote work. The majority of us had to adapt to working from home. Surprisingly, it turned out to be quite effective!\\n\\n\\nHowever, as the pandemic winds down, there\'s an increasing push from companies to revert to the pre-pandemic model. Interestingly, many employees are reluctant to give up the benefits of work-life balance they\'ve experienced during this period (less commute, more family time, more personal time, etc).\\n\\n\\n## The different modalities of Work\\n\\n\\nBefore we delve further into the topic, let\'s look at the different work models.\\n\\n- **On-Site**: This is the conventional work model where employees need to be physically present at a particular location, often an office, to do their work.\\nThis means the employee needs to be in the same city as the company at all times.\\n- **Hybrid**: This flexible model blends on-site and remote work. Employees might work from home some days and be in the office on others.\\nThis usually means the employee needs to be in the same city as the company.\\nSome subtypes include:\\n\\t- **Weekly days at the office**: set days are designated as either on-site or remote.\\n\\t- **Flexible hybrid**: the individual can choose the best place to work at any given moment, but there is a quota for on-site time.\\n- **Remote**: Here, employees work from outside the traditional office environment such as from home, a co-working space, or any other location with internet access.\\nThis doesn\'t require the employee to be in the same city as the company.\\nSome subtypes include:\\n\\t- **Quarterly days**: A certain quota needs to be met within a specific timeframe that enables the person to work remotely.\\n\\t- **On-demand travel**: There are instances where travel is needed for significant interactions that require groups of people to collaborate.\\n\\t- **Full remote**: unless it\'s necessary, the employee doesn\'t need to travel at any particular time.\\n\\nAs we can see, there are subtle differences that separate a Hybrid from a Remote work model. The deciding factor that differentiates one from the other is the employee\'s ability to be located in the same city or nearby.\\n\\n\\n## Excuses to go back to the office\\n\\n\\nSome of the reasons that can be affecting the current situation:\\n\\n- **Distrust of Employees**: Some companies might harbor concerns about the potential lack of productivity when employees work remotely. These concerns stem from the belief that without direct supervision, employees might be more prone to distractions or unproductive behaviors. Working from home introduces a complexity to the monitoring of employees that some companies dislike.\\n- **Cultural Concerns**: A strong, cohesive company culture is often considered a key factor in a business\'s success. Some companies believe that this culture can only be fostered through face-to-face interactions and shared experiences that come with working in the same physical space. They worry that remote work might dilute this culture, making it harder to maintain shared values, facilitate team bonding, and encourage a sense of belonging among employees.\\n- **Performance Changes**: The shift to remote work can bring about changes in employees\' performance. This is a complex matter as employee performance does not have a single definition, and as we will see later in this article, it can be driven not only by the person but by their environment.\\n- **Office Investments**: Companies that have invested substantial amounts of money in their office spaces may feel compelled to make use of these investments. These investments could include not just the physical office space itself, but also equipment, furniture, and other amenities designed to make the office a comfortable, productive environment. The continued payment for office rents, maintenance, and utilities while the space remains largely unused can also be a motivating factor to return to the office.\\n- **Investor Contributions**: In an investment landscape, investors often diversify their investments as a risk management strategy. A significant portion of these investments may be allocated to real estate, directly or indirectly, through various investment funds. If the workforce shifts towards remote work, the demand for these office spaces could decrease, leading to potential implications on the return on investment for these real estate investments. Therefore, the trend towards remote work can have a broader impact on the investment community.\\n- **Community Impact**: The presence of office districts in cities and towns has resulted in the creation of numerous jobs in various sectors. The local economy in these districts frequently thrives on the regular influx of office-goers. This includes a wide range of businesses such as restaurants, caf\xe9s, fitness centers, and retail stores, all of which rely substantially on the footfall generated by employees working in nearby offices. These businesses can be significantly influenced if more people transition to remote work. As the footfall decreases, these businesses may struggle to sustain themselves, leading to potential job losses and broader socio-economic implications.\\n\\n## Debunking Concerns\\n\\n\\n### **Distrust of Employees & Performance Changes**\\n\\n\\nWhile personal skepticism can influence views, performance assessments should be driven by solid data. With that in mind, let\'s delve into some of the available data:\\n\\n\\n> One ground-breaking Stanford study on the subject, which included 16,000 participants, found a marked increase in remote employee output\u2014even for employees who only worked from home a few days a week. During the study, the telecommuting group displayed a 13% average improvement in performance over the office-based control.\\n\\n\\n\\t[Source](https://qz.com/1627980/remote-work-can-boost-productivity-if-you-have-the-right-tools)\\n\\n\\nWhile we possess this data, it\'s important to note that our employees\' performance can fluctuate between different work modalities.\\n\\n\\nIn both Remote and On-site work environments, everyone operates under the same modality, thus establishing a unified workflow. Conversely, the Hybrid mode can introduce complications. This is due to certain sub-categories that we\'ve discussed, where some individuals are local and others are remote. Such a dynamic can inadvertently impact the performance of remote workers, not through any fault of their own, but due to potential exclusion or differential treatment.\\n\\n\\n### **Cultural Concerns**\\n\\n\\nThe cultural concern is normally embodied by the phrase:\\n\\n\\n> There are things that happen in the office, that don\'t happen in remote\\n\\n\\nThe concept here is that specific discussions occur naturally in a local setting. Hybrid work capitalizes on this by emphasizing the value of office days when such interactions can take place. However, a common concern among hybrid employees is that they spend a substantial portion of their office time on remote calls.\\n\\n\\nConversely, effective communication and the right tools are crucial for remote work to ensure these interactions can be replicated. This is an area many companies are still struggling to address effectively.\\n\\n\\n### **Office Investments**\\n\\n\\nInvestments, particularly in real estate, are often expected to grow over time; hence they can be complex. It\'s essential to distinguish companies between two groups based on their ownership of the space:\\n\\n- **Owners**: As outright owners of the physical space, this asset is a key component of their balance sheet. Naturally, they\'ll want to maximize its value, as it directly impacts their valuation.\\n- **Renters**: With temporary ownership, the space represents an ongoing cost that they need to manage. Minimizing this cost can significantly enhance their profit margins.\\n\\nAs you might expect, each group has a distinct focus. On-Site will likely appeal to Owners, while Remote will be more beneficial for Renters.\\n\\n\\nAs you can see and \\n\\n\\n## Addressing Remote Concerns: Make Remote Work\\n\\n\\nFrom our observations, the primary concern stems from the absence of a unified approach and a shared workspace.\\n\\n\\nAs a company, to surmount these challenges, we can adhere to a few key principles:\\n\\n\\n### Remote First\\n\\n\\nThe guiding principle of this work model is:\\n\\n\\n> If one person is remote, everyone is remote\\n\\n\\nThis approach aims to treat all employees equally, irrespective of their location. Every process, ranging from meetings to casual conversations, should be designed keeping remote employees in mind. This method ensures that remote workers are not sidelined or disadvantaged compared to their on-site peers.\\n\\n\\nTo this end, investing in the right collaborative tools is crucial so that everyone has the same access and capabilities. Here are some tools you might need:\\n\\n- **Virtual White Boards**: Most meetings involve some form of interaction that typically takes place on whiteboards in an office setting. If we use a physical whiteboard in conjunction with a conferencing tool, we risk limiting the involvement of remote participants. Therefore, having a virtual alternative is necessary. A good example of this is [Miro](http://miro.com/), where you can invite people to collaborate live on various types of boards\\n- **Pairing Software**: To work efficiently in pair or mob programming, we should simplify collaboration as if everyone were working on the same machine. Code with me from IntelliJ is an example of this.\\n\\n\\t[https://www.youtube.com/watch?v=Lq0fCMCK-Yw](https://www.youtube.com/watch?v=Lq0fCMCK-Yw)\\n\\n- Collaborative Knowledge Base: It\'s important to have a centralized location for team and company information. However, many tools are rigid and lack concurrent editing capabilities. We need to ensure we choose the right tool for our needs. Personally, I\'ve found [Notion](http://notion.so/) quite useful.\\n- Collaborative Documents: Just like our knowledge base, we need the ability to concurrently edit documents like presentations and spreadsheets when preparing for presentations or budget cycles. Google and Microsoft offer robust products with the necessary features.\\n- Async Communication Tools: All workers need their focus time, so having the right tools for asynchronous communication, including a chat application and traditional email, is essential.\\n\\nThe last three tools are not exclusively for remote work but are important for any work mode.\\n\\n\\n### Virtual office\\n\\n\\nMuch like a physical office promotes interaction and collaboration, a virtual office offers an online shared space for employees to engage, collaborate, and foster relationships.\\n\\n\\nThis isn\'t merely about conferencing tools, but about the creation of social environments with virtual desks and communal areas. These tools enable employees to engage in organic conversations when close to another\'s virtual desk, relax in virtual coffee spaces, indulge in games, and more. Gather.town is a prime example of such a tool.\\n\\n\\nIt\'s also worth noting the cost-effectiveness of virtual offices compared to traditional physical spaces.\\n\\n\\n[video](https://www.youtube.com/watch?v=zbllvQZRyh0)\\n\\n\\n## Parting words\\n\\n\\nRemote work has the potential to be as effective as in-office work, offering employees better work-life balance without compromising the company culture that we hold dear. Like many challenges in our industry, successful remote work hinges on using the right tools. The traditional tools used for in-person work may not be suitable for this new dynamic.\\n\\n\\nTo be candid, hybrid work models often fall short in numerous ways, often representing a compromise rather than an ideal solution. In my view, hybrid models are the most challenging to manage and their impacts are not always evident.\\n\\n\\nGiven this, it\'s essential that we reassess the paths our companies are taking. We may be inadvertently hindering our own potential due to a few manageable concerns.\\n\\n\\n[1] [https://wfhresearch.com/wp-content/uploads/2024/04/WFHResearch_updates_April2024.pdf](https://wfhresearch.com/wp-content/uploads/2024/04/WFHResearch_updates_April2024.pdf)\\n\\n\\n[2] [https://qz.com/1627980/remote-work-can-boost-productivity-if-you-have-the-right-tools](https://qz.com/1627980/remote-work-can-boost-productivity-if-you-have-the-right-tools)"},{"id":"/2024/04/25/T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry","metadata":{"permalink":"/blog/2024/04/25/T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-04-25T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry.md","source":"@site/blog/2024-04-25T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry.md","title":"Unpacking the Truth of Peer Reviews in the Software Industry","description":"Dive into the world of peer review in software development. Discover how it\'s more than just pull requests and explore the efficiency of pair programming backed by research data. Learn how peer reviews can improve quality, foster collaboration, and enhance team dynamics in various roles, from design to leadership.","date":"2024-04-25T00:00:00.000Z","formattedDate":"April 25, 2024","tags":[],"readingTime":8.235,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-04-25T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/unpacking-the-truth-of-peer-reviews","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Dive into the world of peer review in software development. Discover how it\'s more than just pull requests and explore the efficiency of pair programming backed by research data. Learn how peer reviews can improve quality, foster collaboration, and enhance team dynamics in various roles, from design to leadership.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/35d0ee22-63dc-45c0-81fa-b6f679d1375a/Designer3.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=82f4bed4501880aa513384932082a84f8a86e5ee01bf166b621cb6be13a32c5d&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Unpacking the Truth of Peer Reviews in the Software Industry"},"prevItem":{"title":"Make Remote Work, Great Again","permalink":"/blog/2024/05/01/T22:00:00.000Z-Make Remote Work, Great Again"},"nextItem":{"title":"Mastering Second Level Relationships: A Key Strategy for Workplace Success","permalink":"/blog/2024/04/14/T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success"}},"content":"I currently feel like the odd one, out. It appears that many people are associating peer review in software with code reviews via pull requests. Do you also share this perspective?\\n\\n\\nEven before I transitioned into leadership roles, where coding took on a secondary function, I did not engage in pull requests. In fact, I haven\'t submitted a pull request in a professional context since 2017.\\n\\n\\nLet\'s delve into the nuances of the peer review process in this article.\\n\\n\\n## Understanding Peer Review\\n\\n\\nPeer reviews, also commonly referred to as peer assessments, involve a rigorous and structured process whereby a professional\'s work or research is evaluated and critiqued by one or more individuals who possess similar competencies, educational background, and expertise. This concept and methodology of peer review originated and took root in the academic sphere, where it is routinely employed as a critical tool to appraise and judge the value of scholarly outputs and research findings.\\n\\n\\nThe primary function of this system is to serve as a form of quality control, significantly bolstering the credibility, reliability, and overall accuracy of the work that is being reviewed. This is achieved by providing an additional level of scrutiny, thereby eliminating any potential errors or oversight that might have been missed by the original author.\\n\\n\\nFundamentally, peer review is a cooperative and collaborative process. It is meticulously designed to enhance the quality of work produced, encourage continuous learning and improvement among professionals, and support the establishment and maintenance of objectivity. It ensures that the work produced adheres to the highest standards of excellence, providing an essential layer of accountability in professional settings.\\n\\n\\n## Software Development Peer Reviews\\n\\n\\nWithin software development, peer reviews often manifest as code reviews. This involves a developer scrutinizing a software project\'s source code to identify bugs, errors, or potential enhancements. It\'s about more than just pinpointing issues\u2014it\'s also about understanding varied methodologies and learning from colleagues.\\n\\n\\n### Types of Code Review\\n\\n\\nI want to emphasize this point, as it appears that the contemporary software development scene may not fully grasp it.\\n\\n\\n> Code reviews aren\'t always synonymous with Pull Requests \ud83e\udd2f\\n\\n\\nLet\'s delve into the alternatives:\\n\\n\\n![peer_review.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/503307b1-972e-4006-8987-2f81eaa0849f/peer_review.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TXTDZXAE%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDp7cQ3wh7CTeoCCgaoakm0%2BhutFa3xok02MwxiVB2ADAIgEVBFUQpBstVJFCUS2HEv7o%2BPtvUw1bDG%2BAkG0n2wStgqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDIEr9zsbzIwAimHHXircAz42ZPYHWz86V97UIspB8uhhR1pOpVWSkrDVCwxVbkSOXMPUsepo5rLr%2FsR5Aou1Dsa8N7fmwDWkh0eloIIQzLlIMRnhdV%2FZTML6WIemaEmf42BL92%2BGWqLtYYz301TfaA664JyLO%2BS0y2wVfTKkwCaoiHhwnxgrUMchQ1FCSuWHBAeXkt13rHzHfjG9%2B2fvtGss2UrroK9cZIGdepts%2F6qSUgPXWUowqMnIdtg0DGFX8a4LxVyUipgqQJlqo0UcjhdhbpGdEIIVKh8nQPQSNmk3VAY2Zd4XXUTbUgSYJhfNSRMNj%2Bjv18Q7tGRK1qMeHq%2FOKd%2Fh3Dl2Xh86E4OX7FjWFF8hcBvAQzPDHXJp4Vq3HIO7KMMJcKD%2Fpv8ckDH0BaYwFFj%2FBKEZITSlog4YQ6IkwGlFk0Rh1E5Rd4cqgeMMpuo%2FzcU1UeJKaBnpFJVon9vAVGAazGNXcer%2FFoVSjcna7DVK2AA14u0VfFMAHWfxdF78hDkBcNb10PfKi4ZYasrILM4xwo4UFUxDCBR12kGXsDUoYpJxXRZ40ltOyBPbaSSiG0Ke27UfRlbnhlGLvH%2B0E0zZDQvQBzCxMvgwRwfi7JfwuExoG1l2pRC37Hrqh0VOKvcB%2BRXQvBi7MJ2drcQGOqUBmvzUHUWlrG44EOLodvRDaHYdeVCeJdeQDqT2vfR%2BPUWV0s8YwRQgO1vBJAcQhXR2j16YnqC5w9j0lMj3Xe5k5QpsqUSyzRQmtHlJ8uzdpDzK0uPHmOO3cs2bMzZtsOjkoHuA464y%2Fa0ZA8zKuOUd8cBA4TRZ3dWMcC0jADb1KfIkQDChRDmZ1BEw2lWt6NMtyl3tcOUIiBrQH7GUjOo16DcEWt7Z&X-Amz-Signature=8f3964a377a76fdc00fe1774b123f152fd2f37c57e2884be98f0355543a2c313&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nKent Beck has offered a two-dimensional perspective on the types of peer reviews in his [article](https://tidyfirst.substack.com/p/thinking-about-code-review). The two dimensions are:\\n\\n- Synchronicity: Refers to the timing of the review process. It can occur in real-time as the code is being written (synchronous) or after the author has completed the code (asynchronous).\\n- Continuity: Considers the workflow in relation to the review process. It can either allow the author to continue working (non-Blocking), or require the author to pause until the review is completed (Blocking).\\n\\nLet\'s explore what does each of this peer review means:\\n\\n- Formal Review: A formal review is a thorough and systematic evaluation of a project, product, or performance. It is often conducted by a group of qualified individuals and follows a specific procedure or set of criteria.\\n- Pull Request: A Pull Request is a feature in version control systems, like Git, where a developer proposes changes to a codebase. The request is a way to communicate the changes to the team and ask for review and integration into the main code branch.\\n- Over The Shoulder Review: This is an informal method of code review where one developer looks over the author\'s shoulder as the latter walks through the code.\\n- Code Comments:  In this approach, developers annotate the source code with comments. These comments offer insights, point out potential issues, and suggest improvements.\\n- Pair Programming: This is a method where two programmers work simultaneously at one workstation. The \u201cdriver\u201d writes the code, while the \u201cobserver\u201d reviews each line of code as it\'s being written.\\n\\n### The Relation Between Feedback Cycle & Waste\\n\\n\\nInherent to the process of peer reviewing is its role as a \u201cquality\u201d gate. As such, many these processes tend to fall into the blocking quadrant of operational procedures. This characteristic of peer reviews can create situations where individuals become idle, waiting for the process to be unblocked. This idle time is not only detrimental to productivity, but can also affect morale and engagement among team members if they span over time. Therefore, it is important to streamline the feedback cycle to minimize these idle periods and maintain efficient workflow dynamics.\\n\\n\\nIn addition, the involvement of a second individual to review the work is also necessary for any type of peer review process. Implying that the longer the feedback cycle between the generation of code and its review, leads to an increase in waste and rework. This is due to the fact that the longer the delay in feedback, the greater the potential for the initial work to diverge from the optimal path, necessitating more significant changes and revisions later on.\\n\\n\\nTherefore, it is crucial to establish a swift and efficient feedback cycle in peer review processes. By doing so, we not only reduce the likelihood of waste and rework, but also enhance the overall productivity and effectiveness of our teams.\\n\\n\\nIf we take this into account, we want to be as much as possible in the sync & non-blocking quadrant, as the synchronicity causes a small feedback cycle and the non-blocking minimizes the IDLEs. \\n\\n\\n![peer_review2.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/1293ddd5-7e74-4e39-a041-3bc532d3d432/peer_review2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TXTDZXAE%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDp7cQ3wh7CTeoCCgaoakm0%2BhutFa3xok02MwxiVB2ADAIgEVBFUQpBstVJFCUS2HEv7o%2BPtvUw1bDG%2BAkG0n2wStgqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDIEr9zsbzIwAimHHXircAz42ZPYHWz86V97UIspB8uhhR1pOpVWSkrDVCwxVbkSOXMPUsepo5rLr%2FsR5Aou1Dsa8N7fmwDWkh0eloIIQzLlIMRnhdV%2FZTML6WIemaEmf42BL92%2BGWqLtYYz301TfaA664JyLO%2BS0y2wVfTKkwCaoiHhwnxgrUMchQ1FCSuWHBAeXkt13rHzHfjG9%2B2fvtGss2UrroK9cZIGdepts%2F6qSUgPXWUowqMnIdtg0DGFX8a4LxVyUipgqQJlqo0UcjhdhbpGdEIIVKh8nQPQSNmk3VAY2Zd4XXUTbUgSYJhfNSRMNj%2Bjv18Q7tGRK1qMeHq%2FOKd%2Fh3Dl2Xh86E4OX7FjWFF8hcBvAQzPDHXJp4Vq3HIO7KMMJcKD%2Fpv8ckDH0BaYwFFj%2FBKEZITSlog4YQ6IkwGlFk0Rh1E5Rd4cqgeMMpuo%2FzcU1UeJKaBnpFJVon9vAVGAazGNXcer%2FFoVSjcna7DVK2AA14u0VfFMAHWfxdF78hDkBcNb10PfKi4ZYasrILM4xwo4UFUxDCBR12kGXsDUoYpJxXRZ40ltOyBPbaSSiG0Ke27UfRlbnhlGLvH%2B0E0zZDQvQBzCxMvgwRwfi7JfwuExoG1l2pRC37Hrqh0VOKvcB%2BRXQvBi7MJ2drcQGOqUBmvzUHUWlrG44EOLodvRDaHYdeVCeJdeQDqT2vfR%2BPUWV0s8YwRQgO1vBJAcQhXR2j16YnqC5w9j0lMj3Xe5k5QpsqUSyzRQmtHlJ8uzdpDzK0uPHmOO3cs2bMzZtsOjkoHuA464y%2Fa0ZA8zKuOUd8cBA4TRZ3dWMcC0jADb1KfIkQDChRDmZ1BEw2lWt6NMtyl3tcOUIiBrQH7GUjOo16DcEWt7Z&X-Amz-Signature=bb983e8fca5de0b8adb136b32a09a754c6dba6a3039c8f108f8f3b494552c08d&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\n### Debunking Pair Programming Myths\\n\\n\\n> Why\'re then we not all doing pair programming?\\n\\n\\nPair programming is often misunderstood and associated with numerous fallacies, specially in the realm of efficiency of project resources and velocity. With this in mind, let\'s review the studies:\\n\\n- [The Costs and Benefits of Pair Programming](https://collaboration.csc.ncsu.edu/laurie/Papers/XPSardinia.PDF):\\n\\n\\t> The significant benefits of pair programming are that:  \\n\\t> \u2022 many mistakes get caught as they are being typed in rather than in QA test or in the field (continuous code reviews);  \\n\\t> \u2022 the end defect content is statistically lower (continuous code reviews);  \\n\\t> \u2022 the designs are better and code length shorter (ongoing brainstorming and pair relaying);  \\n\\t> \u2022 the team solves problems faster (pair relaying);  \\n\\t> \u2022 the people learn significantly more, about the system and about software development (line- of-sight learning);  \\n\\t> \u2022 the project ends up with multiple people understanding each piece of the system;  \\n\\t> \u2022 the people learn to work together and talk more often together, giving better information flow and team dynamics;  \\n\\t> \u2022 people enjoy their work more.  \\n\\t> \\n\\n\\n\\t\\tThe development cost for these benefits is not the 100% that might be expected, but is\\n\\t\\tapproximately 15%. This is repaid in shorter and less expensive testing, quality assurance, and field support.\\n\\n\\n\\t\\t![peer_review3.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/77168f39-fda7-4799-bfd2-36fb3ff5cd01/peer_review3.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466URY2E3ZF%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115509Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQC7To7cB%2F8Vdpx3%2BaM3tD6foEHxsNfd%2BocVe%2FKyrV8ZtAIhAP3Mev4bCydau8Q366jXxxOogroNIcTb7%2BzLUqJjURJYKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igyu1nIWmHnPd%2Feyiukq3AOHJ8%2Fy%2BXgQcPqk1HbCj3izAFk6JhvZpON8LIDB2%2FZ7pcNXEU2gqa7NJp6SBdxv19AMUg1saGkQdk3asYI2rtFEHIzJWhuAM0lYUa44GrC6EfvT6fkYMzDOeDE%2ByrCZzBYp2YKxI53VizZ4oMDHIZXoycIgX%2Bm6vzfJlNrmgvsCnYnoYhuPHHZNJmW60RSVRSuhnTa56SZo%2BnWCCLRZZUVopY1pBBEnGqPxAEvpaTepT16pq5nYxKmO%2FPYDEjPavUWqoHxqD%2BxYxjrcZsP3VNldQyGoKU9W%2F%2BoUHCvE5dn9Pe%2FmsPBX9gnu5iQvgtzGin4R5FNHviU7XtP36rcIHu%2BtOydHSAqwvbCPz89x3eYx%2BS3X4BF7kxLP048mFChkvS9bWT5ztJsqXPbgiNl2%2FzAa97AySMV3zsBLhs08JAouQWHP5zVJY53iTxTN%2FwrJQ%2BfwmbnGyGXpHUo9pe4SealwbQPYVHQUOFZtpOKAp%2B22axrP9tfU4KDMhU5EdbDOpE7tI%2BQ45fpHB855nsCv3d7Wm1JMWzt6iVVPP48dbebodu%2F1ba8zf%2BxBd%2BOdAOeXkvRb34WAzisrpdPF1U%2BQl%2BlBeSj6irtK90SAwdGKRsteQj%2B6B4ccAXD3cF6KHjDHnK3EBjqkASt%2FTtv1153WPNWCaOgn7JJYADQDjkZGboTAuPQJz4lqXcDic18M6RKVyOvgKxBU9XZqs6cGbRFe2l1Gx6Pq8aayA%2BRL57Q8W3Q3U0oGgdvOUyzED4n42Dqrh7zGkHvhZw4Zc3LZPalfDcNewK%2BxVWO6D4bbPGBwqmQmZep9zngpXP4JgiWxc%2B2aMwtOgcjjqPU9is58yJgufrZIPc6vLN2MF3Ku&X-Amz-Signature=71bd3237e7cf49af14f563868175493d4ce7210ddeb00d5d9496130737e13dac&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- [The Case for Collaborative Programming](https://www.researchgate.net/publication/27295641_The_Case_for_Collaborative_Programming): Teams completed their task 40% _faster_ than the individuals (and this result was statistically significant).\\n\\n\\t> A field experiment was conducted using experienced programmers who worked on  \\n\\t> a challenging problem important to their organization, in their own  \\n\\t> environments, and with their own equipment. Findings revealed that all the  \\n\\t> teams outperformed the individual programmers, enjoyed the problem-solving  \\n\\t> process more, and had greater confidence in their solutions.\\n\\n\\n\\t\\t![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/4ac2c4d0-1a01-49e8-bade-23657d2d1e64/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4667YX3YWSA%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115510Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDiLKR%2B6B%2BxQzH4jXnNkMcd1nFxIN0EhyXN7XqN0hYrmQIgc9Ih4ctUIkYeOgKnZQBXuQbiCkdBCRi4tvCRUeT%2FaL8qiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDIpZpBkAyPFy0hT7cyrcA8MrzFOy1X3kvVz2kBRK0FQmCdx%2FQpt8VK2HO2viHK%2BqYz5SOU72QExvsU49nzzXOv9%2FcmlOwcEGtoexmJuj%2FIG3Ee3s66ODNHrt7TjGgJQoG0kjlDggGzQDVAeUFQT3B4Mpny4UtY0vC9L19tMMZZ5TGWkP5%2F%2F5qrgsP2ken0q6orHRwc0OM4R7GutZqF1RU01jIgUv%2Biiv3%2FKWA3zH4vfPbH5yNxWCGMXnkkOMuY3SPI78lxt9lIUyOsM7OyrEWQlGoqhzr2fpZCruKYjiQ17hpdcliEABTD6Akv6OJ9fV%2BQTqvsWw7XtUkmQJ3k4Xr2xEIjUN4SKgRJGaZWSgcVJzUPPOhpDh6vcFTlreWACZPBttVdozZVDGCUINBcFSCSha3XzjOMiSdGEPA03Riqzf%2FKKYG3PaoKuf95UfPpIlR6JYWV8zmaMLhgURuzVfbnRQr9oR6vc58ltBS8i4pxQUc5m9OhalNhF1F2Ayd8nkONIWvl%2FzXtkFP82ux%2F%2FEK66034p%2BoX2oIn%2Fg4U0PnU6UdlD6d88izV%2BLccBUzdfE5PHsQKQVtrGtDxzvhT86%2FVRyFF9uWQ%2F2GxW9OTc5SAHeMVo76GpubGgy6bzB4HwMCEGzzINArY7cz6zfMKSdrcQGOqUBWcqy79GNeghPxKyOrBLWe3IVk5bdJ4cDye%2FIkF8wh58YN%2FMUoWAry6YFnm3YQNrPQmCfk9SPYkWF%2BCEJq0AGcgMbP%2Fb5lvvNEgLEAJqnaDxImBqkDwNQ1QLTjBypWvyO%2Fv5F9mbum%2BQt9E9Onzbgci9B4e2CBhRQSYEeAmYPpwkwfACFKhs7eNby%2FYg7%2FK%2Fp55f3tuMewMRxu9DQm4K%2FJcnVgyHz&X-Amz-Signature=a4b1309a3759705f1b4b5d2f51bfd8b2360efe7ceaf05825087e9d70d94bf272&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- Management Impact on Software Cost and Schedule: Regarding the performance of pairs vs individuals:\\n\\n\\t> Final project results were outstanding.  Total productivity was 175 lines  \\n\\t> per person-month (lppm) compared to a documented average individual  \\n\\t> productivity of only 77 llpm.  \\n\\t> [\u2026]  \\n\\t> The error rate [\u2026] was three orders of magnitude lower than the  \\n\\t> organization\u2019s norm.\\n\\n- [The Collaborative Software Process](http://www.cs.utah.edu/~lwilliam/Papers/ICSE.pdf): One key finding was that pairs took 15% more developer hours to produce their solutions, but those solutions had 15% fewer bugs.\\n\\n\\t> An experiment was run in 1999 with approximately 40 senior Computer Science  \\n\\t> students at the University of Utah. Two-thirds of the students worked in  \\n\\t> two-person collaborative teams [\u2026]. The other students worked  \\n\\t> independently [\u2026] to develop the same assignments.  The productivity,  \\n\\t> cycle time, and quality of the two groups have been compared. Empirical  \\n\\t> results point in favor of the collaborative teams [\u2026].\\n\\n\\nHaving reviewed the data, it\'s important to recognize that our industry leans against this technique not due to the data, but for other subconscious underlying reasons:\\n\\n- The data might seem counterintuitive.\\n- The available tools are more attuned to a different technique (pull requests).\\n- Given our inherent social tendencies, there\'s a psychological aspect to consider that we believe spending too much time with a person is not enjoyable.\\n\\n## Pairing in Other Engineering Roles\\n\\n\\nPairing can be applied effectively in these roles in the following ways:\\n\\n\\n### Design\\n\\n\\nIn design, pairing can be used for brainstorming, critiquing, and refining design concepts. This includes sketching, prototyping, user testing, and iterating on designs. Pairing helps to bring multiple perspectives to a design problem, leading to more innovative and inclusive solutions.\\n\\n\\n### Product\\n\\n\\nIn product roles, pairing can be beneficial during product planning, strategy discussions, and execution. Two product managers can collaborate to define the product roadmap, prioritize features, and make decisions based on customer feedback and data analysis. Pairing can lead to more robust product strategies and better decision-making.\\n\\n\\n### Leadership\\n\\n\\nIn leadership roles, pairing can be used for decision-making, strategic planning, and problem-solving. Two leaders can work together to guide their team or company, make critical business decisions, and navigate complex challenges. Pairing in leadership can foster a culture of collaboration, improve communication, and lead to better outcomes for the team and organization.\\n\\n\\n## Closing thoughts\\n\\n\\nPeer review, in software development, is a critical quality control process. It involves evaluation of a professional\'s work by others with similar expertise, enhancing the work\'s credibility and accuracy. \\n\\n\\nHowever, peer review isn\'t synonymous with pull requests and can take various forms such as formal reviews, over the shoulder reviews, code comments, and pair programming. \\n\\n\\nPair programming, often misunderstood, is an efficient method that reduces errors, improves design, and enhances team dynamics. It can be applied to other roles like design, product, and leadership for brainstorming, refining concepts, strategic planning, and decision-making."},{"id":"/2024/04/14/T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success","metadata":{"permalink":"/blog/2024/04/14/T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-04-14T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success.md","source":"@site/blog/2024-04-14T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success.md","title":"Mastering Second Level Relationships: A Key Strategy for Workplace Success","description":"Boost your workplace productivity and job satisfaction by understanding and effectively managing second level relationships. Learn about their impact, methods to assess them, and strategies to enhance these relationships.","date":"2024-04-14T00:00:00.000Z","formattedDate":"April 14, 2024","tags":[],"readingTime":5.875,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-04-14T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/mastering-second-level-relationships","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Boost your workplace productivity and job satisfaction by understanding and effectively managing second level relationships. Learn about their impact, methods to assess them, and strategies to enhance these relationships.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/007ebdba-70ba-422c-a0c7-790018bfb40f/1713242573205.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=c917942c4af6ef58e1e15ae6ca81a1e2eaa6998f311be4caa07e3d9f32e8074c&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Mastering Second Level Relationships: A Key Strategy for Workplace Success"},"prevItem":{"title":"Unpacking the Truth of Peer Reviews in the Software Industry","permalink":"/blog/2024/04/25/T00:00:00.000Z-Unpacking the Truth of Peer Reviews in the Software Industry"},"nextItem":{"title":"AI In The Workplace: Are LLMs Hype or Reality?","permalink":"/blog/2024/04/04/T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality"}},"content":"Workplaces operate as complex social ecosystems, with dynamics that reach beyond our immediate coworkers and supervisors to include a broader network of relationships. These secondary connections, which are frequently underestimated, are vital to personal success and the overall effectiveness of an organization.\\n\\n\\nHave you ever thought about how to manage these second level relationships? This post aims to delve into the concept of second level relations at work and their significance.\\n\\n\\n## Understanding Second Level Relationships\\n\\n\\nSecond level relations in a work context refers to connections with individuals or groups outside your immediate team, who nonetheless can dramatically impact your work. This includes stakeholders, teams from other departments, service providers, and clients. Much like distant relatives in a family, you may not interact with them daily, but their influence on the work environment can be significant.\\n\\n\\nThese second level relations have a substantial impact on productivity. For example, a good rapport with a key stakeholder could mean faster approvals and quicker project completion. Similarly, positive relations with other teams can foster cross-departmental collaboration, creating a more cohesive and efficient work environment. Conversely, negative relationships could cause problems. That\'s why it\'s essential to proactively manage these relationships.\\n\\n\\nNow, let\'s categorize and delve into these relationships.\\n\\n\\n### **Stakeholders**\\n\\n\\n A stakeholder can be an individual, group, or organization that has an interest in, or can be affected by, the outcomes of a project or business activity. This can include other employees, customers, suppliers, shareholders who have a stake in the project or organization\'s success.\\nStakeholders can significantly influence the direction and success of our projects, as they are the promoters of the needs that we are trying to solve. Maintaining open communication, understanding their needs and expectations, and addressing their concerns proactively can foster a positive and productive relationship. \\n\\n\\n### **Other Teams** \\n\\n\\nThese are groups within the same organization but working on different projects or tasks. They may have different goals and objectives, but their actions and decisions can significantly influence the progress of our projects. \\n\\n\\nHealthy relationships with other teams can facilitate better resource sharing, problem-solving, and collaboration. Miscommunication or disputes with other teams can hinder progress, cause delays and create a challenging work environment. Thus, it\'s essential to maintain clear communication and mutual respect with other teams.\\n\\n\\n### **Providers**\\n\\n\\nThese are the external organizations or individuals who supply goods, services, or expertise that are essential to our projects. This can include everything from software vendors, consulting firms, to freelance experts. Providers can have a significant impact on our project timelines, budgets, and overall success. \\n\\n\\nIf a provider fails to deliver as expected, it can cause delays, increase costs, or even jeopardize the entire project. On the flip side, a reliable provider who understands our needs and reliably meets their commitments can be a key factor in a project\'s success. Therefore, maintaining good relationships with providers is crucial. This involves clear communication, timely payments, and treating them as partners in our success.\\n\\n\\n### **Clients/Customers**\\n\\n\\nThese are the end-users of the product or service we are developing. They can greatly influence our projects, as their feedback and satisfaction often determine the project\'s direction and success. \\n\\n\\nUnderstanding their needs, addressing their concerns quickly, and valuing their feedback are essential for a positive relationship. A satisfied client can lead to repeat business, positive word-of-mouth, and improved reputation, while an unsatisfied client can hinder the project\'s success.\\n\\n\\n## Determining Importance of relationships\\n\\n\\nIn assessing the value of relationships, it\'s key to look at aspects like how often you interact, how interconnected your work is, and their sway in decision-making. By ranking relationships with these factors in mind, you can direct your energies where they\'ll have the most impact - after all, we can\'t cultivate every relationship equally.\\n\\n\\nI typically use Stakeholder Mapping to gauge influence and examine the state of a relationship. You\'ll find a template in the following image and this [link](https://excalidraw.com/#json=7qSzy52drnbwd6Sy8C2dz,bEm6jClB_RWoI3a6YV5QRg).\\n\\n\\n![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/59d3a19f-5fef-4b4f-8971-39c02c627e98/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4665ICWK4T7%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDGCPTAXo%2BRi6N6OK7QhuRA%2B2dnyaykON4z5Hiafq9GrgIhALuFdULhczhtZhKlHH8pNNDYJRcBHSrTNyDhX%2BX7bR6nKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgyI5LoKTBb%2BoVGeTjIq3ANn4vSK5KICeL8eT%2FvfMv362SKcwFXoFHfQ8t9q%2FiWFdHZsHWgRyu9kR94KHQuuhUeSfGF5aLXE92ggjJzhqkRyR1kl4lgyJkzybXgBPG4AYm2x2W%2B796REThNmfct%2B0SRkqs7sidT6aDouidIW0HwtO0T4Av9sQwNajzfVj4TPaHvBQw6SdSNhdvzK3hRBWBL7CnM4LwS7h2c%2BLkJtoCBAeeksFi62qy6edsbI8pzo0%2BnJUN9Fe1YAj2LVOkRzf03eAQ9EsKOtRTI14jSrUQ2gvsWUrI2O1j64JyYHH2%2BoN8O0MXBwgbTVF1NSa558uDm%2FxQLVAyYAVZsWHoQRWmavgxsYJYqJ6fMKHf3u2s6iQI3KU7VLcDRSOf9SW9RseZyAImgBLinNoXT7e5YDD2hcFRc95mqPLI%2Fx61Y4h2dqxbOGSa5%2BK%2BElJ7BPRFJaNUNm8JYf0VjYcxcCVA6ord01wz6B22ndEmnGIpn1qAU7OxsDrCh6QmVZxaGpur8JtaysYQvyjzhklRDYke22VY6V7cgewocORCDEOe%2FQBLbIsFlYN0Qe3QjBeXLD%2B2fzBJiOoTER1ti2%2B5gGdIFMRUhKYXBhvbHPrJqH1JoK1DaFyI2TChQ0aTnuIZnbwDDinK3EBjqkAdOYnqaJ4QSs8BSJpx1hI%2FiaH9lgvWJDVa1%2FLoA53ijxqepVk5Q5NV%2FzDF6oH%2FDIWLAMT1gBsSH3pdV%2BUXPpI%2FdIP6HZQJ%2Ftj5yfeWneZ5dZAhm3W9sZgdUSbUjkqdA0fd1vW60lOI6SgYgNy8xAuCGx2O4FJTYnnt86%2FMfw6o5E7CON97j0cOnXaTcMsOVqI%2FEN9owDFUYa0MCcuC5g0M56Kc%2FS&X-Amz-Signature=889a887a99f7813ddd70390b492015efa55eb6cd31c916bb6379ffd30de43b42&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n\\nTo map out the relationships that impact your project, follow these steps:\\n\\n- **Identify Relationships**: Make a list of all the 2nd level relationships that have an impact on your project.\\nFor example, while the CEO may be a key figure in the company, if they are not directly involved in your project, including them on your map may only complicate things.\\n\\n\\t![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/40ed4941-4d92-406e-9526-d3628416a2d8/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466S5665CYS%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115510Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFh6pDhFT1sE1jCMfCEAgCT4uGINgPcOHQy7Ehet5uqXAiBRMa%2BH2%2BSHngXNbn3D1dGOdxUNRWVCD1zfMWrYzQx3lCqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM79qK8lXkVaK1tYaSKtwDo%2FQBmaeInOPF1QGOnyfKD3vr8ht%2B9F%2Fw%2BIrNlHDh4RjKJKtZtABxWZrXulVnKdGQiHx7CB%2BVInBz7rqDiBMo2pNOcM3n4Z7Sfd%2FXAzQsgaJiwkyVjrqh%2BAiBXUItB0FeUuO2Vr1TMB1iwdVvdb9yen%2BddcJ2BkJFTmClAs1ILmE9r2xWRuL84K48mTrys3%2B%2FViwk0DhHQEAeci0EZm17js%2FhZURqmmLg1YFUiVysvrB8gGlhjqksIOz6XRa3RC4GZSRoiF8ptjdvUR%2BrkX3rPWaE3cZXBWROdT1Auf%2F779wbgmvPXZTbywZjuypZ9EWoaTzLbtuwM6SMvcF0l7uqWKUHfsfQ9sImpw3YbUJlChpErl3KAOov2n3Gru5m5L3nERdi2hRbbFcmUdmk%2F7rGhQ1%2BwyduWa3Wy1HEnm7eorZpA8ad8g9qd4KfC9odjudkgf%2FldFI2gWHSg1oMyxAtkOHd3llXa2UvF%2FZCb5Uv8Tea7x23Zq3Nok%2BKvgTg%2BUk4hPUtLllACu2oLO36vf6hkTtkpDQC0Up2fld%2B3gOVEqGD4DPUDBsjHJYEFd%2BnLnpIR%2Bli%2BxBanWe8fHzrKhUgPwPT7T7LICrm2801rr1QkSLop%2BbzjebYolQif%2BIwyZ2txAY6pgFpbin%2BmPbaJMAn0%2BPcs7qB2darNG4gnTaxxXwPie79ruHW2vT%2FTuaHKKhmnMo89kLpeArFmV%2BRQ%2BREaoG5FODMEr9F8WryGxKM2zrSUZgHCEps2gnmA42t1ex%2BClI%2BRv%2BlwcdWCiouONp50YUBZom3JdN9zVaFc8mHKec31sguPqa1s9ul00v0nr4Oqw7AEqnXMSZ85UVyxMrtg7PfPJ%2BpiTWOh5US&X-Amz-Signature=942343019cd7fd9e09466a7dfcda0abc89462e89db3a3baa0832fb94bc2e1384&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- **Assess Influence**: Position these relationships on the influence axis according to how much they affect your project, relative to each other.\\nFor example, while the CEO might hold a lot of sway in the company, if they don\'t affect your project, their influence on you is limited.\\n\\n\\t![Captura_de_pantalla_2024-04-16_a_las_10.52.20.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/4e3674d8-dc03-4ecf-ba84-bb9f01e74c36/Captura_de_pantalla_2024-04-16_a_las_10.52.20.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4667W7HJ32H%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115510Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBvrsn868kA0TuJUNHOrBYH%2BXrx4mtiAyuxUkA78dvieAiB8g%2Fwx3dCfG8fXROtaWdvtPRhvQgt0%2FIaJswMcBiUN2iqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMRMOV01ZW8cnUMgc6KtwDf1QnODZuPfwlr%2FLSwN%2BNotvPOs85HsrLZLG%2FIVT5ElzhAasIriCHabJer3nwWwikIU2fzuzjWq6lsrU1zRx6Qg%2FqRBRGH%2Fxml%2FzZDL4imfBLBpfLukjOk60%2FYlXMvbBlehJhJPPpJZhfVfTlSSMIq6l4zv0ah%2BPC3bsqcRwxs8ZsIHVXgped5UB4r%2FLTb1jhalE2c%2B3SMOXPuhVWruKqwqpVQA4VfNYZ2gxDZRkayHspZD7r3sc0ag5mQsFnZn4qZdhBNpVMKZMkjFk7dhrSNLUTStBcZzO5Ird5N2VoiYdQhS8rHQiFpqYh7Ts4oFjoeKL1DuKicx0biioTPvz5WmPWZ24nsXhgtBKjpyv70akOxUSOJDXnAqmyng9IFGLsiYW5ElD5mEhCJQR3UEGAM%2BVVKxXtILXVaKSaW8JjTM%2BVE0dRdA7YDzOh9jE0fEUH5b6Nk9hEJOIBtEnAMuUp%2Ba6yukCrJxGGZ612j%2FBWWplCYYQx7of%2BbR58kCSVlkRu00URsl30EieoRU9cOoCl3BSKEiPqy6UOtaGV8gQnsKBD5uKlaoLdXu%2Bojv2iQa7026uwdd3ayv0YQtQc73EjM%2BbxOb6HGVjGmzGCAvooF7cjiECX8ZEqwfmq97Yw5J2txAY6pgHX699YmSkT6vxCNXuPo4ocVctobqpRFA%2FtEWHnNKIz33f7W5oAUZPItokKgkZpxasVV9tRLOpkjss%2BOz%2Bbg6e0ncbLwpH1qspHANyUsz%2FSuAYxbZoScsUy2UztNRzSFS%2BKelF8ZK2POY1oAezwlGZ8XsdnPURFjJSP1b7O0NWLRG%2Bexi7CzHWxui2flEatjWLntDRvLZAkL%2FwKpSKlWCC2srT9iZGy&X-Amz-Signature=79eb3b05c85dcc33188871c0b61f0ff7a0951006cfeb71bc0724a3ed35c21140&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- **Define Relationship Status**: Determine whether they are supporting your efforts (Supporters) or hindering your progress (Detractors), relative to each other.\\nFor instance, if your main stakeholder is continuously expressing dissatisfaction and losing faith in the project and team, they would be considered a Detractor.\\n\\n\\t![Captura_de_pantalla_2024-04-16_a_las_10.53.14.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/038f6062-bea9-4362-b307-dcb9f77a4aaa/Captura_de_pantalla_2024-04-16_a_las_10.53.14.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4665TL7BT3J%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIFZIz24iy%2Bi93ruKwmFzMANZ2ldRAPljZSeGi0s%2BVbj6AiEAqEPTcFZf0XrBoYYZF2K5jJ3fm5ykqelLBMkmsqMHCxMqiAQI1P%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgw2Mzc0MjMxODM4MDUiDJ%2BROERF4MIBAF4ZvircAxHS0o1setQlY6o55WPJLBu6WUSvbKvXrNXGJRjvanV2dB5NqQpbFrRaQcnpLMJPzP5KKQvkd2cqIQI9zYZJw0uH8%2FF7Z8Q2kPWE6O%2FFl%2Ff5sYcyMQEqWwBRQpU7jYkjJp9Pxi3CHYIciukx1n4R3NnghHao6lVP8IibuArny%2FBdQUp0LRBAqm4Kp5PueLDs07ku1bvwBVzckcbmVn1%2Ba%2BWPpOtu4Bj1jmA6j0rt1mdfNJNeb9qArxBHW5nqWJJULTjWRTWZShJcQIqfHZ%2ByqXR2wmtLGu1VIVJTtvM4afDtfT5q70O13EeTzHlUHFQ5jjV58krh8kkvP7xDZrOX0kvVKQp8SRJ772dxISdEJjpTXOqgHco3eOnisQSXWuG7JlTBD2uIU0nJaC2cNSD7rk7gO3xF1Nwhw3TSUOf%2FPgVVGUQz4oB1RS6rqPwKDVVBzDkcA7SVqxFY7IcdpsIStSBnsrFj4fKfbrGYOstZGBuzYPuV5bo1pucHtNXPf%2Fni2Sy%2BeQ8BaNmPuEz6%2F9dJ24ZttVsgEgrk3oyOb8AKRZ5LZ0Lwsv%2F5M28SGSPOpfk2M8G1e%2BqstXVlxWvDhUYyyhN%2FvW1AS8Lh2lNtdrffwGsi8wqRaS1H4Y8a%2BpUnMKidrcQGOqUB5ncX%2FDGNiRFQRn8%2BkvzCifHqffMttdtjWdTFFfdr8X6ABpn0W74E0dT%2F1bVFo85Y%2FNyqgoxFUpM85atGlHnE%2Bpy9ze1hxFkhHrylSBVODhh2ih%2BOtNZcmuBIO4j9SymQvjXmgwITvJZkbMiPsU%2BlK4IGIb8rhESv6WOcZiODygZD%2FmWd05KNe1tzwXBFGGN1KRwy8nKFYaai0kCVHejM%2FHybqfLH&X-Amz-Signature=e052f4a2af832295052c040742343c24309368807c7782e51e76e9e47b93ae92&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- **Decide on Areas for Improvement**: Choose a few relationships that need attention. These are usually high-influence Detractors that you would want to convert into Supporters.\\n\\n\\t![Captura_de_pantalla_2024-04-16_a_las_10.56.59.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/bfbddee9-3882-4e42-912b-d4fbb8ecf838/Captura_de_pantalla_2024-04-16_a_las_10.56.59.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RLJ4LWEI%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115512Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBhDoypdaO0OXcozbHEa%2BE4P8fc9MfDL2fRucdglmVsfAiA%2BEuVjCBlzO0aucf22wAybMs5o4sTFmis%2FjN9%2BmC56qSqIBAjU%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIM3Boju7etQUECeKAcKtwDNvgFGD2sTkJEzLh%2BljUQtHj0HwgALlGl75Bn0D2eFtGdyzrTWIjGIl4CqJ7eJOLQN3VkPMmkOrdX7s1xZyzMedKlO09BsQPPHHW9NfZWxX%2BeBA5fpFPBx4ipafjOwg1TQDFWnWSaB6BtgyV%2FcoEA%2FgcK6rh5L5w4wDm75rAQnTLhXyyLU%2Fy%2BXMMZoxya3yCblk9AZftHwsv%2BU8V9UK6mpZAi8%2Bx6T2Ydki2CXOAk8FULIAGXg018n%2Bd1unga3ChLCj2NNB9Eg7hfOsQv9B4lgaaqdWz0ekVFqgAmdVp0tNXtqdlTIeI46UwHfxnU0W7SWTLpzL1wv3IcNMFs3ueVf7laK1GOKDhUD2TPcDWDf90ahnB1Q0JVV15A7nmBFpSrMoMLv24bNS%2F3%2F9bhUeq5FoauOXHLCO4%2F3WfC1Hx9bifqPjHfVPlMR2ely3tRpNxWLpEx2b%2BqSuNvLu1o8qEzO0fM6tDuItBPrZ8cKDy9gAyW3EiSbALsGMq2VDl%2F7WWHH3985a3IQ8HItL%2BUcsvMrxrrzbdc3I7eLP1vJwvd2HHFu0nxRVuD8a22s3CvWHe%2Bbt4UNn8xbTbvkX4gJYLFw7hwrTcw%2BwqZnN241AbIPNCVshUqp9Foq10ivk8w6Z2txAY6pgGgf9pJ7B%2FZxdmRhqtHcjO8X36Nprio7g%2B5b4%2BURsTWZb30Xp4eS05nEcK0fXC0cKxfBilVZrTIgOnBWrWIRiQxKkr8TnY3cb7tI9m6MbnFDVEKtYR%2BryPW2BwDXDs%2FAxnoLeijMRpOGJ0U1q3p4xEnwQiPs%2BJf1I1YNWFKULlcTgE%2BMBDUDRyVXQVh7LE0B68yblysX6ZXrYEKVn4jWRaaq%2FCy8bhy&X-Amz-Signature=619567e09509cff9c3668c47a9a438f952adf617df0ed1f8cae385017579db85&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject)\\n\\n- **Revisit and Reevaluate Regularly**: Relationships can change over time. It\'s important to frequently reassess the status and influence of your second-level relationships and modify your strategies as needed.\\n\\n## Improving Relationships\\n\\n\\n \\n\\n\\nWhen relationships that require enhancement have been pinpointed, a variety of specific strategies can be implemented to foster growth and improvement in these areas:\\n\\n- **Empathize**: It is crucial to not only understand but also empathize with the concerns, anxieties, and reservations that the other party may have. This involves putting yourself in their shoes and viewing situations from their perspective, which can go a long way in building mutual understanding and respect.\\n- **Be proactive**: Rather than waiting for the other party to take action or initiate improvements, it\'s beneficial to take the first step. This proactive approach shows your commitment to the relationship and can inspire the other party to reciprocate your efforts.\\n- **Improve Communication**: Quite often, the root cause of relationship issues is miscommunication or a complete lack of communication. It\'s essential to understand the communication needs of the other party and act upon them. This could involve being more open, transparent, or timely with your communication, or perhaps adjusting your communication style to better match theirs.\\n- **Build the connections**: Beyond the professional capacity, take the time to get to know the person behind the role. Keep in mind that not all factors that motivate a person are work-related. By sharing personal experiences and being open to finding common ground and understanding, you may discover shared interests or values that can strengthen your working relationship. Better interpersonal relationships can contribute to a more cohesive and productive working environment.\\n\\n## Conclusion\\n\\n\\nIn conclusion, second level relations at work, though not immediately visible, have a substantial impact on an individual\'s work experience and the overall productivity of an organization. Effective management of these relationships can lead to improved collaboration, smoother workflow, and enhanced job satisfaction. As the work environments continue to evolve, recognizing and nurturing these secondary relationships will become an increasingly important aspect of workplace strategy."},{"id":"/2024/04/04/T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality","metadata":{"permalink":"/blog/2024/04/04/T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-04-04T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality.md","source":"@site/blog/2024-04-04T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality.md","title":"AI In The Workplace: Are LLMs Hype or Reality?","description":"Explore the potential and pitfalls of Large Language Models (LLMs) in the workplace. This comprehensive guide discusses the hype surrounding AI and LLMs, their psychological appeal, and practical applications in user-facing products, company tools, and work augmentation. Learn about the quality and licensing issues in coding with LLMs, and understand their impact on productivity and code quality. The article also highlights the importance of ethical decision-making in technology advancement.","date":"2024-04-04T00:00:00.000Z","formattedDate":"April 4, 2024","tags":[],"readingTime":7.085,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-04-04T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/ai-in-the-workplace","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the potential and pitfalls of Large Language Models (LLMs) in the workplace. This comprehensive guide discusses the hype surrounding AI and LLMs, their psychological appeal, and practical applications in user-facing products, company tools, and work augmentation. Learn about the quality and licensing issues in coding with LLMs, and understand their impact on productivity and code quality. The article also highlights the importance of ethical decision-making in technology advancement.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/5695fb01-7665-42a8-9ec5-5f3400222df3/bearly-generated-image-PCT6BW.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RWJMTAMG%2F20250227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250227T120440Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDsaCXVzLXdlc3QtMiJHMEUCIQDP62R3PI1BPyOGGMHRlgt%2BGHx2oIkm%2BdidZEeqltLKdAIgM%2FgDcObzoef5Kpe5emwncMUTqMic5vbSQCquIpTQQ9wq%2FwMIdBAAGgw2Mzc0MjMxODM4MDUiDHI3b9flIksTLahAVircAzu9%2BTz9kbiOpXH8cFaicIMEAC8Xmz2UM%2FGeqZsHcqk6sOmqbkf3AeUrwhBP7dsjUy09%2FbWVrmJpsonJ1VcHrW5VUzooUp2A8O6lTyaVfroa5lDarX30NoBeo4t%2BjGnXjNhl92iEr6PIqgLUoQIT%2FFnbmWN1OJtT3WV2woqMax8mGW0WonM8wxJCiaXUW4uSyKkta8TXqX77iH8ILqjioKinYo6gv%2BTyWSc1xlkX4GY8Au7V2UrDQrNufAFD%2Bt36uoo%2BHCILzH3l0s2hw96AQfJnmXofWbaSSxIRlGJVD2D8YvOmAw%2BguK81WKOdZUBCwn%2BHztGuDLuooNXzlxNR47unjhOODlJaiE4VRjZSjjumglZdOWSAA1rtBs5ONWrBsGLgQl71GO3mRznw8xnmL7o64d3G5j2ntXnMj6yOn7iDN6OyuwlTxVzN4BUYOydWg326viSvG41dH7uc4PGP5vKvmaQiCl7aLOe%2Fl26klNQUQzqqFn8tJmwLjJofa%2BY5YMxLxUrxjWV3CsP2jSOmNSEqVHCxfmXiTfZNlb0QVt3InPTA70f3x9QPdROA71T6Rn43GYpJI45CE4qTOEL%2Fo2%2B3Q%2BRIMALVYzMYBpDRigjqswKRVSDDdhBXoSqRMPuQgb4GOqUBrVUsQ2ig1%2FX2qWIW6BfMPQWMZfhc8Z%2Fjg5H%2F4Lobv%2FW%2BL8lgHvxEd4DqBvtsYGSVWReWBYBH0NZC%2FFxTL0s7F3%2FfZtitD6Lb6fI9GSK6IE%2BXzvtx4pnfstbJT1UXNyYtCMv3GJJLPlYQk%2Bc8VB3IIu31i8I3YZy6HO5lvi0v3Sifwh%2FJZW6igUBYyGnRx0lRSDCfsesy89VHuirL9lj8M%2Fc%2B%2FpC2&X-Amz-Signature=d9825cf1fd5f8298104ff46740b464e3c402177fc5e9c9d16ae177ff0f472d0e&X-Amz-SignedHeaders=host&x-id=GetObject","title":"AI In The Workplace: Are LLMs Hype or Reality?"},"prevItem":{"title":"Mastering Second Level Relationships: A Key Strategy for Workplace Success","permalink":"/blog/2024/04/14/T00:00:00.000Z-Mastering Second Level Relationships: A Key Strategy for Workplace Success"},"nextItem":{"title":"The Strategic Vs. Tactical Mindset","permalink":"/blog/2024/04/03/T22:00:00.000Z-The Strategic Vs. Tactical Mindset"}},"content":"This past year, the buzz word in technology has undeniably been \\"AI\\". But what exactly do we mean when we say AI?\\n\\n\\nOften, our comprehension of terms and definitions can be clouded due to the ambiguity in the language used. A prime example is the term \\"Artificial Intelligence\\" (AI). This term used to encompass a broad spectrum of technologies, but recently, it has become largely associated with Large Language Models (LLMs).\\n\\n\\n## What are we talking about?\\n\\n\\nAI, in its purest form, is the ability of a machine or computer program to think and learn. It is the theory and development of computer systems able to perform tasks that typically require human intelligence. \\n\\n\\nMeanwhile, LLMs are defined in this [Wikipedia article](https://en.wikipedia.org/wiki/Large_language_model) as: \\n\\n\\n> A language model notable for its ability to achieve general-purpose language generation and other natural language processing tasks such as classification. LLMs acquire these abilities by learning statistical relationships from text documents during a computationally intensive self-supervised and semi-supervised training process.[1] LLMs can be used for text generation, a form of generative AI, by taking an input text and repeatedly predicting the next token or word\\n\\n\\nIt goes without saying that we have yet to reach the real definition of AI, with neither LLMs nor other technologies.\\n\\n\\n## The Psychology of LLMs Hype\\n\\n\\nWhat has made these large language models so intriguing over the past year, prompting such widespread interest?\\n\\n\\nTheir ability to \u201cbullshiting with confidence\u201d. Just try this out yourself, ask any question to an LLM and just tell them they are mistaken and request another option. You\'ll typically receive an apology followed by an assertive, alternative response.\\n\\n\\n![llm1.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/702b745b-8e9a-437c-a8ee-92063ef1b0c2/llm1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB4662ZSZUZAG%2F20250227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250227T120441Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDsaCXVzLXdlc3QtMiJGMEQCIGU6LXH8i2FLPa9OFjiGjh93AKScJq9NkZds%2B9G2RvD5AiBq1iLukn2fcNuIDfJBHBgLfgWv4iTp9X2A5VpBlglZ1ir%2FAwh0EAAaDDYzNzQyMzE4MzgwNSIMF78PHZWG3zuMoNKpKtwDQItA96I6PJbmNv8SglAUABpdP8%2FZgSM%2F3rjRj%2FqEdTQXodJyV57sxuFX4Zd7eQTipVtF8xStGHHcUO7yygDO4sW3ejlfVnFUdVyuVMOTkKoknBimwTnyqicvlkOZW5JwEpfpN%2F0vBOrQyK%2BcoiapetQEhj%2B5KzH2JiuCkd3bSvIFOGfpninJXFCIO5qLnEGU54u4RB%2FNKNSXhHaF4cywdI8zrUKiw1ePUC0DU2uJoOWD3mHlwN175rZd7lZjtIYwVd8gIn8ctjy7%2BdtgJ2dojH3CGZIZdmBIB55BY4N5tTHOytSH00cFakN3o70UhrCCncQPwKufhdsfm2F7xmxjs9IPdjyTw9wRvGTaVqcvjf44HEXSCtEwenrWgQEgFLYgssGK2d92WKNccfP1mC96xO8fRlaqKHOy5XOIw2LBuU%2FWx4JlZHiKexaX8LxwaF4%2FDKOtaPWSavRGk79vylaftHGn60uxqQoGYbtgnzu2u9W9IEH151Zva%2FDgrDFDy39XlRgVVS2QNLzmD%2BoqmPhyd1xqGLELCBRtEid0PNStUQwGRYW4rgFjffUUqTknyZ2u7MFocFIutKiSti8lwlcqxKTWW1lq4ss98F9rXzhuLnydhh1STmu6Vy%2FKCrUw75CBvgY6pgFyIo5wwML0tu%2BZ0SH9%2FqfeTwivSkFMzPhU8aXACgiEsXGeVK%2FgTUoOna%2F5t%2Fj8VHSo%2BLjZ%2Fi0QK86iPPK%2F0%2FX0LSptPinmBSFOT2Xy1JKvjo6Ae3azdHl7GrJxLaf7gg7xdI3eUtidBEBWFTWHV1UhF6vzqKhqPA3fXEv%2Bqhv45d799Ekh%2FeAIeo38mQQ9dKXpBqVJ1i9FrzYw24PtmTJYEDQSvmzV&X-Amz-Signature=a65a4a322f8ebcc81a58b8d8719feb7ff0a1d43c4794f8ff63a8a43e3c1bfcde&X-Amz-SignedHeaders=host&x-id=GetObject)\\n\\n\\nTo clarify, these software models aren\'t intentionally deceptive. They simply aim to provide responses that align with your queries. Meanwhile, we as recipients are prone to accept information as accurate, especially when it\'s delivered with apparent confidence. This applies to both machine-generated responses and human communication. Even this paragraph, written by a non-psychologist, likely seems plausible because it\'s framed convincingly.\\n\\n\\nSo how does an LLM \u201cbullshiting with confidence\u201d. LLMs are trained to recognize patterns in data and make predictions based on these patterns. Essentially, they are statistical functions that predict, given the words in a question, the words that will form a compelling response. This phenomenon of non-accurate but compelling responses goes by the name of [hallucinations](https://en.wikipedia.org/wiki/Hallucination_(artificial_intelligence)).\\n\\n\\n## LLMs at the Workplace\\n\\n\\nAre LLMs useless? Not at all. Despite the caution required due to the nature of statistically generated responses, these systems can indeed provide substantial value.\\n\\n\\nLet\'s explore potential applications:\\n\\n\\n### User-Facing Products\\n\\n\\nInterestingly, this technology might just be the first to convince humans they\'re interacting with another human or an intelligent entity. This opens up new product opportunities where the perceived \\"human interface\\" might have more value than the precise accuracy of the content.\\n\\n\\nPotential applications could include:\\n\\n- First-tier customer support: By integrating LLMs with user manuals, we could develop a chatbot interface for customers.\\n- Sales representatives: LLMs could be utilized to create more human-like, machine-driven robot calls or chatbots.\\n\\nDoes this mean human roles will be totally replaced? No, because LLMs lack a true understanding of the problem or the conversation. Therefore, a second level of human intervention remains essential. However, this technology could help businesses scale their operations in a novel way.\\n\\n\\n> \u26a0\ufe0f Personally, I would not use the current technology for products that require accuracy. (example: tax calculations, finances, etc.).\\n\\n\\n### Company Tools \\n\\n\\nTypically, businesses possess an extensive amount of data that encapsulates their knowledge base. Filtering this data can be challenging, especially when it\'s scattered across various systems, making it tough to query. Leveraging LLMs can significantly streamline this process and reduce the mental strain of pinpointing the required information.\\n\\n\\n> \u26a0\ufe0f Keep in mind, LLMs do normally not provide precise responses. Thus, it\'s crucial to critically assess the answers and cross-reference with the original data for accuracy.\\n\\n\\n### Work Augmentation\\n\\n\\nThis tool has a wide range of applications that can be incorporated into daily workflows. Let\'s explore some common utilization.\\n\\n\\n**Writing Assistance**\\n\\n\\nLLMs can provide valuable support in crafting documents, emails, and other written communications. They offer grammatically correct and contextually fitting sentence suggestions, enhancing the overall writing process.\\n\\n\\nAs a general rule, this is a highly productive use of the technology. Just ensure to review the generated suggestions for maximum benefit.\\n\\n\\n**Reference Tool**\\n\\n\\nLLMs can serve as a dynamic reference resource, drawing on the vast expanse of knowledge they\'ve been trained on. They function like a sophisticated search engine, delivering consolidated information.\\n\\n\\n> \u26a0\ufe0f However, as LLMs may not always provide accurate responses, it\'s crucial to approach the information critically and cross-check with original data sources when necessary.\\n\\n\\n**Coding**\\n\\n\\nWithin the realm of coding, LLMs can help in code generation and even in writing documentation. This is possibly the field that can affect most of the readers of this newsletter, so let\'s do a deep dive on this point.\\n\\n\\nFrom my professional experience, we\'ve opted not to utilize this technology so far. The main factors influencing this decision include:\\n\\n- Quality Inheritance: The quality of code that LLMs generate is directly linked to the quality of the training data. If the model is trained on data that includes poor or flawed code, the generated code will inherit those flaws.\\n- Cognitive Load: While LLMs can simplify routine coding processes, they can also increase the cognitive burden on developers who need to review and comprehend the generated code, ensuring it meets expectations. Developers may face a choice of accepting the code as-is with potential issues or spend additional time deciphering the proposed code.\\n- Licensing: Employing LLMs may lead to potential breaches of software licenses. If the model is trained on code under copyleft licenses (e.g., GPL), the generated code could be seen as derivative, thus resulting in licensing complications.\\n\\nAdditionally, upon reviewing the data accumulated over the duration this technology has been in existence, we can observe the following results:\\n\\n- Supporting Data:\\n\\t- Microsoft Experiment: The results were that developers using copilot were able to complete the task 55.8% faster.\\n\\t- Pinterest  Experiment ([Link](https://www.youtube.com/watch?v=70Rc4wJRluA&t=1032s)):  They found that their engineers who commit code less often increased their commit rate by 50-100%, and engineers who commit code the most often became about ~40% more productive.\\n- Detracting Data:\\n\\t- Git Clear Research ([Link](https://www.gitclear.com/coding_on_copilot_data_shows_ais_downward_pressure_on_code_quality)): analyzed approximately 153 million changed lines of code, they found code churn (the percentage of lines that are reverted or updated less than two weeks after being authored) is projected to double in 2024 compared to its 2021, pre-AI baseline.\\n\\t- Security Researchers ([Link](https://www.theregister.com/2021/08/25/github_copilot_study/)): Explored Copilot\'s performance on three distinct code generation axes (examining how it performs given diversity of weaknesses, diversity of prompts, and diversity of domains). In total, we produce 89 different scenarios for Copilot to complete, producing 1,689 programs. Of these, we found approximately 40% to be vulnerable.\\n\\n> \u26a0\ufe0f While the technology shows promise, it\'s not fully developed yet.  \\n> Our studies indicate that while short-term productivity may increase, this comes at the expense of code quality. This aligns with the concerns we initially discussed.\\n\\n\\n\\tOur studies indicate that while short-term productivity may increase, this comes at the expense of code quality. This aligns with the concerns we initially discussed.\\n\\n\\nAs we conclude this article, it\'s important to highlight the potential vulnerabilities associated with Large Language Models (LLMs) in the workplace. I strongly recommend familiarizing yourself with potential threats and reading more about this topic via the [OWASP TOP 10 for LLMs](https://owasp.org/www-project-top-10-for-large-language-model-applications/assets/PDF/OWASP-Top-10-for-LLMs-2023-slides-v1_0.pdf) resource.\\n\\n\\n## Conclusion\\n\\n\\nThe term \\"Artificial Intelligence\\" (AI) has recently become synonymous with Large Language Models (LLMs). However, true AI, the ability of a machine to think and learn, has not been achieved with LLMs or other technologies. \\n\\nLLMs have gained popularity due to their ability to generate convincing responses, but these responses are merely statistical predictions based on input data. Despite this, LLMs can be valuable in the workplace, serving as user-facing products, company tools, and work augmentation. However, caution is advised due to their lack of accuracy. \\n\\n\\nLastly, it\'s imperative that we bear in mind our social responsibility as creators and innovators in the realm of technology. With the current global population standing at 8.1 billion, each decision we make, each technological advancement we introduce, has the potential to impact a vast number of lives. We should, therefore, strive to prioritize the wellbeing of each individual in this global community, ensuring that our contributions to technology are both ethical and beneficial to all."},{"id":"/2024/04/03/T22:00:00.000Z-The Strategic Vs. Tactical Mindset","metadata":{"permalink":"/blog/2024/04/03/T22:00:00.000Z-The Strategic Vs. Tactical Mindset","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-04-03T22:00:00.000Z-The Strategic Vs. Tactical Mindset.md","source":"@site/blog/2024-04-03T22:00:00.000Z-The Strategic Vs. Tactical Mindset.md","title":"The Strategic Vs. Tactical Mindset","description":"Explore the balance between strategic and tactical mindsets in the field of engineering. This article discusses the importance of both perspectives in problem-solving, goal setting, and planning for the future. It also highlights how the focus shifts from tactical to strategic as engineers advance in their careers. Ideal for engineering leaders and team members seeking to improve their productivity and strategic thinking.","date":"2024-04-03T00:00:00.000Z","formattedDate":"April 3, 2024","tags":[],"readingTime":4.785,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-04-03T22:00:00.000Z","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the balance between strategic and tactical mindsets in the field of engineering. This article discusses the importance of both perspectives in problem-solving, goal setting, and planning for the future. It also highlights how the focus shifts from tactical to strategic as engineers advance in their careers. Ideal for engineering leaders and team members seeking to improve their productivity and strategic thinking.","Tags":["productivity","technology","startup","development"],"title":"The Strategic Vs. Tactical Mindset"},"prevItem":{"title":"AI In The Workplace: Are LLMs Hype or Reality?","permalink":"/blog/2024/04/04/T00:00:00.000Z-AI In The Workplace: Are LLMs Hype or Reality"},"nextItem":{"title":"Product teams: Aligning to Value","permalink":"/blog/2024/03/28/T03:00:00.000Z-Product teams: Aligning to Value"}},"content":"How much time do you or your team spend on the day to day vs. planing the future? .\\n\\n\\n![https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff644c4da-a1f5-47af-8dda-0341bd3af204_1080x1080.png](https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff644c4da-a1f5-47af-8dda-0341bd3af204_1080x1080.png)\\n\\n\\nI would tend to think that for most this is not a binary situation, as we need to be able to have a plan and deliver on it. For this, we require practicing and intentionally using different types of mindsets. Let\u2019s delve into this deeper in this article.\\n\\n\\n## Balancing Today & Tomorrow\\n\\n\\nWorking in engineering demands a careful balance between two distinct mindsets: the strategic and the tactical. Understanding these two mindsets and knowing when to apply each is crucial for successful leadership and team performance. Let\'s delve into what each of these mindsets entails.\\n\\n\\n### Strategic Mindset\\n\\n\\n> Where do we need to go?\\n\\n\\nA strategic mindset is forward-looking. It\'s about setting goals, identifying opportunities, and developing plans to achieve those goals. It involves thinking about the bigger picture and the future direction of the team or the organization, providing a common path for everyone.\\n\\n\\nAn example of a strategic mindset could be considering organizing the company in vertical slices, to define common tools and practices, etc.\\n\\n\\n### Tactical Mindset\\n\\n\\n> What do we need to do?\\n\\n\\nOn the other hand, a tactical mindset is about the here and now. This involves focusing on the tasks at hand, solving problems as they arise, and executing the immediate steps of any strategy. This mindset is required to survive.\\n\\n\\nAn example of a tactical mindset could be keeping legacy money-making systems running healthy, fixing a bug that affects clients, etc.\\n\\n\\n## Problems of Being Stuck in One Mindset\\n\\n\\nBalancing the strategic and tactical mindsets is not an easy task. It requires conscious effort, adaptability, and situational awareness. To lead effectively, engineering leaders must be able to switch seamlessly between these two mindsets, adapting to the fluctuating needs of their team and the project at hand.\\n\\n\\nIf any of the mindsets is dominant, it can lead to issues on a company and team level. Let\'s discuss the problems of being stuck in each of these mindsets:\\n\\n\\n### Tactical\\n\\n\\nBeing overly tactical can lead to:\\n\\n- **Lack of bigger picture**: Without a strategic approach, leaders might become so focused on immediate issues that they lose sight of broader goals and objectives\\n- **Lost opportunities**: A purely tactical approach might miss out on potential opportunities for improvement or innovation, as the focus is solely on dealing with the immediate issues at hand.\\n- **Increased Baseline**: Quick fixes might be preferred over sustainable solutions, leading to extra effort of maintenance and the need for extra hands to maintain systems up and running.\\n- **Crisis management loop**: A purely tactical mindset can lead to a reactive approach where leaders are constantly dealing with immediate issues rather than planning for the future, keeping the team in a perpetual state of crisis management.\\n- **Burnout**: The continuous pressure to handle immediate issues and the lack of preventive measures can lead to increased stress and eventual burnout.\\n\\n### Strategic\\n\\n\\nBeing overly strategic can lead to:\\n\\n- **Analysis Paralysis**: Spending too much time planning and strategizing can lead to indecisiveness, delaying important decisions and actions.\\n- **Missed details**: Overemphasis on the big picture might lead to overlooking important details, which can result in faulty execution of strategies.\\n- **Disconnect from the team**: Leaders who are overly strategic might lose touch with the day-to-day challenges their team faces, leading to unrealistic plans and expectations.\\n- **Frustration among team members**: If leaders are always focused on future plans, team members might feel their immediate concerns are being ignored, leading to dissatisfaction and frustration.\\n\\n## The Role Progression: From Tactical to Strategic\\n\\n\\nAs engineers progress in their careers and take on more senior roles, there\u2019s often a necessary shift from a primarily tactical mindset to a more strategic one.\\n\\n- **Early Career (99% Tactical, 1% Strategic):** Focuses primarily on tactical tasks such as coding, debugging, and learning new technologies. Their work is closely guided by the guidelines set by the bigger picture.\\n- **Mid-Career Engineer (90% Tactical, 10% Strategic):** Start to introduce tactical work with strategic thinking to prepare themselves for future work. They are knowledgeable about larger parts of the codebase and product, allowing them to provide input for strategical decisions.\\n- **Late Career Engineer (60% Tactical, 40% Strategic):** Continues to execute hands on work, but spends an increasing amount of time on strategic tasks. They make architectural decisions, mentor other engineers, align with other teams engineers.\\n- **Leaders (30% Tactical, 70% Strategic):** Spends a significant amount of their time on strategic tasks. They are responsible for planning and coordinating the team\'s work and ensuring that it aligns with the company\'s strategic goals.\\n- **Directors (5% Tactical, 95% Strategic):** Primarily focused on strategic tasks. They make decisions about the overall direction of the engineering team, manage resources, and coordinate with other parts of the business.\\n- **C-Level (1% Tactical, 99% Strategic):** Almost entirely focused on strategic tasks. They set the technological direction of the company, make decisions about the use of resources, and represent the engineering team at the executive level.\\n\\n### Summary\\n\\n\\nA strategic mindset focuses on setting goals and planning for the future, while a tactical mindset concentrates on immediate tasks and problem-solving. However, overemphasis on either mindset can lead to issues such as lack of broader vision or missed details. As engineers progress in their careers, there is often a shift from a primarily tactical mindset to a more strategic one, with leaders and executives focusing more on strategic tasks.\\n\\n\\nI hope this post has helped solve the long-standing question of what is this person doing in their role. And helps also to understand how successful engineering requires a balance between strategic and tactical mindsets."},{"id":"/2024/03/28/T03:00:00.000Z-Product teams: Aligning to Value","metadata":{"permalink":"/blog/2024/03/28/T03:00:00.000Z-Product teams: Aligning to Value","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-03-28T03:00:00.000Z-Product teams: Aligning to Value.md","source":"@site/blog/2024-03-28T03:00:00.000Z-Product teams: Aligning to Value.md","title":"Product teams: Aligning to Value","description":"Dive into the transformative world of product teams and vertical slicing in our latest Engineering Strategy 101 series. Gain insights on building cross-functional teams, fostering innovation, and aligning with customer values for more efficient and agile product development. Unlock the blueprint to revolutionize your software development approach and drive success. ","date":"2024-03-28T00:00:00.000Z","formattedDate":"March 28, 2024","tags":[],"readingTime":6.71,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-03-28T03:00:00.000Z","canonical_url":"https://leadshorizons.com/p/product-teams","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Dive into the transformative world of product teams and vertical slicing in our latest Engineering Strategy 101 series. Gain insights on building cross-functional teams, fostering innovation, and aligning with customer values for more efficient and agile product development. Unlock the blueprint to revolutionize your software development approach and drive success. ","Tags":["business","technology","tech","productivity"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/ebdbc2c6-cb58-4098-9bab-9c1273367c1d/bearly-generated-image-8A4EE7.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=6d64c60a9dfd4f4023830e0aa4d35da5dce15151f7a1a6a29d397f651d41a646&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Product teams: Aligning to Value"},"prevItem":{"title":"The Strategic Vs. Tactical Mindset","permalink":"/blog/2024/04/03/T22:00:00.000Z-The Strategic Vs. Tactical Mindset"},"nextItem":{"title":"Beyond Clean Code & Architecture: Adapting Practices for Project Success","permalink":"/blog/2024/03/21/T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success"}},"content":"When you contemplate the structure and effectiveness of your software departments, the concept of product teams and the strategy of vertical slicing emerge as pivotal part of the journey. \\n\\nThese methodologies can revolutionize the way products are developed and maintained, directly impacting their success and the adaptiveness of the organization. This post aims to explore the essence of product teams, their significance, and the practical steps to implement vertical slicing within those teams.\\n\\n\\n## **Understanding Product Teams**\\n\\n\\nA product team is a cross-functional team that includes all the roles necessary to develop, test, and deliver value to the customer. It\'s centered around a single user need, this will either mean a single product or a closely related set of products. \\n\\n\\n### **Value of Product Teams**\\n\\n1. **Enhanced Focus and Agility**: Product teams focus on a single product or a set of products, enabling them to rapidly respond to changing customer needs and market conditions. This focus accelerates decision-making processes and product iterations.\\n2. **Improved Accountability**: With clear ownership, product teams have a better understanding of their objectives, leading to increased accountability and a stronger sense of purpose among team members.\\n3. **Boosted Innovation**: Cross-functional interaction within the team promotes diverse viewpoints, fostering an environment ripe for innovation and creative problem-solving.\\n4. **Customer-Centric Development**: Product teams operate with a strong understanding of and alignment with customer needs, ensuring that the products developed truly resonate with and bring value to the end users.\\n5. **Efficiency**: Such teams minimize the traditional overhead associated with coordination across different departments, leading to more efficient use of time.\\n\\n### Roles In product teams\\n\\n\\nLets delineate the core skills essential to a product team\'s success and explain the unique value each contributes to the team\'s objectives:\\n\\n- Product Manager: acts as the visionary and strategist of the team. They are responsible for identifying customer needs, setting the product vision, and prioritizing the development roadmap. By ensuring that the team understands the \'why\' behind their work, product managers play a critical role in aligning product development with market demands and organizational goals.\\n- Developers: bring the product vision to life through code. They are the architects and builders of the product, responsible for implementing features, fixing bugs, and ensuring the product\'s technical viability. Their expertise spans across front-end, back-end, and full-stack development, allowing for versatile problem-solving and innovation.\\n- Designers:  focus on the user interface (UI) and user experience (UX) of the product. They ensure that the product is not only functional but also intuitive, engaging, and accessible to users. By advocating for the end-user\'s perspective, designers play a key role in making products that are genuinely user-centric.\\n- Quality Assurance: are the guardians of product quality. They are responsible for identifying and mitigating defects before the product reaches the end-users. Through various testing methodologies, QA engineers ensure the product meets all functional requirements, performance standards, and user expectations.\\n- Operations Professionals: often including DevOps, focus on the deployment, monitoring, and maintenance of the product in production environments. They ensure that the product\'s infrastructure is robust, scalable, and secure. By facilitating continuous integration and delivery, they enable the team to release updates quickly and reliably.\\n- **Business Analyst**: Serves as the bridge between business objectives and technology solutions. They analyze market trends, assess business processes, and gather requirements to guide the team towards solutions that align with strategic goals. Their insights help prioritize features based on business value and customer impact.\\n- **Data Analyst**: Plays a crucial role in informing decision-making through data. They collect, process, and analyze data related to product performance, customer behavior, and market trends. By turning data into actionable insights, data analysts help the team understand user needs, measure product success, and identify areas for improvement.\\n\\nIncorporating these roles into a product team ensures a comprehensive approach to product development, where strategic vision, technical execution, user experience, quality assurance, operational stability, business alignment, and data-driven decision-making converge to create products that truly meet customer needs and drive business value.\\n\\n\\nThese roles not always need to be different people, nevertheless they are skill that team members need to have or nurture. We could talk here about the T-shapped engineering concept but i am sure you can find deeper knowledge in  newsletter and other resources I have published on the past.  \\n\\n\\n## **Understanding Vertical Slicing**\\n\\n\\nVertical slicing refers to the process of breaking down functionalities and features into smaller, manageable pieces that can be developed, tested, and deployed independently. This method contrasts with the traditional horizontal slicing, where projects are divided among different departments or layers (e.g., backend, frontend, database). Implementing vertical slicing necessitates a cultural shift and strategic planning:\\n\\n1. **Redefine Team Composition**: Transition from discipline-centric teams (e.g., a backend development team) to cross-functional teams that include members capable of handling all aspects of feature development, from UI design to database management.\\n2. **Adopt Customer-Centric Approaches**: Align team objectives and features development with customer journeys and value delivery. Each slice should represent a step towards solving a customer problem or fulfilling a need.\\n3. **Foster a Collaborative Mindset**: Encourage open communication and collaboration within and among product teams. This can be facilitated by regular stand-ups, shared goals, and common platforms for project management and documentation.\\n4. **Leverage Agile and DevOps Practices**: Implement agile methodologies and DevOps practices to support the rapid development, testing, and deployment of vertical slices. Continuous integration and continuous deployment (CI/CD) pipelines are essential for automating these processes.\\n5. **Train and Mentor**: Equip your teams with the necessary skills and knowledge to function effectively in this new environment. This might involve cross-training to ensure that team members can handle multiple aspects of development and operations or specific training in agile methodologies.\\n6. **Measure and Adapt**: Establish metrics to measure the effectiveness of product teams and the impact of vertical slicing on product development. Use these insights to continuously improve processes and adapt strategies as needed.\\n\\n## Slicing your organization into product teams\\n\\n\\nMost companies will not be organized in this ways so its important to understand how to get there if its our objective. Initiating the transition towards product teams and vertical slicing involves several key steps:\\n\\n- **Define the user journey:** Understand the path your user takes when interacting with your product or service. This includes the initial contact, engagement, and long-term interaction. Understanding the user journey helps to identify gaps and opportunities in your product or service.\\n- **Event storming of the value journey:** This is a collaborative workflow of brainstorming and problem-solving using sticky notes to visualize the sequence of events in a user journey. This method helps to identify actions and interactions the user experiences.\\n- **Map to existing products:** Align the event storming with your existing products. This can provide insights into how well your products fit into the user journey and where improvements or new products might be needed.\\n- **Reorganize ownerships:** This involves adjusting team responsibilities to align with the user journey and product mapping. Teams should own certain steps of the user journey to ensure they are focused on delivering value at each stage.\\n- **Re-architecture if necessary:** If your current system architecture does not support the user journey and product mapping, consider a redesign. This could involve breaking down a monolithic system into microservices or adjusting your tech stack to better serve user needs.\\n- **Support teams on mentality change:** Transitioning to a user journey-focused approach with vertical slicing and product teams requires a shift in mindset. Support your teams through this change by providing training, fostering open communication, and promoting a culture of collaboration.\\n\\n### **Conclusion**\\n\\n\\nBy embracing the concept of product teams and implementing vertical slicing within software departments, leaders can create environments that are more agile, innovative, and aligned with customer needs. This approach not only enhances the efficiency and quality of product development but also fosters a culture of collaboration and continuous improvement. As an engineering leader, steering your organization towards this paradigm will necessitate thoughtful planning, commitment, and adaptability, but the resulting advantages can profoundly transform your product development lifecycle."},{"id":"/2024/03/21/T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success","metadata":{"permalink":"/blog/2024/03/21/T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-03-21T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success.md","source":"@site/blog/2024-03-21T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success.md","title":"Beyond Clean Code & Architecture: Adapting Practices for Project Success","description":"Explore the critical examination of traditional coding practices like Clean Code and Clean Architecture. Understand the importance of aligning coding efforts with project and company goals, balancing innovation with discipline, and fostering a culture of critical thinking and adaptability to drive software project success.","date":"2024-03-21T00:00:00.000Z","formattedDate":"March 21, 2024","tags":[],"readingTime":5.44,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-03-21T03:00:00.000Z","canonical_url":"https://leadshorizons.com/p/beyond-clean-code-and-architecture","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Explore the critical examination of traditional coding practices like Clean Code and Clean Architecture. Understand the importance of aligning coding efforts with project and company goals, balancing innovation with discipline, and fostering a culture of critical thinking and adaptability to drive software project success.","Tags":["business","tech","technology","productivity"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/ee0aeb4e-0152-4dbb-a3d1-506dc0628a5a/bearly-generated-image-QJ27V8.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=26f57116425aad2f13cef7d26b0f7ce7f4037d09f53e26009b5e10405f5bd58e&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Beyond Clean Code & Architecture: Adapting Practices for Project Success"},"prevItem":{"title":"Product teams: Aligning to Value","permalink":"/blog/2024/03/28/T03:00:00.000Z-Product teams: Aligning to Value"},"nextItem":{"title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","permalink":"/blog/2024/03/14/T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from"}},"content":"Raise your hand \ud83d\udd90\ufe0f if you recognize this meme:\\n\\n\\n![https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe3101a1f-5287-4886-8246-89b64805fe64_1400x805.png](https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe3101a1f-5287-4886-8246-89b64805fe64_1400x805.png)\\n\\n\\nDo you agree with it? I generally do. In today\'s fast-changing tech world, it\'s easy to get lost in the \'rules\' of coding.\\n\\n\\nIt\'s important that we occasionally stop and rethink our methods\u2014not to reduce the importance of solid coding principles, but to make sure our efforts align with the broader goals of our projects and companies.\\n\\n\\nLeads Horizons is a reader-supported publication. To receive new posts and support my work, consider becoming a free or paid subscriber.\\n\\n\\n## Avoiding the Pitfalls of Dogma & Hype\\n\\n\\nTraditional coding practices are the foundation of software development projects. They ensure code readability, maintainability, and scalability. But blindly applying these practices, without considering the project\'s specific context, can lead to inefficiencies and waste.\\n\\n\\nFor example, being too rigid with certain practices might slow down development in the early stages of a startup, where the ability to pivot quickly is key.\\n\\n\\n### A Real-World Example\\n\\n\\n> Please take this as an example and not literal agains this specific pattern. I share as its what is fresh in my mind as I\'ve experienced this in at least two workplaces over the last year.\\n\\n\\nWe\'re currently seeing a lot of hype around Clean Architecture, which involves using the Ports & Adapter Pattern. Well-known figures like Uncle Bob or Vaughn Vernon advocate for it, making it the center of attention.\\n\\n\\nIn many organizations, every single project starts as a Ports & Adapters project, focusing on business logic and separating it from external contact points. While the pattern can be valuable at a code level, we need to consider its drawbacks:\\n\\n- **Starting up:** Setting up a Ports & Adapters project takes more initial time, potentially delaying the first release. It may not be the best fit for projects with tight deadlines or a priority on launching a minimum viable product quickly.\\n- **Cognitive load:** Ports & Adapters can increase the cognitive load for developers, especially those unfamiliar with the pattern. It might require more training and time for developers to understand and use effectively, slowing down development.\\n- **Over-engineering:** The Ports & Adapters pattern can lead to over-engineering, especially in simple projects where such a complex structure isn\'t needed. This could make the code more complicated and difficult to manage.\\n- **Maintenance:** The Ports & Adapters pattern could add more maintenance work. If a project\'s scope isn\'t too complex, a simpler architecture might be easier to maintain and evolve over time.\\n\\nIf you have unlimited time or budget, this might not be a concern. But that\'s not the reality for most new products. Especially in a fast-paced product development environment where you\'re trying to find product-market fit or experiment with user reactions, this could hinder your profitability.\\n\\n\\n![https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F946c07cd-6ea9-4a42-b00a-9a99954c8fdc_1080x1080.png](https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F946c07cd-6ea9-4a42-b00a-9a99954c8fdc_1080x1080.png)\\n\\n\\n## Aligning Practices with Goals\\n\\n\\nHere are some things to consider to align coding practices with your project and company goals:\\n\\n1. **Assess the Project Lifecycle Phase:** The needs of a nascent project are vastly different from those of a mature one. Early on, the focus might be on prototyping and rapid iteration. As the project matures, stability and scalability become more important.\\n\\t1. **Proof of Concept**: At this stage, you might prioritize speed over structure. The main goal is to validate your idea\'s feasibility, so it will be acceptable to take shortcuts in code quality and/or testing.\\n\\t2. **Minimum Valuable Product**: At this stage, the goal is to create a functional product with just enough features to satisfy early customers and provide feedback for future product development. Therefore, while it\'s important to strive for reusable code, speed and functionality might take precedence.\\n\\t3. **Minimum Lovable Product**: This stage focuses on improving the user experience, making the product more appealing and enjoyable. While maintaining the focus on functionality, you might prioritize refining the user interface, improving performance, or adding features that enhance user satisfaction.\\n\\t4. **Production Quality Product**: At this stage, the focus is on refining the product into a fully-fledged offering that can sustain long-term growth. You might prioritize code quality, extensive testing, and scalable architecture, as the product\'s stability and performance become increasingly critical.\\n2. **Understand the Business Impact:** Consider how the project directly impacts the business. Projects that are critical to revenue or customer experience might require more stringent practices, whereas internal tools might allow for more flexibility.\\n\\t1. **Team Tools**: For tools used by the engineering team, the balance might lean towards speed and functionality. These tools are often used to automate tasks or improve workflows, so they need to work efficiently. Code quality and maintainability can be slightly relaxed, as long as the tool\'s functionality and performance are not compromised.\\n\\t2. **Internal Tools:** These might include tools for other non-engineering departments. In these cases, the investment normally is not high so there is a need to balance functionality and code quality, maintainability, and scalability.\\n\\t3. **Client Product:** For products that directly touch the client, such as a mobile app or a web platform, the focus might lean heavily towards both functionality and user experience. It is crucial to ensure code quality, maintainability, and scalability to provide a smooth and reliable user experience.\\n3. **Assess Team Abilities:** Your team\'s experience and skills are essential. Consider the potential learning curve when introducing new practices, patterns, or frameworks, as they may not yield the expected results.\\n4. **Balance Risk and Reward:** Understand the risk profile of different decisions. For example, skipping peer review process might speed up deployment but increase the risk of bugs in production.\\n\\n### Moving Forward\\n\\n\\nAs leaders, we need to ensure that our teams aren\'t following practices just for compliance, but are actively contributing to our company\u2019s objectives. We should foster an environment where questioning the status quo is welcomed, as long as it\'s with the intent of finding better, more aligned ways to work.\\n\\n\\nThis doesn\'t mean lowering our standards, but rather adapting them intelligently to better serve our ultimate goals. It\'s about efficient and effective application, not complete abandonment or blind adherence. Balancing the discipline of coding standards with the flexibility needed to meet business objectives is an art that can greatly influence the success of software projects.\\n\\n\\nLet\u2019s create a culture that values critical thinking and adaptability as much as coding excellence. By doing so, we not only align our coding practices with our project and company goals but also empower our teams to contribute their best work towards collective success.\\n\\n\\nThank you for reading Leads Horizons. This post is public so feel free to share it.\\n\\n\\n[Share](https://www.notion.so/alvarolorentedev/%%share_url%%)"},{"id":"/2024/03/14/T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from","metadata":{"permalink":"/blog/2024/03/14/T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-03-14T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from.md","source":"@site/blog/2024-03-14T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from.md","title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","description":"Discover how to align your organizational structure with software architecture to meet user needs effectively, leveraging Conway\'s Law for enhanced product development.","date":"2024-03-14T00:00:00.000Z","formattedDate":"March 14, 2024","tags":[],"readingTime":6.645,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-03-14T00:00:00.000Z","canonical_url":"https://leadshorizons.com/p/conways-law?r=2e46qd&showWelcomeOnShare=true","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover how to align your organizational structure with software architecture to meet user needs effectively, leveraging Conway\'s Law for enhanced product development.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/ca234731-4641-46e5-b01e-1edc4e44b8f0/conway.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45HZZMZUHI%2F20240321%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240321T120335Z&X-Amz-Expires=3600&X-Amz-Signature=3608dbd841aee040c8719494835fdae5b98c5c00d6c61e2aca3e766436b86759&X-Amz-SignedHeaders=host&x-id=GetObject","title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from"},"prevItem":{"title":"Beyond Clean Code & Architecture: Adapting Practices for Project Success","permalink":"/blog/2024/03/21/T03:00:00.000Z-Beyond Clean Code & Architecture: Adapting Practices for Project Success"},"nextItem":{"title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","permalink":"/blog/2024/03/14/T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from"}},"content":"Have you ever read Conway\'s law before:\\n\\n\\n> Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.\\n\\n\\n\\t\u2014\u200aMelvin E. Conway, How Do Committees Invent?\\n\\n\\nAnd considered how it relates to your experience upon entering a new organization and seeing its entire architecture? We will explore the different levels where Conway\'s law impacts and how to mitigate its effects if desired.\\n\\n\\n## Conway\'s Law & Alternatives\\n\\n\\n### The Status Quo (Conway\'s Law)\\n\\n\\nConway\'s Law, proposed by Melvin Conway in **1967**, has withstood the test of time. It asserts that a system\'s design will mirror the structure of the organization that designed it. In other words, if a company has independent teams, the final product will likely consist of distinct components that function independently. Understanding this law can help organizations predict their system architecture based on their internal structure.\\n\\n\\nIf we let Conway\'s law take the lead, regardless of our system design knowledge, the outcome may not meet our expectations, as we\'ll see in various layers where Conway\'s law can influence.\\n\\n\\n### The Other Side (Inverse Conway Maneuver)\\n\\n\\nThe Inverse Conway Maneuver is a method of restructuring an organization to align better with the desired system architecture, which involves intentionally restructuring the organization to match the desired system architecture. This process can be challenging and disruptive, but it can lead to a more efficient and effective organization.\\n\\n\\nKey steps to successfully implementing the Inverse Conway Maneuver include:\\n\\n1. **Define the desired system architecture.**\xa0This should align with the organization\'s goals and objectives.\\n2. **Analyze the current organizational structure.**\xa0Identify where the current structure does not align with the desired system architecture.\\n3. **Develop a restructuring plan.**\xa0This plan should include a timeline and a communication strategy.\\n4. **Implement the plan.**\xa0This should be done in phases to minimize disruption.\\n5. **Monitor the results.**\xa0Track the restructuring progress and make adjustments as needed.\\n\\n### Middle Ground (User-Centric Conway Maneuver)\\n\\n\\nConventionally, profitable software is based on user needs. Many organizations claim to be user-centric but fail to organize around them. User-centric Conway Maneuver involves focusing on our client\'s process and needs, which will impact the organizational structure and systems architecture.\\n\\n\\nKey steps to successfully implementing the User-Centric Conway Maneuver include:\\n\\n1. **Understand your Target User.**\xa0This should align with the organization\'s goals and objectives.\\n2. **Analyze the current organizational structure.**\xa0Identify where the current structure does not align with the desired system architecture.\\n3. **Analyze the current architecture.**\xa0Identify where the current structure does not align with the desired system architecture.\\n4. **Develop a restructuring plan.**\xa0This plan should include a timeline and a communication strategy.\\n5. **Implement the plan.**\xa0This should be done in phases to minimize disruption.\\n6. **Monitor the results.**\xa0Track the restructuring progress and make adjustments as needed.\\n\\n> \u26a0\ufe0f Note that any transformation is complex and challenging and should only be undertaken with careful planning and execution.\\n\\n\\n## Layers of Influence\\n\\n\\nConway\'s Law is not just about high-level architecture; it influences various facets of system design and team collaboration. Here, we detail the layers where Conway\'s law manifests:\\n\\n\\n### Global Architecture\\n\\n\\nAt the Global Architecture level, Conway\'s Law suggests that the technical and non-technical organization definitions can affect your high-level architecture. Let\'s look at some examples:\\n\\n- **Non-technical departments:** In a company with separate marketing and operations departments, the marketing department is likely the primary stakeholder for systems related to the customer funnel, while the operations department is likely the primary stakeholder for systems related to customer care. If there is no communication between departments, your company might make promises it can\'t keep, or provide a poor customer experience.\\n- **Technical departments:** In a company with technical organizational departments where horizontals exist, your teams will reflect that structure. If not careful, you might implement very similar functionalities or overwhelm other teams with too many requirements.\\n\\n### Product Architecture\\n\\n\\nIn the context of a User-Centric Conway Maneuver, the product architecture level requires you to focus on how the various teams collaborate to deliver a product that fulfills user needs. You need to assess how the teams are structured and how their communication patterns align with the user journey you have defined.\\n\\n\\nFor instance, if you have separate teams for front-end and back-end development, you may need to foster better communication and collaboration between these teams to ensure that your product provides a seamless user experience. This could involve regular cross-team meetings, joint planning sessions, or even restructuring teams to be cross-functional.\\n\\n\\nYour architecture may have to evolve to support this more integrated approach. For example, you may decide to use a full-stack development approach where each team is responsible for both front-end and back-end development for a certain part of the user journey. This can lead to a product architecture that is more aligned with the user\'s needs and can adapt more quickly to changes in those needs.\\n\\n\\n### Code Architecture\\n\\n\\nAt the code level, the User-Centric Conway Maneuver involves considering how the communication and collaboration styles of individual team members can influence the design of system components. This is where the understanding of your target user and their journey can guide the design of individual features or components.\\n\\n\\nIf a developer tends to work in isolation on a feature, this could result in a component that does not integrate well with the rest of the system or does not meet user needs effectively. To address this, you may need to encourage more collaboration and communication within your team.\\n\\n\\nFor instance, you could use pair programming or code reviews to ensure that all team members have input into feature development. This can lead to code architecture that is more cohesive and adaptable, and that better reflects the needs of the user.\\n\\n\\nRemember, these are just examples, and your actual actions will depend on the specific needs and structure of your organization.\\n\\n\\n## User-Centric Conway Maneuver Action Plan\\n\\n\\nYou should now be aware that Conway\'s law can impact your organization unconsciously. Based on our multi-layered view, let\'s focus on the user-centric Conway maneuver:\\n\\n\\n### Global Architecture\\n\\n\\nIn this layer, you need to know what your business value is for your users to align to it, as it will likely change the least after you achieve a product-market fit. This knowledge can fuel your organizational and architectural changes. The knowledge required is not technical, but you should at least have defined your target user and their journey.\\n\\n\\nAfter defining these models, we will understand the business better, and we can map some new knowledge to reorganize and re-architect. Some possible actions from the examples we saw in the previous section:\\n\\n- **Reorganize Non-technical departments:** If there is no communication between marketing and operations, they need to work closer. This could involve having weekly syncs or a common leadership/organization, so their objectives are aligned.\\n- **Technical departments:** In the case of horizontal slicing, moving to a more user-centric environment could reorganize teams to be multifunctional and value stream aligned.\\n\\n### Product Architecture\\n\\n\\nIn the context of a User-Centric Conway Maneuver, the product architecture level requires a focus on how the various teams collaborate to deliver a product that fulfills user needs. This could involve regular cross-team meetings, joint planning sessions, or even restructuring teams to be more cross-functional.\\n\\n\\n### Code Architecture\\n\\n\\nAt the code level, the User-Centric Conway Maneuver involves considering how the communication and collaboration styles of individual team members can influence the design of system components. This is where understanding of your target user and their journey can guide the design of individual features or components.\\n\\n\\n## Conclusion\\n\\n\\nIn conclusion, Conway\'s Law provides valuable insight into how an organization\'s structure can impact the design of its systems. While the experience and skill of your hires certainly contribute to the quality of work, the architecture of the systems you develop will be significantly influenced by your organizational communication patterns. Hence, you will have to apply the maneuver or none depending on if you accept, mitigate, or want to pivot on the tradeoffs."},{"id":"/2024/03/14/T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from","metadata":{"permalink":"/blog/2024/03/14/T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-03-14T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from.md","source":"@site/blog/2024-03-14T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from.md","title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","description":"Discover how to align your organizational structure with software architecture to meet user needs effectively, leveraging Conway\'s Law for enhanced product development.","date":"2024-03-14T00:00:00.000Z","formattedDate":"March 14, 2024","tags":[],"readingTime":6.645,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-03-14T03:00:00.000Z","canonical_url":"https://leadshorizons.com/p/conways-law?r=2e46qd&showWelcomeOnShare=true","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Discover how to align your organizational structure with software architecture to meet user needs effectively, leveraging Conway\'s Law for enhanced product development.","Tags":["productivity","technology","startup","development"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/ca234731-4641-46e5-b01e-1edc4e44b8f0/conway.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466RWJMTAMG%2F20250227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250227T120440Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDsaCXVzLXdlc3QtMiJHMEUCIQDP62R3PI1BPyOGGMHRlgt%2BGHx2oIkm%2BdidZEeqltLKdAIgM%2FgDcObzoef5Kpe5emwncMUTqMic5vbSQCquIpTQQ9wq%2FwMIdBAAGgw2Mzc0MjMxODM4MDUiDHI3b9flIksTLahAVircAzu9%2BTz9kbiOpXH8cFaicIMEAC8Xmz2UM%2FGeqZsHcqk6sOmqbkf3AeUrwhBP7dsjUy09%2FbWVrmJpsonJ1VcHrW5VUzooUp2A8O6lTyaVfroa5lDarX30NoBeo4t%2BjGnXjNhl92iEr6PIqgLUoQIT%2FFnbmWN1OJtT3WV2woqMax8mGW0WonM8wxJCiaXUW4uSyKkta8TXqX77iH8ILqjioKinYo6gv%2BTyWSc1xlkX4GY8Au7V2UrDQrNufAFD%2Bt36uoo%2BHCILzH3l0s2hw96AQfJnmXofWbaSSxIRlGJVD2D8YvOmAw%2BguK81WKOdZUBCwn%2BHztGuDLuooNXzlxNR47unjhOODlJaiE4VRjZSjjumglZdOWSAA1rtBs5ONWrBsGLgQl71GO3mRznw8xnmL7o64d3G5j2ntXnMj6yOn7iDN6OyuwlTxVzN4BUYOydWg326viSvG41dH7uc4PGP5vKvmaQiCl7aLOe%2Fl26klNQUQzqqFn8tJmwLjJofa%2BY5YMxLxUrxjWV3CsP2jSOmNSEqVHCxfmXiTfZNlb0QVt3InPTA70f3x9QPdROA71T6Rn43GYpJI45CE4qTOEL%2Fo2%2B3Q%2BRIMALVYzMYBpDRigjqswKRVSDDdhBXoSqRMPuQgb4GOqUBrVUsQ2ig1%2FX2qWIW6BfMPQWMZfhc8Z%2Fjg5H%2F4Lobv%2FW%2BL8lgHvxEd4DqBvtsYGSVWReWBYBH0NZC%2FFxTL0s7F3%2FfZtitD6Lb6fI9GSK6IE%2BXzvtx4pnfstbJT1UXNyYtCMv3GJJLPlYQk%2Bc8VB3IIu31i8I3YZy6HO5lvi0v3Sifwh%2FJZW6igUBYyGnRx0lRSDCfsesy89VHuirL9lj8M%2Fc%2B%2FpC2&X-Amz-Signature=4cf06d353c30680019e90aad84a3eb842a516a1bfa342333bed629075451886e&X-Amz-SignedHeaders=host&x-id=GetObject","title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from"},"prevItem":{"title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","permalink":"/blog/2024/03/14/T00:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from"},"nextItem":{"title":"Beyond Coding: The Cost of Software Development","permalink":"/blog/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development"}},"content":"Have you ever read Conway\'s law before:\\n\\n\\n> Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.\\n\\n\\n\\t\u2014\u200aMelvin E. Conway, How Do Committees Invent?\\n\\n\\nAnd considered how it relates to your experience upon entering a new organization and seeing its entire architecture? We will explore the different levels where Conway\'s law impacts and how to mitigate its effects if desired.\\n\\n\\n## Conway\'s Law & Alternatives\\n\\n\\n### The Status Quo (Conway\'s Law)\\n\\n\\nConway\'s Law, proposed by Melvin Conway in **1967**, has withstood the test of time. It asserts that a system\'s design will mirror the structure of the organization that designed it. In other words, if a company has independent teams, the final product will likely consist of distinct components that function independently. Understanding this law can help organizations predict their system architecture based on their internal structure.\\n\\n\\nIf we let Conway\'s law take the lead, regardless of our system design knowledge, the outcome may not meet our expectations, as we\'ll see in various layers where Conway\'s law can influence.\\n\\n\\n### The Other Side (Inverse Conway Maneuver)\\n\\n\\nThe Inverse Conway Maneuver is a method of restructuring an organization to align better with the desired system architecture, which involves intentionally restructuring the organization to match the desired system architecture. This process can be challenging and disruptive, but it can lead to a more efficient and effective organization.\\n\\n\\nKey steps to successfully implementing the Inverse Conway Maneuver include:\\n\\n1. **Define the desired system architecture.**\xa0This should align with the organization\'s goals and objectives.\\n2. **Analyze the current organizational structure.**\xa0Identify where the current structure does not align with the desired system architecture.\\n3. **Develop a restructuring plan.**\xa0This plan should include a timeline and a communication strategy.\\n4. **Implement the plan.**\xa0This should be done in phases to minimize disruption.\\n5. **Monitor the results.**\xa0Track the restructuring progress and make adjustments as needed.\\n\\n### Middle Ground (User-Centric Conway Maneuver)\\n\\n\\nConventionally, profitable software is based on user needs. Many organizations claim to be user-centric but fail to organize around them. User-centric Conway Maneuver involves focusing on our client\'s process and needs, which will impact the organizational structure and systems architecture.\\n\\n\\nKey steps to successfully implementing the User-Centric Conway Maneuver include:\\n\\n1. **Understand your Target User.**\xa0This should align with the organization\'s goals and objectives.\\n2. **Analyze the current organizational structure.**\xa0Identify where the current structure does not align with the desired system architecture.\\n3. **Analyze the current architecture.**\xa0Identify where the current structure does not align with the desired system architecture.\\n4. **Develop a restructuring plan.**\xa0This plan should include a timeline and a communication strategy.\\n5. **Implement the plan.**\xa0This should be done in phases to minimize disruption.\\n6. **Monitor the results.**\xa0Track the restructuring progress and make adjustments as needed.\\n\\n> \u26a0\ufe0f Note that any transformation is complex and challenging and should only be undertaken with careful planning and execution.\\n\\n\\n## Layers of Influence\\n\\n\\nConway\'s Law is not just about high-level architecture; it influences various facets of system design and team collaboration. Here, we detail the layers where Conway\'s law manifests:\\n\\n\\n### Global Architecture\\n\\n\\nAt the Global Architecture level, Conway\'s Law suggests that the technical and non-technical organization definitions can affect your high-level architecture. Let\'s look at some examples:\\n\\n- **Non-technical departments:** In a company with separate marketing and operations departments, the marketing department is likely the primary stakeholder for systems related to the customer funnel, while the operations department is likely the primary stakeholder for systems related to customer care. If there is no communication between departments, your company might make promises it can\'t keep, or provide a poor customer experience.\\n- **Technical departments:** In a company with technical organizational departments where horizontals exist, your teams will reflect that structure. If not careful, you might implement very similar functionalities or overwhelm other teams with too many requirements.\\n\\n### Product Architecture\\n\\n\\nIn the context of a User-Centric Conway Maneuver, the product architecture level requires you to focus on how the various teams collaborate to deliver a product that fulfills user needs. You need to assess how the teams are structured and how their communication patterns align with the user journey you have defined.\\n\\n\\nFor instance, if you have separate teams for front-end and back-end development, you may need to foster better communication and collaboration between these teams to ensure that your product provides a seamless user experience. This could involve regular cross-team meetings, joint planning sessions, or even restructuring teams to be cross-functional.\\n\\n\\nYour architecture may have to evolve to support this more integrated approach. For example, you may decide to use a full-stack development approach where each team is responsible for both front-end and back-end development for a certain part of the user journey. This can lead to a product architecture that is more aligned with the user\'s needs and can adapt more quickly to changes in those needs.\\n\\n\\n### Code Architecture\\n\\n\\nAt the code level, the User-Centric Conway Maneuver involves considering how the communication and collaboration styles of individual team members can influence the design of system components. This is where the understanding of your target user and their journey can guide the design of individual features or components.\\n\\n\\nIf a developer tends to work in isolation on a feature, this could result in a component that does not integrate well with the rest of the system or does not meet user needs effectively. To address this, you may need to encourage more collaboration and communication within your team.\\n\\n\\nFor instance, you could use pair programming or code reviews to ensure that all team members have input into feature development. This can lead to code architecture that is more cohesive and adaptable, and that better reflects the needs of the user.\\n\\n\\nRemember, these are just examples, and your actual actions will depend on the specific needs and structure of your organization.\\n\\n\\n## User-Centric Conway Maneuver Action Plan\\n\\n\\nYou should now be aware that Conway\'s law can impact your organization unconsciously. Based on our multi-layered view, let\'s focus on the user-centric Conway maneuver:\\n\\n\\n### Global Architecture\\n\\n\\nIn this layer, you need to know what your business value is for your users to align to it, as it will likely change the least after you achieve a product-market fit. This knowledge can fuel your organizational and architectural changes. The knowledge required is not technical, but you should at least have defined your target user and their journey.\\n\\n\\nAfter defining these models, we will understand the business better, and we can map some new knowledge to reorganize and re-architect. Some possible actions from the examples we saw in the previous section:\\n\\n- **Reorganize Non-technical departments:** If there is no communication between marketing and operations, they need to work closer. This could involve having weekly syncs or a common leadership/organization, so their objectives are aligned.\\n- **Technical departments:** In the case of horizontal slicing, moving to a more user-centric environment could reorganize teams to be multifunctional and value stream aligned.\\n\\n### Product Architecture\\n\\n\\nIn the context of a User-Centric Conway Maneuver, the product architecture level requires a focus on how the various teams collaborate to deliver a product that fulfills user needs. This could involve regular cross-team meetings, joint planning sessions, or even restructuring teams to be more cross-functional.\\n\\n\\n### Code Architecture\\n\\n\\nAt the code level, the User-Centric Conway Maneuver involves considering how the communication and collaboration styles of individual team members can influence the design of system components. This is where understanding of your target user and their journey can guide the design of individual features or components.\\n\\n\\n## Conclusion\\n\\n\\nIn conclusion, Conway\'s Law provides valuable insight into how an organization\'s structure can impact the design of its systems. While the experience and skill of your hires certainly contribute to the quality of work, the architecture of the systems you develop will be significantly influenced by your organizational communication patterns. Hence, you will have to apply the maneuver or none depending on if you accept, mitigate, or want to pivot on the tradeoffs."},{"id":"/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development","metadata":{"permalink":"/blog/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-03-07T04:00:00.000Z-Beyond Coding: The Cost of Software Development.md","source":"@site/blog/2024-03-07T04:00:00.000Z-Beyond Coding: The Cost of Software Development.md","title":"Beyond Coding: The Cost of Software Development","description":"Software development is not only about coding, it requires prevalidations, and alternatives to coding","date":"2024-03-07T00:00:00.000Z","formattedDate":"March 7, 2024","tags":[],"readingTime":6.535,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-03-07T04:00:00.000Z","canonical_url":"https://leadshorizons.com/p/the-value-beyond-coding","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"Software development is not only about coding, it requires prevalidations, and alternatives to coding","Tags":["business","tech","productivity","technology"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/725a1d98-f3ef-4189-b3af-0a4da1b38797/656a9132-51a7-4fd6-a37b-a4190ff73ed5_1024x1024.webp?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=5638b0209eb9dfe75d41e1638d0156e1011fdf1431f54c4a5ad2402013c028ba&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Beyond Coding: The Cost of Software Development"},"prevItem":{"title":"Conway\'s Law: The Organizational Frame your Architecture will not escape from","permalink":"/blog/2024/03/14/T03:00:00.000Z-Conways Law: The Organizational Frame your Architecture will not escape from"},"nextItem":{"title":"Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations","permalink":"/blog/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations"}},"content":"In 2024, Software has become the backbone of countless industries, it seems natural to equate software engineering strictly with coding. After all, code is the very fabric of software. However, I\'ve come to appreciate that software engineering encompasses far more than just the act of coding. It involves understanding business needs, validating ideas, crafting user experiences, and so much more. \\n\\nThe reality is that while coding a solution is vital, it is also a considerable investment\u2014both in time and resources. This investment makes it imperative to explore and validate options thoroughly before committing to a specific path. \\n\\n\\nHere, we delve into why software engineering is not just about coding and how a broader perspective can lead to more successful outcomes.\\n\\n\\n## The High Cost of Coding\\n\\n\\nCoding, by nature, is an expensive process. This cost isn\'t just financial; it encompasses time, effort, and the opportunity cost of not pursuing other projects. This high cost makes it essential to ensure that once the coding phase begins, the project has a high probability of success. Pre-validation steps, therefore, are not just beneficial but critical.\\n\\n\\n\\n| **Type**                      | **Cost**                                                                                                                                                                                                                                                                                                                                                                                                                            |\\n| ----------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| **Direct Development Costs**  | **- Developer Salaries**: The most significant direct cost, encompassing the wages of personnel directly involved in the development process.\\n- **Tools and Licenses**: Expenses related to the software licenses, development tools, integrated development environments (IDEs), and any third-party services required for coding and project management.                                                                          |\\n| Infrastructure Costs          | **- Hardware**: Investments in servers, computers, and other hardware necessary for development, testing, and deployment.\\n- **Software**: Costs for operating systems, databases, server software, and any other software infrastructure required.\\n- **Cloud Services**: Expenses related to cloud computing resources if the development or hosting environment is cloud-based, including storage, computing power, and bandwidth. |\\n| Opportunity Costs             | **- Resource Allocation**: The cost of dedicating resources to one project over another, potentially more valuable project. This includes the time and attention of the development team.\\n- **Market Entry Timing**: The potential revenue lost by not entering the market sooner, especially relevant in fast-moving sectors where being first can confer a significant advantage.                                                 |\\n| Maintenance and Support Costs | **- Ongoing Maintenance**: Regular updates, bug fixes, and security patches to ensure the software remains functional and secure over time.\\n- **Customer Support**: Costs associated with providing user support, including staffing support desks, creating documentation, and developing training materials.                                                                                                                      |\\n\\n\\n## The Value of Software Teams\\n\\n\\nWhile coding is undeniably at the heart of the development cycle. The value that software teams bring to an organization stretches far beyond the lines of code they write. Recognizing and leveraging these additional contributions can significantly enhance the impact and success of projects. Here\u2019s a closer look at the diverse values software teams offer:\\n\\n1. **Identifying the Problems:** The first step in any software project isn\'t to start coding, but to understand the problem being solved. This means engaging with stakeholders, conducting market research, and performing competitive analysis. A profound understanding of the issue helps in crafting solutions that are not just technically sound, but also relevant and useful.\\n2. **Validating the Business Case:** Before a single line of code is written, it\'s critical to validate the business case for the project. This involves analyzing the potential return on investment, exploring the market demand, and considering various business models. Tools like the Lean Canvas can help in structuring these thoughts and ensuring that the project is viable from a business perspective.\\n3. **Exploring Solutions Beyond Code:** Not every issue requires a complex, coded solution. Occasionally, the answer might lie in utilizing existing platforms, integrating with third-party services, or even creating a non-technical process. For instance, automating tasks through existing tools or leveraging no-code/low-code platforms can be both cost-effective and efficient.\\n\\n### The Process of Creating New Solutions\\n\\n\\nTu fit the value of a team we have defined. This process involves several key steps designed to validate the business case, explore efficient development alternatives, and ensure the solution effectively addresses user needs without unnecessarily reinventing the wheel. Here\'s a closer look at these critical stages:\\n\\n\\n### Validating Business Without Creating a Repetitive Solution\\n\\n\\nBefore diving into development, it\'s crucial to ensure that the solution being proposed does not merely replicate existing offerings without adding value. This validation involves:\\n\\n- **Market Research**: Conducting thorough market research to understand the competitive landscape and identify gaps or unmet needs that the new solution could address.\\n- **User Interviews and Surveys**: Engaging directly with potential users to gather insights into their challenges and the limitations of current solutions.\\n- **Feasibility Studies**: Assessing the technical and economic feasibility of the proposed solution to ensure it\'s viable and sustainable over time.\\n\\nThis stage aims to confirm that the solution brings unique value to the market, justifying the investment required for its development.\\n\\n\\n### Explore Buy vs. Build Alternative\\n\\n\\nOnce the need for a new solution is validated, the next step is to decide whether to develop it in-house (build) or leverage existing solutions through purchase or licensing (buy). This decision should consider:\\n\\n- **Cost Analysis**: Comparing the total cost of ownership (TCO) for both options, including development, maintenance, and potential scalability costs.\\n- **Time to Market**: Evaluating how quickly the solution can be deployed using each approach, considering the urgency of the need it addresses.\\n- **Customization and Control**: Assessing the level of customization required and the importance of having complete control over the solution\'s features and development roadmap.\\n\\nExploring the buy vs. build alternative helps ensure that resources are allocated efficiently, focusing on creating value rather than duplicating existing technologies.\\n\\n\\n### Explore Low Code and No Code\\n\\n\\nFor many organizations, low code and no code platforms offer a compelling middle ground between buying off-the-shelf solutions and custom development. These platforms enable:\\n\\n- **Rapid Prototyping**: Allowing teams to quickly build and iterate on solutions without extensive coding, speeding up the validation process.\\n- **Cost Efficiency**: Reducing the need for specialized development skills, thereby lowering the cost of solution development and maintenance.\\n- **Empowering Non-Technical Users**: Enabling business analysts and other non-technical stakeholders to contribute directly to the solution creation process.\\n\\nExploring low code and no code options can democratize the development process and accelerate innovation within the organization.\\n\\n\\n### Creation of Throwaway MVPs\\n\\n\\nDeveloping throwaway Minimum Viable Products (MVPs) is a strategy to test hypotheses about a solution\'s value proposition with minimal investment. This approach involves:\\n\\n- **Focused Development**: Building a simplified version of the solution that includes only the core features necessary to test its viability and user acceptance.\\n- **Feedback and Learning**: Using the MVP to gather user feedback and insights, which can inform further development or pivot decisions.\\n- **Willingness to Pivot or Discard**: Being prepared to modify the solution significantly or abandon it based on feedback, minimizing sunk costs in non-viable directions.\\n\\nThe creation of throwaway MVPs allows teams to experiment and learn quickly, ensuring that development efforts are focused on solutions that genuinely meet user needs and have a viable business case.\\n\\n\\n### Embracing a Full Spectrum Approach\\n\\n\\nSoftware engineering is a discipline that transcends coding. It\'s about problem-solving, creativity, and understanding human needs. By embracing a holistic approach that includes rigorous validation, exploration of non-coded solutions, and a keen eye on the business aspects, software projects can achieve greater success. This approach saves resources and ensures that when we do code, we\'re building something of genuine value and relevance.\\n\\n\\nAs we navigate the complexities of modern software development, let us remember that our goal isn\'t just to write code but to solve problems in the most efficient and impactful way possible. This perspective is what will continue to drive innovation and success in the field of software engineering.\\n\\n\\n\\nJoin us for an insightful session exploring \\"Beyond Coding: The True Cost and Value of Software Development.\\""},{"id":"/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations","metadata":{"permalink":"/blog/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-02-29T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations.md","source":"@site/blog/2024-02-29T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations.md","title":"Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations","description":"What is the value of common practices in an engineering department. We will delve into how can you achieve a good level of alignment in your department.","date":"2024-02-29T00:00:00.000Z","formattedDate":"February 29, 2024","tags":[],"readingTime":6.655,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-02-29T04:00:00.000Z","canonical_url":"https://leadshorizons.com/p/harmonizing-innovation","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"What is the value of common practices in an engineering department. We will delve into how can you achieve a good level of alignment in your department.","Tags":["business","tech","productivity","technology"],"cover_image":"https://prod-files-secure.s3.us-west-2.amazonaws.com/df75203e-cd58-41eb-8339-d5bf4288eb0e/f5dbbc41-2b58-4260-bf10-3dbe65c55d8d/ai_2.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAZI2LB466TEDJWE53%2F20250731%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250731T115508Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCXXcHA4NxaGeYWdOy4QIqGFH1mCXlxy8%2Fq63vIwHrVRQIhALMaK8M5HFg%2BGP0YKrTdxdSbtNTvRklBjh0l5ncg%2FjoGKogECNT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1IgwjKzG6JpEAz%2Fedxwgq3ANI2Y4MwptCqc5facoL2trqew9KzAwjsimUwtBaEOWzyuvfCUjsCYS%2Bfn5%2Bl79CDyMR1j1Xsv3yxyYlyGY23jzL2KWu6zp6fTruyURQ94dO%2Fku6jzFVDZEMYnBhHhw7wHHIhPe6TvSSYIiFLDfpore2l%2F5lScEkhaqY2xpz5J9fDuynAHPhrrCBt4dWp%2ByEb2Iyr82w%2Fdc%2BBwu3zpT8DDjxCPcPE%2Bg6IbNt4unTQwIG%2Bxic%2BysJsdr3nB%2B0x3k2295U9BU3rmhsM38TgKrKvrXavE%2F7xEoNK7DUtu030Exn0u4ni2FovWf6M2byL992Jr8tx0E15yOmxtU0awxnbTmbjPMqgQHawWiyao1iNcWK86liELLakNg2UNJXij51ihBCL%2F7FsuD6hqigX%2BU8UXxeFGJrju2oirvl3Da6kRaEdX7BcJk0C7NWxS7z4gBeX860LSkAocZMGQrh3rfiAk78uYHDuXXUDFa7eTadQEnLAU1bSHf%2F8fnVLijKTN1VYv7IBC2tB%2FPa4LC9MPz8U%2F53T7vKzJRjHg5AGbuoW0HxU%2F4G5dm4T8HrzuXQI3sCfIGJQQdt8B%2FJ3xdJAGfR%2BajPXBNegDnRpJalabCaaKomAyJi%2FZckJO1L1BYgsjDvna3EBjqkATZLRM63qLotOoMzyIO9kak3%2Bc%2B5hEFr0UrN%2BZQGDHSGyHWjJG7Szxj2cL9datz7ymQ0IODaVHoA3yYPRy%2BJc%2Fw%2Bri0CmNxpH5DvqUajcqJK6f0KX8vPvMmXnqcEPIwuBRR5oqnhuDMIxdVYv6NqeXt6YF5gWnNMEM0nG95IPhAEE73Uw%2FYIPKnt4lfqfuTb%2BuJt6J0bZfZ6ZK6811O9cyZrS2qi&X-Amz-Signature=f5a3c31cc5f1d8a6435534efc266f983c02cff6245415fb53851247c950f7be7&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject","title":"Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations"},"prevItem":{"title":"Beyond Coding: The Cost of Software Development","permalink":"/blog/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development"},"nextItem":{"title":"Navigating Decision-Making in Engineering: A Framework-Centric Approach","permalink":"/blog/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach"}},"content":"In the realm of software engineering organizations, the synergy and coherence of a department are often the driving forces of success and innovation. As an engineering leader, I\'ve witnessed the transformative power of establishing common practices across teams. \\n\\nThese practices streamline operations and foster a culture of collaboration and continuous improvement. The key lies in identifying and implementing a \u201cminimum common denominator\u201d of practices that all teams can adhere to, ensuring consistency while accommodating the diverse nature of our projects and teams.\\n\\n\\n## **The Importance of Common Practices**\\n\\n\\nCommon practices serve as a shared language and methodology that bridge the gaps between different teams within a software engineering department. They ensure that despite the varied nature of our work\u2014be it developing new features, fixing bugs, or innovating on technology\u2014there is a foundational set of standards and processes that everyone understands and follows. This common ground enhances efficiency, as teams can seamlessly collaborate or transition between projects without the friction of having to learn entirely new ways of working.\\n\\n\\nMoreover, these practices lay the groundwork for a culture of quality and accountability. When everyone adheres to a set of agreed-upon standards, it elevates the overall quality of output. It also simplifies onboarding new team members, as there is a clear set of practices they can learn and adapt to from day one.\\n\\n\\n## Navigating Risk of overshoot or undershoot \\n\\n\\nIn the quest to harmonize operations within a software engineering department, striking the right balance between implementing common practices and allowing team-specific practices. Both extremes\u2014having too many common practices or none\u2014pose significant risks that can hinder a team\'s, and ultimately organization\'s ability, efficiency, or creativity. \\n\\nLet\'s explore these risks in detail:\\n\\n\\n### The Risks of Too Many Common Practices\\n\\n- **Stifled Creativity**: Over-standardization can create an environment where teams and their members feel their creativity and problem-solving abilities are constrained by rigid guidelines. This can dampen innovation, as teams may be less inclined to explore novel solutions that fall outside established practices.\\n- **Reduced Flexibility**: Too many common practices can make it difficult for teams to adapt to specific project needs or unique challenges. This lack of flexibility can lead to inefficiencies, as teams are forced to follow processes that may not be optimal for their current context.\\n- **One-Size-Fits-All Pitfall**: Software projects can vary greatly in terms of scope, complexity, and objectives. A heavy-handed approach to standardization fails to acknowledge these differences, potentially leading to suboptimal approaches and solutions.\\n\\n### The Risks of Too Many Common Practices\\n\\n- **Stifled Creativity**: Over-standardization can create an environment where teams and their members feel their creativity and problem-solving abilities are constrained by rigid guidelines. This can dampen innovation, as teams may be less inclined to explore novel solutions that fall outside established practices.\\n- **Reduced Flexibility**: Too many common practices can make it difficult for teams to adapt to specific project needs or unique challenges. This lack of flexibility can lead to inefficiencies, as teams are forced to follow processes that may not be optimal for their current context.\\n- **One-Size-Fits-All Pitfall**: Software projects can vary greatly in terms of scope, complexity, and objectives. A heavy-handed approach to standardization fails to acknowledge these differences, potentially leading to suboptimal approaches and solutions.\\n\\n### The Risks of No Common Practices\\n\\n- **Inconsistency and Chaos**: Without any common practices, teams operate in silos, leading to inconsistencies in code quality, project management, and communication. This can result in integration challenges, technical debt, and a steep learning curve for team members transitioning between projects.\\n- **Knowledge Silos and Isolation**: The absence of shared practices can lead to knowledge silos, where expertise and solutions are not effectively shared across the department. This isolation can hinder collaboration and slow down problem-solving and innovation.\\n- **Quality Control Challenges**: Without a baseline of common practices, ensuring consistent quality across projects becomes a daunting task. This can affect the reliability and maintainability of the software produced, impacting customer satisfaction and trust.\\n- **Complexity in Creating Coherent Systems**: A lack of common practices complicates the development of systems that work seamlessly together, leading to disjointed user experiences.\\n\\n## **Defining a Minimum Common Denominator**\\n\\n\\nWith these risks in mind. The challenge lies in defining a set of practices that is broad enough to cover the essential aspects of our work, yet flexible enough to allow for the unique needs and creativity of each team. This involves:\\n\\n- **Identifying Core Practices**: Focus on establishing a core set of practices that address critical aspects of software development, such as languages, coding standards, version control, and testing. These practices should form the backbone of your department\'s operations, ensuring consistency and quality.\\n- **Allowing for Flexibility**: Encourage teams to adapt and supplement these core practices with methodologies that suit their specific project needs and challenges. This flexibility supports creativity and innovation, allowing teams to find the best solutions.\\n- **Fostering a Culture of Collaboration**: Promote an environment where teams are encouraged to share their successes and learnings from adapting common practices. This can help evolve and refine your core practices over time, ensuring they remain relevant and effective.\\n\\nBy defining and adhering to these minimum common practices, software engineering departments can achieve a balance between uniformity and flexibility. This balance is crucial for fostering an environment where teams can work efficiently and innovate freely, driving the organization towards its goals with cohesion and excellence.\\n\\n\\n## Creating an Organization-Specific Technology Radar to Define Common Practices\\n\\n\\nTo tailor common practices to the unique needs and strategic goals of a software engineering organization, developing an organization-specific Technology Radar can be an invaluable approach. Inspired by the ThoughtWorks Technology Radar, this framework allows organizations to systematically evaluate and adopt technologies and methodologies that best fit their context. Here\u2019s a step-by-step guide on how to implement this framework:\\n\\n1. **Define the Radar Structure:** Similar to the ThoughtWorks model, organize your Radar into quadrants that are relevant to your organization, such as Tools, Languages & Frameworks, Platforms, and Practices & Techniques. Within each quadrant, use rings to categorize technologies or practices based on their adoption stage: Explore, Adopt, Trial, and Hold.\\n2. **Gather Input:** Solicit input from across the organization to identify technologies, tools, and practices currently in use, as well as those being considered for future projects. Encourage teams to share their experiences, challenges, and successes with different technologies.\\n3. **Evaluate and Categorize:** Define an organization wide session to evaluate the collected input based on criteria such as strategic fit, potential benefits, current maturity, and the organization\u2019s ability to support and implement the technology or practice. Based on this evaluation, items are placed into the appropriate quadrant and ring of the Radar.\\n4. **Communicate and Implement:** Share the Technology Radar and the derived common practices with the entire engineering department. Provide guidelines, training, and resources to facilitate the adoption of these practices. Encourage teams to integrate these practices into their workflows and projects.\\n5. **Monitor, Review, and Update:** Do this at least once a year. Monitor the relevance of the items on the Technology Radar. Gather feedback from teams and conduct periodic reviews to update the Radar and the associated common practices. This ensures that your organization remains agile, adapting to new technologies and methodologies as they emerge.\\n\\nBy creating and maintaining an organization-specific Technology Radar, software engineering departments can foster a culture of innovation and continuous improvement. This framework not only helps in aligning teams around common practices but also ensures that these practices are dynamically updated to keep pace with technological advancements and organizational growth.\\n\\n\\n## Final Thoughts\\n\\n\\nIn conclusion, establishing common practices within a software engineering organization is a strategic endeavor that balances innovation with consistency. These practices serve as the backbone of a cohesive engineering department, enabling teams to navigate the complexities of software development with agility and confidence. Ultimately, the careful definition and implementation of common practices empower organizations to achieve their strategic objectives, enhance the quality of their outputs, and maintain a competitive edge in the ever-evolving landscape of technology."},{"id":"/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach","metadata":{"permalink":"/blog/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-02-22T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach.md","source":"@site/blog/2024-02-22T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach.md","title":"Navigating Decision-Making in Engineering: A Framework-Centric Approach","description":"How do we navigate decision-making at different levels, and what frameworks can help us.","date":"2024-02-22T00:00:00.000Z","formattedDate":"February 22, 2024","tags":[],"readingTime":7.59,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"published":"2024-02-22T04:00:00.000Z","canonical_url":"https://leadshorizons.com/p/navigating-decision-making-in-engineering","series":"Engineering Strategy 101","authors":["alvarolorentedev"],"description":"How do we navigate decision-making at different levels, and what frameworks can help us.","Tags":["business","tech","productivity","technology"],"cover_image":"https://substackcdn.com/image/fetch/w_1272,h_715,c_fill,f_webp,q_auto:good,fl_progressive:steep,g_center/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0b5228e3-c2cc-4992-97ca-ab8721d14b52_1024x1024.png","title":"Navigating Decision-Making in Engineering: A Framework-Centric Approach"},"prevItem":{"title":"Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations","permalink":"/blog/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations"},"nextItem":{"title":"Leaders Build Trust, Managers Take Control: The Path to Empowering Teams","permalink":"/blog/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams"}},"content":"In the dynamic field of engineering, effective decision-making is crucial. From day-to-day team choices to strategic departmental shifts that align with company-wide objectives, understanding how to navigate these decisions is key to fostering a productive, innovative, and cohesive engineering environment. A well-established decision-making process is vital for several key reasons:\\n\\n1. **Clarity and Efficiency**: It provides clear guidelines and roles, streamlining decision-making and saving time and resources.\\n2. **Accountability and Quality**: Assigning clear roles enhances accountability, leading to more informed and thoughtful decisions.\\n3. **Transparency and Trust**: A transparent process builds trust among team members, ensuring decisions are made fairly.\\n\\n\\nIn every organization, decisions are made daily across various levels, to help shape the direction we collectively strive for.\\n\\n\\n## Decision Stratum\u2019s\\n\\n\\n### The Team Level\\n\\n\\nDecisions at the team level often involve immediate, tactical issues related to required execution, technology choices, or problem-solving methods. \\n\\n\\n> **Empower your teams** by encouraging autonomy and ownership of decisions within their scope. \\n\\n\\nImplement a **decentralized decision-making process**, where the teams and its members can make decisions based on their expertise and understanding of the context. This approach enhances agility and accelerates the development process. \\nHowever, ensure these decisions align with broader domain and departmental goals through regular sync-ups and transparent communication channels.\\n\\n\\n| **Framework**    | Classic Brainstorming                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\\n| ---------------- ||\\n| **Action Steps** | 1. **Set Clear Objectives**: Begin by clearly defining the problem or topic you\'re brainstorming about. Ensure everyone understands the goal of the session.\\n2. **Create a Conducive Environment:** Choose a comfortable setting free from distractions. A relaxed atmosphere encourages more open and creative thinking.\\n3. **Encourage Uninhibited Participation:** \\n  - Emphasize that all ideas are welcome, no matter how outlandish they may seem.\\n  - Encourage participants to build on or combine ideas from others.\\n  - Avoid criticism or evaluation of ideas during the brainstorming phase to keep the flow of ideas going.\\n4. **Use a Visual Aid**: Write down ideas on a whiteboard, flip chart, or shared document visible to all participants. This helps keep track of the ideas generated and can inspire further thoughts.\\n5. **Timebox the Session**: Set a clear time limit for the brainstorming session (e.g., 15-30 minutes). This creates a sense of urgency and helps maintain focus.\\n6. **Facilitate the Session**: Have a facilitator guide the session to ensure everyone has a chance to contribute. The facilitator can also help keep the session on track and encourage quieter members to share their ideas.\\n7. **Review and Prioritize**: Once the brainstorming phase is complete, review the ideas as a group. You can discuss, combine, or refine ideas and prioritize them based on criteria relevant to your objectives.\\n8. **Plan Next Steps**: Decide on actionable steps to explore or implement the top ideas. Assign responsibilities and deadlines as needed. |\\n\\n\\n### The Domain Level\\n\\n\\nDomain-level decisions impact a specific area of expertise within the engineering department, requiring a blend of technical knowledge and strategic foresight. These decisions might involve adopting new technologies, architectural changes, or methodologies that affect how projects within the domain are executed. \\n\\n\\n> Engage **cross-functional teams** in these discussions to gather diverse perspectives and ensure the decision supports both engineering & product goals. \\n\\n\\nOne framework that can be used is **RFCs (Request for Comments)** documents, as they help to build consensus and will become part of your historical knowledge base.  You can start using it by following the next process:\\n\\n- **Define the RFC Process**: Clarify who can submit, the format/template, the review process, and decision-making criteria.\\n- **Submission and Publication**: Make the RFC accessible to all stakeholders through a shared system or platform.\\n- **Feedback and Discussion**: Allow a set period for stakeholders to provide feedback and engage in discussions to refine the proposal.\\n- **Decision-Making**: After feedback, decision-makers approve, request revisions, or reject the RFC, communicating the decision clearly.\\n- **Implementation**: Approved RFCs are added to the project roadmap or backlog for execution.\\n- **Review and Retrospective**: Post-implementation, review the outcomes and conduct a retrospective to improve future RFC processes.\\n\\n| **Framework**    | **RFCs|\\n| ---------------- ||\\n| **Action Steps** | **1. Define the RFC Process**: Clarify who can submit, the format/template, the review process, and decision-making criteria.\\n2. **Submission and Publication**: Make the RFC accessible to all stakeholders through a shared system or platform.\\n3. **Feedback and Discussion**: Allow a set period for stakeholders to provide feedback and engage in discussions to refine the proposal.\\n4. **Decision-Making**: After feedback, decision-makers approve, request revisions, or reject the RFC, communicating the decision clearly.\\n5. **Implementation**: Approved RFCs are added to the project roadmap or backlog for execution.\\n6. **Review**: Post-implementation, review the outcomes and conduct a retrospective. |\\n\\n\\n### The Department Level\\n\\n\\nDepartment-level decisions shape the engineering culture, define processes, and set the direction that aligns with the company\u2019s strategic objectives. This might include decisions on budget allocations, hiring plans, department structure, or significant technology shifts. \\n\\n\\n> Such decisions require **inclusive leadership**\u2014soliciting input from domain leads, team managers, and sometimes the entire engineering staff. \\n\\n\\nIt\u2019s crucial to balance transparency, providing enough information for informed input, with decisiveness, making clear choices even when there\u2019s no unanimous agreement.\\n\\n\\n\\n| **Framework**    | **OKRs**                                                                                                                                                                                                                                                                                                                                               |\\n| ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| **Action Steps** | 1. **Set Objectives**: Define clear, ambitious, and achievable objectives for the department.\\n2. **Define Key Results**: Identify measurable outcomes to gauge progress towards each objective.\\n3. **Regular Check-ins**: Conduct quarterly OKR reviews to assess progress, make necessary adjustments, and decide on priorities for the next quarter. |\\n\\n\\n### The Company Level\\n\\n\\nDecisions at the company level often involve considerations beyond the engineering department, including market positioning, customer needs, and cross-departmental initiatives. Engineering leaders must collaborate with peers in other departments and the executive team to ensure engineering strategies and resources align with company-wide goals. \\n\\n\\n> Participate in **strategic planning sessions** and **executive meetings** with a clear voice for the engineering department, advocating for decisions that support both immediate product and technology needs and long-term innovation and growth.\\n\\n\\n| **Framework**    | **Balanced Scorecard**                                                                                                                                                                                                                                                                                                                                                                                                                                          |\\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| **Action Steps** | 1. **Develop Strategy Maps**: Create visual representations of the company\u2019s strategic objectives and how they interconnect.\\n2. **Identify Key Performance Indicators (KPIs)**: For each strategic objective, define specific, measurable indicators of success.\\n3. **Strategic Review Meetings**: Hold regular strategic review sessions to discuss progress on KPIs, assess alignment with strategic objectives, and make decisions on strategic adjustments. |\\n\\n\\n## Decision Alignment \\n\\n\\nAligning decisions across multiple levels within an organization is a critical challenge that requires a structured approach to ensure coherence and efficiency. As organizations grow and become more complex, the need for clear communication and defined roles becomes paramount to avoid confusion and ensure that everyone is working towards the same goals. \\nA key strategy in achieving this alignment is to ensure that decision-making processes are transparent and involve the right stakeholders at the right time. This involves not only identifying who needs to be involved in making decisions but also clarifying the extent of their involvement and the expectations from them. \\nEffective alignment means that strategic decisions made at the top level are informed by insights from all relevant parts of the organization and that these decisions are effectively communicated and implemented at the operational level.\\n\\n\\n| **Framework**    | **Balanced Scorecard|\\n| ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| **Action Steps** | 1. **Identify Tasks and Processes:** List all tasks, activities, or decisions that need to be made within the department. This creates the foundation for assigning responsibilities.\\n2. **Determine the Participants:** Identify all individuals and teams involved. This includes anyone who will perform tasks, make decisions, or needs to be kept informed.\\n3. **Create the RACI Chart:** Set up a matrix with tasks or decisions on one axis and the participants on the other. Fill in the matrix with R, A, C, or I to define the role of each participant for each task:\\n  - **Responsible (R)**: Who is responsible for executing.\\n  - **Accountable (A)**: Who is ultimately accountable for the completion and success of the task. Typically, this is one person.\\n  - **Consulted (C)**: Who needs to be consulted or involved in the decision-making process because of their expertise or input.\\n  - **Informed (I)**: Who needs to be informed about the task\'s progress or decisions. |\\n\\n\\n## Conclusion\\n\\n\\nEffective decision-making across an engineering department is a multifaceted challenge that requires a nuanced approach at each level. By empowering teams, fostering cross-functional collaboration, engaging in inclusive leadership, and aligning with company-wide objectives, engineering leaders can navigate the complexities of decision-making with confidence. Remember, the goal is not just to make decisions but to make decisions that propel the department and the company forward in a coherent and strategic manner.\\n\\n\\nThe frameworks exposed in this article can be use to aid the decision-making process, at the same time there are no hard boundaries for them. For example, we used to use RFCs at department level for cross domain alignments. \\nBe prepared to have a toolbox that allows you to apply what makes more sense at each moment to help your team & organization."},{"id":"/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams","metadata":{"permalink":"/blog/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2024-02-14-leaders-build-trust-managers-take-control-the-path-to-empowering-teams.md","source":"@site/blog/2024-02-14-leaders-build-trust-managers-take-control-the-path-to-empowering-teams.md","title":"Leaders Build Trust, Managers Take Control: The Path to Empowering Teams","description":"Are leaders and managers important for organizational success?","date":"2024-02-14T00:00:00.000Z","formattedDate":"February 14, 2024","tags":[{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"motivation","permalink":"/blog/tags/motivation"},{"label":"career","permalink":"/blog/tags/career"},{"label":"business","permalink":"/blog/tags/business"}],"readingTime":4.33,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Leaders Build Trust, Managers Take Control: The Path to Empowering Teams","authors":"alvarolorentedev","tags":["productivity","motivation","career","business"],"description":"Are leaders and managers important for organizational success?","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/leader-manager.jpeg","canonical_url":"https://scalinghorizons.substack.com/p/leaders-build-trust-managers-take","published":"2024-02-14T01:00:00.000Z","series":"Engineering Strategy 101"},"prevItem":{"title":"Navigating Decision-Making in Engineering: A Framework-Centric Approach","permalink":"/blog/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach"},"nextItem":{"title":"Replace Docker Desktop with Podman in OSX","permalink":"/blog/2023/06/30/replacement-docker-desktop-with-podman-in-osx"}},"content":"> TL;DR;\\n> \\n> In essence, leadership and management are two sides of the same coin, each playing a critical role in guiding teams and individuals towards achieving their potential and realizing organizational objectives. By building trust and taking control in measure, you empower your teams to innovate, perform, and thrive in an ever-evolving landscape.\\n\\nHave you ever worked in an organization that either seems too lax on the process or too stiff? What is behind that lack of balance? Are Leaders & Managers roles completely contradictory?\\n\\nIn the realm of organizational success, the distinction between leadership and management is not just semantics. It\'s foundational to how teams and individuals achieve their goals. While management is essential for ensuring tasks are completed, budgets are adhered to, and deadlines are met, leadership goes a step beyond, it cultivates an environment of trust, vision, and empowerment.\\n\\n\\n## The Essence of Leadership: Building Trust\\n\\nLeadership is inherently about building trust. It\'s a leader\'s responsibility to create a safe environment where team members feel valued, heard, and encouraged to contribute their best work. Trust is not built overnight but is developed through consistent actions, transparency, and an open dialogue. Here are a few ways leaders can build trust:\\n\\n* **Empathy and Understanding**: Leaders who show empathy and genuinely understand their team\'s challenges and needs foster a deeper connection, demonstrating they value their team members not just as employees but as individuals.\\n\\n* **Consistency in Words and Actions**: Trust is nurtured when leaders follow through on their promises and demonstrate integrity in all actions, proving they are reliable and trustworthy.\\n\\n* **Empowering Others**: By delegating meaningful tasks and showing confidence in their team\'s abilities, leaders empower their colleagues, which builds trust and cultivates a sense of ownership.\\n\\n* **Leading by Example**: Actions often speak louder than words. When leaders embody the values, work ethic, and attitude they wish to see in their teams, they set a powerful example that encourages others to follow suit. Leading by example bridges the gap between directives and action, showing that leaders are willing to do what they ask of others.\\n\\n\\n## The Role of Management: Taking Control\\n\\nManagement, while often seen in a less glamorous light, is crucial for organizational success. Managers take control by organizing, planning, and directing resources to meet objectives. Control, in this context, means ensuring that processes are efficient, objectives are clear, and outcomes are predictable. Here\'s how management takes control:\\n\\n* **Setting Clear Goals and Expectations**: Managers excel at clarifying goals and setting expectations, ensuring everyone knows what needs to be done and by when.\\n* **Monitoring Progress and Making Adjustments**: Control involves keeping a close eye on progress, identifying issues early, and adjusting plans as necessary to stay on course.\\n\\n* **Efficiency and Optimization**: Managers focus on optimizing resources, reducing waste, and improving efficiency, ensuring that the team can achieve its objectives with the resources available.\\n\\n* **Keeping Everyone in Sync**: Effective managers facilitate communication across departments, share insights and updates, and ensure that their team\u2019s objectives align with broader company goals.\\n\\n\\n## The Imbalance of Leadership Without Management, and Vice Versa\\n\\nSeeing both roles as contradictory tends to push organizations towards failure. Organizational success requires a delicate balance between leadership and management. An imbalance, where one exists without the other, can lead to challenges that hinder a team\u2019s or organization\u2019s ability to reach its full potential.\\n\\n* **Leadership Without Management**: Leadership focused on building trust and vision without the grounding force of management can lead to a lack of direction and inefficiencies. While teams may feel inspired and valued, the absence of structured planning, goal-setting, and resource management can result in missed deadlines, unmet objectives, and wasted potential. In essence, the drive and motivation fostered by leadership need the rudder of management to steer the organization towards its goals effectively.\\n\\n* **Management Without Leadership**: Conversely, management without leadership often leads to a rigid, uninspired work environment where tasks are completed, and objectives are met, but there\u2019s little room for innovation, engagement, or personal growth. This scenario can enforce a culture of merely \'going through the motions\' rather than thriving. Teams may achieve short-term goals but at the cost of long-term engagement and loyalty. The vision, inspiration, and trust-building aspects of leadership are critical for cultivating an environment where employees feel connected to their work and motivated to contribute their best.\\n\\n## Finding the Right Balance By Bridging Leadership and Management\\n\\nThe most effective leaders are those who can blend the visionary, trust-building aspects of leadership with the pragmatic, control-oriented nature of management. Here are a few ways to bridge the gap:\\n\\n* **Communicate Vision and Purpose**: Share the bigger picture and why work matters, connecting daily tasks to overarching goals.\\n\\n* **Foster an Environment of Growth**: While maintaining control over the essentials, encourage innovation and risk-taking within parameters that ensure alignment with goals and values.\\n\\n* **Practice Emotional Intelligence**: Recognize your emotions and those of others to manage interactions and communications effectively, blending empathy with decisiveness.\\n\\nThe synergy of inspirational leadership and effective management ensures that teams are not only motivated to reach their goals but are also equipped with the strategy, resources, and direction to do so."},{"id":"/2023/06/30/replacement-docker-desktop-with-podman-in-osx","metadata":{"permalink":"/blog/2023/06/30/replacement-docker-desktop-with-podman-in-osx","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-06-30-replacement-docker-desktop-with-podman-in-osx.md","source":"@site/blog/2023-06-30-replacement-docker-desktop-with-podman-in-osx.md","title":"Replace Docker Desktop with Podman in OSX","description":"a how to tutorial migrate from docker desktop to podman in OSX","date":"2023-06-30T00:00:00.000Z","formattedDate":"June 30, 2023","tags":[{"label":"devops","permalink":"/blog/tags/devops"},{"label":"docker","permalink":"/blog/tags/docker"},{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"}],"readingTime":2.825,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Replace Docker Desktop with Podman in OSX","authors":"alvarolorentedev","tags":["devops","docker","softwaredevelopment"],"description":"a how to tutorial migrate from docker desktop to podman in OSX","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/docker-desktop.png","series":"OSX How To..."},"prevItem":{"title":"Leaders Build Trust, Managers Take Control: The Path to Empowering Teams","permalink":"/blog/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams"},"nextItem":{"title":"Continious Delivery Bootcamp: Continuous Integration","permalink":"/blog/2023/04/24/continious-delivery-bootcamp-continuous-integration"}},"content":"## Why would I do this?\\n\\nD\ufeffocker-desktop is a paid product, their licensing mode is by user, and it provides value not for the software side but for their cloud offering (registry, etc). For this, if the intent of you\'re a company is to use containers locally to facilitate software development,  the cost tends to be high.\\n\\n## What is podman?\\n\\nPodman (short for Pod Manager) is an open-source, Linux-native tool designed to develop, manage, and run containers and container images. It offers a Docker-compatible command-line interface (CLI) that does not rely on a daemon, but directly interacts with the Image registry, container, and image storage, and container process operations.\\n\\n## Migration Steps\\n\\n### 1. Clean-up Docker Desktop (Optional)\\n\\n \ufeffyou will need to run the next [bash script](https://github.com/docker-archive/toolbox/blob/master/osx/uninstall.sh)\\n\\n```shell\\n#!/bin/bash\\n\\n# Uninstall Script\\n\\nif [ \\"${USER}\\" != \\"root\\" ]; then\\n\\techo \\"$0 must be run as root!\\"\\n\\texit 2\\nfi\\n\\nwhile true; do\\n  read -p \\"Remove all Docker Machine VMs? (Y/N): \\" yn\\n  case $yn in\\n    [Yy]* ) docker-machine rm -f $(docker-machine ls -q); break;;\\n    [Nn]* ) break;;\\n    * ) echo \\"Please answer yes or no.\\"; exit 1;;\\n  esac\\ndone\\n\\necho \\"Removing Applications...\\"\\nrm -rf /Applications/Docker.app\\n\\necho \\"Removing docker binaries...\\"\\nrm -f /usr/local/bin/docker\\nrm -f /usr/local/bin/docker-machine\\nrm -r /usr/local/bin/docker-machine-driver*\\nrm -f /usr/local/bin/docker-compose\\n\\necho \\"Removing boot2docker.iso\\"\\nrm -rf /usr/local/share/boot2docker\\n\\necho \\"Forget packages\\"\\npkgutil --forget io.docker.pkg.docker\\npkgutil --forget io.docker.pkg.dockercompose\\npkgutil --forget io.docker.pkg.dockermachine\\npkgutil --forget io.boot2dockeriso.pkg.boot2dockeriso\\n\\necho \\"All Done!\\"\\n```\\n\\n### 2\ufeff. Install Homebrew\\n\\n[Homebrew](https://brew.sh/) is the defacto command line package manager for OSX, if you don\'t have it is very recommendable to have it.\\n\\n```shell\\n/bin/bash -c \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\"\\n```\\n\\n### 3\ufeff. Install Podman\\n\\nOn Mac, each Podman machine is backed by a\xa0[QEMU](https://www.qemu.org/)\xa0based virtual machine. Once installed, the podman command can be run directly from the Unix shell in\xa0`Terminal`, where it remotely communicates with the podman service running in the Machine VM.\\n\\nFor Mac, Podman is provided through\xa0[Homebrew](https://brew.sh/). Once you have set up brew, you can use the\xa0`brew install`\xa0command to install Podman:\\n\\n```shell\\nbrew install podman\\n```\\n\\nNext, create and start your first Podman machine:\\n\\n```shell\\npodman machine init\\npodman machine start\\n```\\n\\nYou can then verify the installation information using:\\n\\n```shell\\npodman info\\n```\\n\\nAt this point, podman should have created a proxy file in `/usr/local/bin/docker`, if it does not exist you will have to create it with:\\n\\n```shell\\nsudo vim /usr/local/bin/docker\\n```\\n\\na\ufeffdd in that file the content:\\n\\n```shell\\n#!/bin/sh\\n[ -e /etc/containers/nodocker ] || \\\\\\necho \\"Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.\\" >&2\\nexec podman \\"$@\\"\\n```\\n\\nt\ufeffhe script needs to be made executable by:\\n\\n```powershell\\nchmod +x /usr/local/bin/docker\\n```\\n\\ny\ufeffou should now be able to run a docker as normal\\n\\n```shell\\ndocker run -it docker.io/hello-world\\n```\\n\\n### 4. Use podman-mac-help\\n\\nY\ufeffou should consider using\xa0`podman-mac-help`\xa0to migrate transparently to Podman on macOS.\\n\\n* Continue using familiar Docker commands.\\n* Take advantage of the benefits of Podman on macOS.\\n* Your tools, such as\xa0[Maven](https://maven.apache.org/)\xa0or\xa0[Testcontainers](https://www.testcontainers.org/), communicate with Podman without reconfiguration.\\n\\nThe\xa0`podman-mac-helper`\xa0tool provides a compatibility layer that allows you to use most Docker commands with Podman on macOS. The service redirects\xa0`/var/run/docker`\xa0to the fixed user-assigned UNIX socket location.\\n\\nT\ufeffo enable this, you just need to run:\\n```shell\\nsudo podman-mac-helper install\\n```\\n\\n### 5. Install Podman Desktop (Optional)\\n\\nFinally, to have a better compatibility and a UI to work with as with docker desktop, you can install [Podman desktop](https://podman-desktop.io/)b\ufeffy running: \\n\\n```\\nbrew install podman-desktop\\n```"},{"id":"/2023/04/24/continious-delivery-bootcamp-continuous-integration","metadata":{"permalink":"/blog/2023/04/24/continious-delivery-bootcamp-continuous-integration","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-04-24-continious-delivery-bootcamp-continuous-integration.md","source":"@site/blog/2023-04-24-continious-delivery-bootcamp-continuous-integration.md","title":"Continious Delivery Bootcamp: Continuous Integration","description":"Learn how to get things fast into production with good quality","date":"2023-04-24T00:00:00.000Z","formattedDate":"April 24, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"development","permalink":"/blog/tags/development"}],"readingTime":0.46,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Continious Delivery Bootcamp: Continuous Integration","authors":"alvarolorentedev","tags":["programming","productivity","devops","development"],"description":"Learn how to get things fast into production with good quality","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/continious-integration.png","canonical_url":"https://www.alvarolorente.dev/blog/2023/04/24/continious-delivery-bootcamp-continuous-integration","series":"Continuous Delivery Bootcamp"},"prevItem":{"title":"Replace Docker Desktop with Podman in OSX","permalink":"/blog/2023/06/30/replacement-docker-desktop-with-podman-in-osx"},"nextItem":{"title":"Functional Programming With Kotlin Bootcamp - Initialize the Project","permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project"}},"content":"Welcome to our Continuous Delivery Bootcamp! We\'ll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you\'ll be a pro at transforming code into working software. Sign up today and start transforming your workflow! \\n\\nThis chapter we will do an example on how to build and validate our project in github actions.\\n\\n# Video\\n\\n<iframe width=\\"100%\\" height=\\"444\\" src=\\"https://www.youtube.com/embed/QMwXxezykHc\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n{% embed https://youtu.be/QMwXxezykHc %}\\n\\n[\ufeffWatch the video on Youtube](https://youtu.be/QMwXxezykHc)"},{"id":"/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project","metadata":{"permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-04-24-functional-programming-with-kotlin-bootcamp-initialize-the-project.md","source":"@site/blog/2023-04-24-functional-programming-with-kotlin-bootcamp-initialize-the-project.md","title":"Functional Programming With Kotlin Bootcamp - Initialize the Project","description":"Learn how to do functional programming with kotlin","date":"2023-04-24T00:00:00.000Z","formattedDate":"April 24, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"development","permalink":"/blog/tags/development"},{"label":"kotlin","permalink":"/blog/tags/kotlin"},{"label":"functional","permalink":"/blog/tags/functional"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Functional Programming With Kotlin Bootcamp - Initialize the Project","authors":"alvarolorentedev","tags":["programming","development","kotlin","functional"],"description":"Learn how to do functional programming with kotlin","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/fp-with-kotlin-gradle.png","canonical_url":"https://www.alvarolorente.dev/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project","series":"Functional Programming With Kotlin"},"prevItem":{"title":"Continious Delivery Bootcamp: Continuous Integration","permalink":"/blog/2023/04/24/continious-delivery-bootcamp-continuous-integration"},"nextItem":{"title":"Functional Programming With Kotlin Bootcamp - Intro","permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-intro"}},"content":"This is a #functional #programming series focusing on the main concepts using #kotlin.\\n\\nIn this second chapter, we will initialize a project with gradle and kotlin\\n\\n# Video\\n\\n<iframe width=\\"100%\\" height=\\"444\\" src=\\"https://www.youtube.com/embed/YSbMLid1h-c\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n{% embed https://youtu.be/YSbMLid1h-c %}\\n\\n[\ufeffWatch the video on Youtube](https://youtu.be/YSbMLid1h-c)"},{"id":"/2023/04/24/functional-programming-with-kotlin-bootcamp-intro","metadata":{"permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-intro","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-04-24-functional-programming-with-kotlin-bootcamp-intro.md","source":"@site/blog/2023-04-24-functional-programming-with-kotlin-bootcamp-intro.md","title":"Functional Programming With Kotlin Bootcamp - Intro","description":"Learn how to do functional programming with kotlin","date":"2023-04-24T00:00:00.000Z","formattedDate":"April 24, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"development","permalink":"/blog/tags/development"},{"label":"kotlin","permalink":"/blog/tags/kotlin"},{"label":"functional","permalink":"/blog/tags/functional"}],"readingTime":0.275,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Functional Programming With Kotlin Bootcamp - Intro","authors":"alvarolorentedev","tags":["programming","development","kotlin","functional"],"description":"Learn how to do functional programming with kotlin","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/fpusing-kotlin.png","canonical_url":"https://www.alvarolorente.dev/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-intro","series":"Functional Programming With Kotlin"},"prevItem":{"title":"Functional Programming With Kotlin Bootcamp - Initialize the Project","permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project"},"nextItem":{"title":"Continious Delivery Bootcamp: Intro","permalink":"/blog/2023/04/13/continious-delivery-bootcamp-intro"}},"content":"This is a #functional #programming series focusing on the main concepts using #kotlin.\\n\\nIn this first chapter, we will do an intro of the differences between OOP and FP\\n\\n# Video\\n\\n<iframe width=\\"100%\\" height=\\"444\\" src=\\"https://www.youtube.com/embed/DG3cj6dV3YM\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n{% embed https://youtu.be/DG3cj6dV3YM %}\\n\\n[\ufeffWatch the video on Youtube](https://youtu.be/DG3cj6dV3YM)"},{"id":"/2023/04/13/continious-delivery-bootcamp-intro","metadata":{"permalink":"/blog/2023/04/13/continious-delivery-bootcamp-intro","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-04-13-continious-delivery-bootcamp-intro.md","source":"@site/blog/2023-04-13-continious-delivery-bootcamp-intro.md","title":"Continious Delivery Bootcamp: Intro","description":"Learn how to get things fast into production with good quality","date":"2023-04-13T00:00:00.000Z","formattedDate":"April 13, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"development","permalink":"/blog/tags/development"}],"readingTime":0.485,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Continious Delivery Bootcamp: Intro","authors":"alvarolorentedev","tags":["programming","productivity","devops","development"],"description":"Learn how to get things fast into production with good quality","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/continious.png","canonical_url":"https://www.alvarolorente.dev/blog/2023/04/13/continious-delivery-bootcamp-intro","series":"Continuous Delivery Bootcamp"},"prevItem":{"title":"Functional Programming With Kotlin Bootcamp - Intro","permalink":"/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-intro"},"nextItem":{"title":"Continious Delivery Bootcamp: Test Driven Development","permalink":"/blog/2023/04/13/continious-delivery-bootcamp-test-driven-development"}},"content":"Welcome to our Continuous Delivery Bootcamp! We\'ll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you\'ll be a pro at transforming code into working software. Sign up today and start transforming your workflow! \\n\\nThis chapter we will do an intro on the tools we will use and how to commit code with git and GitHub works\\n\\n# Video\\n\\n<iframe width=\\"100%\\" height=\\"444\\" src=\\"https://www.youtube.com/embed/nwpUtvHulWM\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n{% embed https://youtu.be/nwpUtvHulWM %}\\n\\n[\ufeffWatch the video on Youtube](https://youtu.be/nwpUtvHulWM)"},{"id":"/2023/04/13/continious-delivery-bootcamp-test-driven-development","metadata":{"permalink":"/blog/2023/04/13/continious-delivery-bootcamp-test-driven-development","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-04-13-continious-delivery-bootcamp-test-driven-development.md","source":"@site/blog/2023-04-13-continious-delivery-bootcamp-test-driven-development.md","title":"Continious Delivery Bootcamp: Test Driven Development","description":"Learn how to get things fast into production with good quality","date":"2023-04-13T00:00:00.000Z","formattedDate":"April 13, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"development","permalink":"/blog/tags/development"}],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Continious Delivery Bootcamp: Test Driven Development","authors":"alvarolorentedev","tags":["programming","productivity","devops","development"],"description":"Learn how to get things fast into production with good quality","draft":false,"cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/copy-of-continious.png","canonical_url":"https://www.alvarolorente.dev/blog/2023/04/13/continious-delivery-bootcamp-test-driven-development","series":"Continuous Delivery Bootcamp"},"prevItem":{"title":"Continious Delivery Bootcamp: Intro","permalink":"/blog/2023/04/13/continious-delivery-bootcamp-intro"},"nextItem":{"title":"Psychological safety in software development","permalink":"/blog/2023/01/26/psycological-safety-in-software-developmente"}},"content":"Welcome to our Continuous Delivery Bootcamp! We\'ll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you\'ll be a pro at transforming code into working software. Sign up today and start transforming your workflow! \\n\\nThis chapter we will do an iteration writing test, doing test driven development not only as a testing tool but also as a design tool.\\n\\n# Video\\n\\n<iframe width=\\"100%\\" height=\\"444\\" src=\\"https://www.youtube.com/embed/MG-Uqve41BQ\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n{% embed https://youtu.be/MG-Uqve41BQ %}\\n\\n[\ufeffWatch the video on Youtube](https://youtu.be/MG-Uqve41BQ)"},{"id":"/2023/01/26/psycological-safety-in-software-developmente","metadata":{"permalink":"/blog/2023/01/26/psycological-safety-in-software-developmente","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2023-01-26-psycological-safety-in-software-developmente.md","source":"@site/blog/2023-01-26-psycological-safety-in-software-developmente.md","title":"Psychological safety in software development","description":"What are some success factors of high-performing teams and organizations? One undoubtedly is the ability to share and exchange without fear or shame ","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"motivation","permalink":"/blog/tags/motivation"}],"readingTime":1.94,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Psychological safety in software development","authors":"alvarolorentedev","draft":false,"description":"What are some success factors of high-performing teams and organizations? One undoubtedly is the ability to share and exchange without fear or shame ","tags":["programming","productivity","motivation"],"canonical_url":"https://www.alvarolorente.dev/blog/2023-01-26-psycological-safety-in-software-developmente","cover_image":"https://raw.githubusercontent.com/alvarolorentedev/website/main/static/img/blog/unnamed-1.jpg","series":"What makes high-performing teams "},"prevItem":{"title":"Continious Delivery Bootcamp: Test Driven Development","permalink":"/blog/2023/04/13/continious-delivery-bootcamp-test-driven-development"},"nextItem":{"title":"Double-edge Microservices: APIs the New Singleton","permalink":"/blog/2022/12/19/api-singleton"}},"content":"psychological safety is essential for the success of software development teams. By fostering open communication and encouraging a culture of learning and innovation, teams can work more efficiently, effectively, and creatively. By promoting psychological safety, managers and leaders can help their team members to reach their full potential and take the team to the next level.\\n\\n## Long Version\\n\\n### What is psychological safety\\n\\n> Psychological safety refers to the belief that one will not be punished or humiliated for speaking up with ideas, questions, concerns, or mistakes. It is a shared belief held by members of a team that the team is safe for interpersonal risk-taking. This safety allows team members\\n\\n### Why is psychological safety important\\n\\nPsychological safety is an essential aspect of any successful organization. Software development organizations are no exception.\\n\\nOne of the main benefits of psychological safety is the ability to foster open and honest communication. When team members feel safe to speak up, they are more likely to share their thoughts and ideas, which can lead to more efficient problem-solving and decision-making. In a field that is constantly evolving and where new technologies and approaches are continually emerging, it is essential to stay up-to-date and adapt to change.\\n\\nFurthermore, it allows for creativity and innovation to flourish. When team members feel secure in their ability to express themselves, they are more likely to think outside the box and come up with new and unique solutions. In software development, this can be the difference between the success and failure of a project.\\n\\nHowever, creating a culture of psychological safety is not always easy. It requires active effort and commitment from everyone on the team, including managers and leaders. One important step is to actively listen to and encourage open dialogue among team members. Managers should also create an environment where mistakes are viewed as opportunities for learning, not as failures.\\n\\nAnother important step is to establish clear guidelines and expectations for communication and behavior within the team. This can include things like setting ground rules for respectful dialogue and providing training on active listening and conflict resolution.\\n\\nFinally, it is essential to hold every one on the team accountable for maintaining a culture of psychological safety. This includes managers, who should lead by example and model the behavior they expect from their team."},{"id":"/2022/12/19/api-singleton","metadata":{"permalink":"/blog/2022/12/19/api-singleton","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-12-19-api-singleton.md","source":"@site/blog/2022-12-19-api-singleton.md","title":"Double-edge Microservices: APIs the New Singleton","description":"In the current world of development we solve all with APIs, is it becoming an overused practice?","date":"2022-12-19T00:00:00.000Z","formattedDate":"December 19, 2022","tags":[{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"api","permalink":"/blog/tags/api"},{"label":"architecture","permalink":"/blog/tags/architecture"},{"label":"programming","permalink":"/blog/tags/programming"}],"readingTime":2.27,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Double-edge Microservices: APIs the New Singleton","description":"In the current world of development we solve all with APIs, is it becoming an overused practice?","authors":"alvarolorentedev","tags":["webdev","api","architecture","programming"],"draft":false,"series":"microservices a double-edged sword","cover_image":"https://www.alvarolorente.dev/img/blog/captura-de-pantalla-2022-12-19-a-las-17-16-39.png","canonical_url":"https://www.alvarolorente.dev/blog/2022/12/19/api-singleton"},"prevItem":{"title":"Psychological safety in software development","permalink":"/blog/2023/01/26/psycological-safety-in-software-developmente"},"nextItem":{"title":"Double-edge Microservices: Macro Infrastructure due to Microservice Obsession","permalink":"/blog/2022/12/19/macroInfrastructure-microservice-obsesion"}},"content":"The singleton pattern has got a bad reputation over the years due to be widely overused in the incorrect use cases. With the proliferation of microservices, **have APIs become the new singleton?**\\n\\n## The Problem\\n\\nAPIs, or application programming interfaces, have become a ubiquitous part of modern software development. They allow different systems and applications to communicate with one another, enabling the creation of complex, interconnected systems that can share data and functionality. However, there has been a growing concern that APIs are being overused, leading to a proliferation of unnecessarily complex and fragile systems that are difficult to maintain and scale.\\n\\nOne reason for the perceived overuse of APIs is the ease with which they can be implemented. With the abundance of API management tools and frameworks available, it is relatively straightforward to expose a set of functionality as an API and make it available to other systems. This has led to a proliferation of APIs, many of which are redundant or unnecessary, adding unnecessary complexity to the overall system.\\n\\nAnother issue is the lack of standardization in the API ecosystem. Each API is typically designed to meet the specific needs of the system it was created for, resulting in a wide variety of different designs and conventions. This can make it difficult for developers to understand and use APIs from other systems, as they may have to learn and adapt to new conventions and patterns each time they encounter a new API.\\n\\nIn addition to these issues, the reliance on APIs can also lead to fragile systems that are difficult to maintain and scale. When multiple systems are tightly coupled through APIs, a change to one system can have cascading effects on others, leading to unexpected behavior and potential failures. This can make it difficult to make changes or updates to a system without the risk of breaking something else.\\n\\nThere are also concerns about the security of APIs. As they allow systems to communicate with one another, they can also provide a potential entry point for attackers to gain access to sensitive data or functionality. Properly securing APIs can be a complex and time-consuming task, and if not done correctly, can lead to significant vulnerabilities.\\n\\n## The Solution\\n\\nSo, what can be done to address these issues? One solution is to use APIs more judiciously, carefully evaluating whether an API is truly necessary before implementing it. This can help reduce the overall complexity of the system and make it easier to maintain and scale. \\n\\nIt\'s also important to adopt API design standards and guidelines, which can help ensure that APIs are consistent and easy to understand and use. Finally, proper API security practices should be implemented to protect against potential vulnerabilities."},{"id":"/2022/12/19/macroInfrastructure-microservice-obsesion","metadata":{"permalink":"/blog/2022/12/19/macroInfrastructure-microservice-obsesion","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-12-19-macroInfrastructure-microservice-obsesion.md","source":"@site/blog/2022-12-19-macroInfrastructure-microservice-obsesion.md","title":"Double-edge Microservices: Macro Infrastructure due to Microservice Obsession","description":"Macro Infrastructure due to Microservice Obsession the over-engineering of our age","date":"2022-12-19T00:00:00.000Z","formattedDate":"December 19, 2022","tags":[{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"api","permalink":"/blog/tags/api"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"architecture","permalink":"/blog/tags/architecture"}],"readingTime":3.495,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Double-edge Microservices: Macro Infrastructure due to Microservice Obsession","description":"Macro Infrastructure due to Microservice Obsession the over-engineering of our age","authors":"alvarolorentedev","tags":["webdev","api","programming","architecture"],"draft":false,"series":"microservices a double-edged sword","canonical_url":"https://www.alvarolorente.dev/blog/2022/12/19/macroInfrastructure-microservice-obsesion","cover_image":"https://www.alvarolorente.dev/img/blog/captura-de-pantalla-2022-12-19-a-las-17-17-49.png"},"prevItem":{"title":"Double-edge Microservices: APIs the New Singleton","permalink":"/blog/2022/12/19/api-singleton"},"nextItem":{"title":"TDD is not called TDT for a reason","permalink":"/blog/2022/11/24/tdd-is-not-called-tdt-for-a-reason"}},"content":"## The Context\\n\\nCloud and infrastructure as code have revolutionized our industry. They allowed us to be able to procure infrastructure in a simple, adaptable way.  \\nThis allowed us to move from writing huge monolithic applications to write microservices that interact between them.  \\nOne of the most accepted definition of a microservice can be expressed as:\\n\\n> A self-contained portion of code that does not share resources with other services, can be deployed independently, and should be easy to rewrite in a small portion of time.\\n\\nThis sounds great when we talk about individual parts of a software projects. Nevertheless, when thinking about systems and how they operate, There is a point to make about granularity as software does never work fully isolated. It requires interactions with other systems to fulfill their purpose.\\n\\nMost of the monolithic applications of the past had an issue of being over-engineered to allow changes that might never happen.\\n\\nCould that also happen with microservices?\\n\\n## The Issues\\n\\n### Clarity Of The Domain\\n\\nWhen a system grows too much in small pieces, it becomes more and more complex to understand the big picture.  \\nWhen pieces are too small, domain events start becoming exchange of information in between nodes of a network. All this removes cohesion on the knowledge over the domain of a system, making it difficult to grasp the real intention and capabilities of concepts and actors across a system.\\n\\n### Babel tower Issue\\n\\nThe more parts a system has, the less heterogeneous it becomes. This at the same time translates into a more complex environment with more integrations, frameworks and bigger learning curves that affects delivery. There need to be a balance of when and where in a system a new technology is added. Decisions must be based on needs and not on preferences.\\n\\n### Implicit runtime dependencies\\n\\nThe more a system get split, the more dependency on certain node it will have. This tends to cause more dependencies in between the pieces of your infrastructure-based puzzle where you start having god infrastructure points that become single point of failure, or you have a chain of dependent infra that need to be deployed in a go or certain order.\\n\\n### Hidden Complexity\\n\\nThe more your microservice environment grows, the more it requires a growing support infrastructure for monitoring, alerting and other services not used as part of the main system. This normally is a separate effort which has its cost. The more a system grows, those hidden complexities become a dependency for all the nodes in the system, making it a complex task to evolve and change those dependencies.\\n\\n### Why\u2026 if YAGNI\\n\\nOne of the main ideas of microservices was to be able to validate assumptions fast. Before bootstrapping new services or infrastructure, there is a need to ask ourselves about the existence of a service or infrastructure that contains the domain knowledge required for the experiment in the current ecosystem. If we are not careful, experiments won\'t be experiments. They will be MVPs, where domain knowledge is re-implemented, just for having it as a standalone node on the system.\\n\\n### Repeating Yourself\\n\\nWhen we create pieces of code that are independent, there is always a certain level of bootstrapping that is required and repeated in each node of our systems. This will cause not only a set of duplicated code, but also has a development time cost attached to it. Bootstrapping a project in a high granularity system can be complex to standardize.\\n\\nMicroservices, the cloud, and infrastructure as a service have definitely revolutionized our industry, nevertheless as in everything there is a need for balance. Making sure we use the right tool for the job, and we don\'t over-engineer things, not only at a code level but also at infrastructure level, as everything has a cost.\\n\\n## Conclusion\\n\\nIn conclusion, a macro infrastructure due to microservice obsession can lead to increased complexity and overhead costs, as well as challenges in making changes and updates to the system. While microservices can offer benefits such as increased scalability and flexibility, it is important for organizations to carefully consider their specific needs and choose the right level of granularity for their architecture."},{"id":"/2022/11/24/tdd-is-not-called-tdt-for-a-reason","metadata":{"permalink":"/blog/2022/11/24/tdd-is-not-called-tdt-for-a-reason","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-11-24-tdd-is-not-called-tdt-for-a-reason.md","source":"@site/blog/2022-11-24-tdd-is-not-called-tdt-for-a-reason.md","title":"TDD is not called TDT for a reason","description":"When people elaborate on TDD they seem to stay focused on the first letter but miss the focus of the other two letters. ","date":"2022-11-24T00:00:00.000Z","formattedDate":"November 24, 2022","tags":[{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"testing","permalink":"/blog/tags/testing"},{"label":"architecture","permalink":"/blog/tags/architecture"},{"label":"programming","permalink":"/blog/tags/programming"}],"readingTime":1.575,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"TDD is not called TDT for a reason","authors":"alvarolorentedev","draft":false,"description":"When people elaborate on TDD they seem to stay focused on the first letter but miss the focus of the other two letters. ","tags":["webdev","testing","architecture","programming"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/11/24/tdd-is-not-called-tdt-for-a-reason","cover_image":"https://www.alvarolorente.dev/img/blog/tdd.png","series":""},"prevItem":{"title":"Double-edge Microservices: Macro Infrastructure due to Microservice Obsession","permalink":"/blog/2022/12/19/macroInfrastructure-microservice-obsesion"},"nextItem":{"title":"Delivery Acceleration: Parallel Changes Strategy","permalink":"/blog/2022/10/14/delivery-acceleration-parallel-changes-strategy"}},"content":"I have observed quite a few articles lately that elaborate on issues with TDD. Nevertheless, they focused on the first letter but miss the focus of the other two letters.\\n\\n## Not A Testing Strategy\\n\\nIf you take anything out of this article, please think about this quote:\\n\\n> If TDD was about testing it would have been called TDT (test driven testing).\\n\\nThe fact that we do test upfront in TDD does not mean at all that there is a direct relationship with a testing strategy, and as many preach, unit testing is not enough to create robust software.\\n\\n## A Design Strategy\\n\\nTDD is actually a **Design Strategy**, this is why the 2 last letter are for **driven development**. This means that your final code is being moved by those tests and not the other way around.\\n\\nThe design that TDD will move you towards to is **minimalistic**. Reducing the tendency of overengineering solutions when you don\'t need them. This brings a **reducing time to market**, by reducing the **accidental complexity**.\\n\\nWhen doing TDD most developers have the complexity of letting go their **egos**, the problem when people fight against the practices is because they think to know better. Nevertheless, it tends to **generate waste** because most code optimizations tend to be premature and most extensibility points will never be modified.\\n\\nThere are places where TDD does not fit, for example while investigating a technology through a spike or PoC because in these cases, the person is exploring knowledge not generating value. In other cases, TDD allows you to bring value in the shortest way possible.\\n\\n## Conclusion\\n\\nIf you are an experienced developer, do not discard TDD because you think you know better, allow it to challenge you. If you are a new developer, learn from the different ways of doing things and understand the value, don\'t take articles at face value."},{"id":"/2022/10/14/delivery-acceleration-parallel-changes-strategy","metadata":{"permalink":"/blog/2022/10/14/delivery-acceleration-parallel-changes-strategy","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-10-14-delivery-acceleration-parallel-changes-strategy.md","source":"@site/blog/2022-10-14-delivery-acceleration-parallel-changes-strategy.md","title":"Delivery Acceleration: Parallel Changes Strategy","description":"Code evolve and changes. Making sure we don\'t break things in a continuous deployment environment.","date":"2022-10-14T00:00:00.000Z","formattedDate":"October 14, 2022","tags":[{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":1.53,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Parallel Changes Strategy","authors":"alvarolorentedev","draft":false,"description":"Code evolve and changes. Making sure we don\'t break things in a continuous deployment environment.","tags":["softwaredevelopment","programming","devops","productivity"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/10/14/delivery-acceleration-parallel-changes-strategy","cover_image":"https://www.alvarolorente.dev/img/blog/expand_contract.jpeg","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"TDD is not called TDT for a reason","permalink":"/blog/2022/11/24/tdd-is-not-called-tdt-for-a-reason"},"nextItem":{"title":"Delivery Acceleration: Version Control Integration Strategy","permalink":"/blog/2022/10/12/delivery-acceleration-version-control-integration-strategy"}},"content":"As we develop a product over time, changes need to be made as we need to accommodate new functionality. As most of our systems don\'t run isolated, and we have clients that used them (ex. public API), We have to keep compatibility at least on a temporary basis. How do we achieve this?\\n\\n## Versions\\n\\nA common practice is to have different versions for the multiple clients. While simple, it also requires significant effort to maintain as whenever an issue or bug is spotted, multiple places are affected, meaning there are more possibility of side effects.  \\nIt also makes it more difficult to make a case for clients to migrate from one to the other due to the contract changes.\\n\\n![](https://www.alvarolorente.dev/img/blog/version.png)\\n\\nThis affect mostly negatively the next DORA 4 metrics:\\n\\n* \u274c **Lead Time for change**\\n\\n## Versionless: Expand & Contract\\n\\nAs the name says, this strategy intents to have only one state of truth and not a multitude of them. Versionless has been heavily adopted as a principle by GraphQL, for example.  \\nWe can achieve this in any code base by implementing a strategy for parallel changes called **Expand & Contract**, it\'s call this way due to the phases code goes through. Let\'s see for example we want to migrate from using one field value to a similar field with a more complex representation.\\n\\n* **Expand**: We add the new \'field\' to the existing contract, and add the code to support this strategy on the existing code.\\n* **Contract**: We monitor the usage of the old \'field\' to understand when it is possible to deprecate, at that point we remove the old code.\\n\\n![](https://www.alvarolorente.dev/img/blog/expand_contract.jpeg)\\n\\nWith this, we have a clean source code that we can evolve indefinitely as required by the business.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Lead Time for change**"},{"id":"/2022/10/12/delivery-acceleration-version-control-integration-strategy","metadata":{"permalink":"/blog/2022/10/12/delivery-acceleration-version-control-integration-strategy","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-10-12-delivery-acceleration-version-control-integration-strategy.md","source":"@site/blog/2022-10-12-delivery-acceleration-version-control-integration-strategy.md","title":"Delivery Acceleration: Version Control Integration Strategy","description":"How do you integrate code in the team matters, it will directly affect the rest of your architecture and practices like we have seen in previous chapters","date":"2022-10-12T00:00:00.000Z","formattedDate":"October 12, 2022","tags":[{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"}],"readingTime":2.54,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Version Control Integration Strategy","authors":"alvarolorentedev","draft":false,"description":"How do you integrate code in the team matters, it will directly affect the rest of your architecture and practices like we have seen in previous chapters","tags":["productivity","devops","programming","softwaredevelopment"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/10/12/delivery-acceleration-version-control-integration-strategy","cover_image":"https://www.alvarolorente.dev/img/blog/trunk.png","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"Delivery Acceleration: Parallel Changes Strategy","permalink":"/blog/2022/10/14/delivery-acceleration-parallel-changes-strategy"},"nextItem":{"title":"Delivery Acceleration: Testing & Validation","permalink":"/blog/2022/10/11/delivery-acceleration-testing-validation"}},"content":"I have already written some [other post](https://www.alvarolorente.dev/blog/2022/08/08/stop-prs) on this topic. I will go straight to the point on comparing Git Flow (a [legacy strategy](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow) that most companies use) and Trunk-Based Development.\\n\\n## Gitflow: The Bad & The Ugly\\n\\nWhy do I call it the bad and the ugly? Because it does not allow you to achieve Continuous Deployment.  \\nThe idea is that every developer works isolated on their branch, validate on their branch and ask through a merge request to add their code to the X stage branch.\\n\\n![](https://www.alvarolorente.dev/img/blog/gitflow-diagram-768x973.png)  \\nThere are multiple issues with this:\\n\\n* Code does not exist isolated, we don\'t deploy isolated code, so the isolated test is not valid as it will require retesting.\\n* The peer review process happens at the end, causing a very slow feedback loop. Having to rewrite code that could be avoided.\\n* The more time the branch lives, the more it diverges from the original behavior and the more complex it is to merge.\\n* Merging can cause complex conflicts that require revalidation, and it might have side effect in other features. \\n* As there needs to be validations of the merges, it\'s normal to have multiple environments that give a false sense of security, increases the $ cost and increases the lead time.\\n* Egos and preferences become part of the review process, as it has become an \'accepted\' practice that the \'experts\' or \'leads\' do the reviews.\\n\\nAll of this is red tape to go through is a problem that makes delivery slower, and create a lack of ownership mentality farther away from what happen to the individual branch.\\n\\n  \\nThis affects mostly negatively, most of DORA 4 metrics:\\n\\n* \u274c **Deployment frequency**\\n* \u274c **Lead Time for change**\\n* \u274c **Mean Time To Recovery**\\n\\nIs there a simpler and better way to collaborate on code way?\\n\\n## Trunk-Based Development: The Good\\n\\nWhat happens if we all commit to the same branch.\\n\\n![](https://www.alvarolorente.dev/img/blog/trunk.png)\\n\\nMost of the expressed issues are solved, in this scenario by:\\n\\n* Code is never isolated, as we all push code to the same place.\\n* Teams that do this practices also practice pair programming, making the peer review process is continuous and synchronous.\\n* As individuals push multiple times a day, merge conflicts are non-existent or small.\\n* Does not require revalidation, as validation is a continuous stream in the single environment.\\n* No ego environment tent to appear as there is no centralize approver of code, so it\'s not a matter of preference but a team effort and ownership.\\n\\nAs we have seen before, having unfinished code does not need to affect users, as it is common practice to use feature flags and/or branching by abstraction.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n\\n## Conclusion\\n\\nSimplicity is king. Having a simpler structure enables speed and quality of delivery, as it allow teams to work closely, take shared ownership and act faster related to a smaller change."},{"id":"/2022/10/11/delivery-acceleration-testing-validation","metadata":{"permalink":"/blog/2022/10/11/delivery-acceleration-testing-validation","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-10-11-delivery-acceleration-testing-validation.md","source":"@site/blog/2022-10-11-delivery-acceleration-testing-validation.md","title":"Delivery Acceleration: Testing & Validation","description":"is testing enough to make sure our code works?","date":"2022-10-11T00:00:00.000Z","formattedDate":"October 11, 2022","tags":[{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":1.215,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Testing & Validation","draft":false,"description":"is testing enough to make sure our code works?","authors":["alvarolorentedev"],"tags":["softwaredevelopment","programming","devops","productivity"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/10/11/delivery-acceleration-testing-validation","cover_image":"https://www.alvarolorente.dev/img/blog/testing.jpg","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"Delivery Acceleration: Version Control Integration Strategy","permalink":"/blog/2022/10/12/delivery-acceleration-version-control-integration-strategy"},"nextItem":{"title":"Delivery Acceleration: Enabling Features","permalink":"/blog/2022/10/10/delivery-acceleration-enabling-features"}},"content":"Before we enable code for our clients, we need to test and validate it does what is expected. This could be an entire series of its own (please let me know if you want one), so I will keep it on a high level.\\n\\n## Testing\\n\\nI could probably spend hours sharing different types of testing strategies and where and why to use them.  \\nIn reality, the most important thing, is to make sure we use the correct ratio of the different types of tests, as it will highly affect the time and location of your testing.\\n\\nThis ratio has always been shown as a pyramid with:\\n\\n* **Unit test**: validate individual pieces of logic that are isolated.\\n* **Integration test**: validates interactions with multiple parts of your system or other systems.\\n* **Integrated test**: They test the system as a whole.\\n\\n![](https://www.alvarolorente.dev/img/blog/pyramid.jpeg)\\n\\nTests are divided in these layers because there is a cost in time and complexity.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n## Validation\\n\\nValidation differs from testing as it\'s the confirmation that the behavior is what the user expected, for now, humans are the only ones that can discern this.  \\nAs we have seen in the previous chapter, the recommendation is to do this in production, so you get:\\n\\n* Get real behaviors of interactions with other systems\\n* Get real performance\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Change Failure Rate**"},{"id":"/2022/10/10/delivery-acceleration-enabling-features","metadata":{"permalink":"/blog/2022/10/10/delivery-acceleration-enabling-features","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-10-10-delivery-acceleration-enabling-features.md","source":"@site/blog/2022-10-10-delivery-acceleration-enabling-features.md","title":"Delivery Acceleration: Enabling Features","description":"How do we roll out features? What are some practices that can save us from the big bang release","date":"2022-10-10T00:00:00.000Z","formattedDate":"October 10, 2022","tags":[{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"}],"readingTime":2.635,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Enabling Features","draft":false,"description":"How do we roll out features? What are some practices that can save us from the big bang release","authors":"alvarolorentedev","tags":["productivity","devops","programming","softwaredevelopment"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/10/10/delivery-acceleration-enabling-features","cover_image":"https://www.alvarolorente.dev/img/blog/toggles.jpeg","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"Delivery Acceleration: Testing & Validation","permalink":"/blog/2022/10/11/delivery-acceleration-testing-validation"},"nextItem":{"title":"Delivery Acceleration: Deployment Environments","permalink":"/blog/2022/10/10/delivery-acceleration-environments"}},"content":"Now that we know where our code lives, we need to make sure our users get access to the features. For this, we need to get our code to the environment we want to deploy to, and control the rollout (if you are not a big bang release fan).\\n\\n## Blue/Green Deployment: Getting to prod with 0 downtime\\n\\nWhat is this?, The concept is simple, we have a set of machines (ex. blue) where we currently have our app running, and we want to deploy. The intent is to create a new set of machines (ex. green) where our new version of the code will run. We would like to validate as much as possible (ex. automated e2e tests) that this new version is up to par with the previous one before moving the traffic and destroy the previous version.\\n\\nYou can see the process in the next graph:\\n\\n![](https://www.alvarolorente.dev/img/blog/blue_green.jpeg)\\n\\nWith this, we are trying to achieve a 0 downtime while deploying a new version of our code. This is critical for teams that practice continuous deployment, as you want to avoid having systems down as you deploy multiple times a day.\\n\\n## Enabling feature access to users\\n\\nthere are multiple ways to enable access to users, in between them:\\n\\n### Big Bang Releases\\n\\nThis is the plug and pray solution. Pushing the code and expecting it to work as it\'s enabled for all users. This is a very dangerous strategy as your blast radius is all your users.\\n\\n### Canary Releases\\n\\nThis is a practice that comes from the mining industry, The idea was the next one:\\n\\n> If a canary is in the same place where humans are inside the mine, when there is a problem with the breathable air it will be the first one to perish.\\n\\nIf we translate this to software, the idea is to have deployed the changes only to one or a few servers. With this, we can monitor this canary instances and act if any issue happens, we reduce the blast radius of issues to only the users who go through that server.\\n\\n![](https://www.alvarolorente.dev/img/blog/canary.jpeg)\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Change Failure Rate**\\n\\nThis approach provides us a way to reduce the blast radius from a big bang release. Nevertheless, it does not help us to prevent or act faster upon a bug in our code. \\n\\n### Feature Flag Releases\\n\\nTo improve upon the canary release strategy, we can move towards feature flags.\\n\\nFeature Flags are hiding our code behind a \'flag\' this can help decide if the code is enabled or disabled, as in the next image.\\n\\n![](https://www.alvarolorente.dev/img/blog/toggles.jpeg)\\n\\nThere are a multitude of services, libraries & SDKs that allow you to create flags in your code. They help by:\\n\\n*  Decouple activation of features from the release pipeline.\\n* Solving incidents in a matter of seconds.\\n* Do a controlled rollout. For example:\\n  * Enable only for team.\\n  * Enable for X% of the traffic.\\n  * Enable for users in a specific country.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**"},{"id":"/2022/10/10/delivery-acceleration-environments","metadata":{"permalink":"/blog/2022/10/10/delivery-acceleration-environments","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-10-10-delivery-acceleration-environments.md","source":"@site/blog/2022-10-10-delivery-acceleration-environments.md","title":"Delivery Acceleration: Deployment Environments","description":"Where should we run our services? are there hidden consts on certain practices?","date":"2022-10-10T00:00:00.000Z","formattedDate":"October 10, 2022","tags":[{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"}],"readingTime":2.76,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Deployment Environments","draft":false,"description":"Where should we run our services? are there hidden consts on certain practices?","authors":"alvarolorentedev","tags":["softwaredevelopment","programming","productivity","devops"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/09/10/delivery-acceleration-environments","cover_image":"https://www.alvarolorente.dev/img/blog/cicd.png","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"Delivery Acceleration: Enabling Features","permalink":"/blog/2022/10/10/delivery-acceleration-enabling-features"},"nextItem":{"title":"Delivery Acceleration: Observability","permalink":"/blog/2022/09/27/delivery-acceleration-observability"}},"content":"Our services need to run somewhere, so our users can access it. It\'s a very common practices to have multiple environments like dev, staging, and prod. Is this actually a good practices?\\n\\n## CI vs. CD vs. CD\\n\\nwhen people talk about continuous integration, delivery and deployment, they normally talk about it as a whole.\\n\\nNevertheless, let\'s reflect why these are 3 different practices. As they are steps in a journey, you can do one and not the next one.\\n\\n![](https://www.alvarolorente.dev/img/blog/cicd.png)\\n\\n* Continuous integration: allows making reproducible states of the code in multiple places.\\n* Continuous Delivery: Now that it\'s reproducible, it needs to be marked as potentially deployable and provide the ability to deploy it.\\n* Continuous Deployment: Delivers the code to your clients and not only to your team as you commit.\\n\\n## The trap of Multiple Environments\\n\\nAs you can imagine, with the previous definition of CI/CD, having multiple environments will never allow you to achieve Continuous Deployment.\\n\\n![](https://www.alvarolorente.dev/img/blog/environments.jpeg)\\n\\nThe intent of having multiple environments is to reduce change failure rate, are we actually achieving this with the practices? The answer is normally not due to:\\n\\n* A non-production environment will never be the same as a production.\\n  * Different data\\n  * Different performance\\n  * Different security practices\\n  * Etc\u2026\\n* Stress and ownership of moving things to production\\n* Accumulation of code in lower environments (meaning more bugs).\\n* Longer feedback loop.\\n* Continuous misalignment due to development cycles in between different teams.\\n\\nAs you can see, this makes a fake sense of safety, but it does not affect positively the change failure rate.\\n\\nThis affects mostly negatively, most of DORA 4 metrics:\\n\\n* \u274c **Deployment frequency**\\n* \u274c **Lead Time for change**\\n* \u274c **Mean Time To Recovery**\\n* \u3030\ufe0f **Change Failure Rate**\\n\\n## Achieving Continuous Deployment, Only prod, is it so crazy?\\n\\nHow can a team Continuous deployment? The answer tends to be simple, making every commit go to production and testing in it.  \\nBe aware this does not mean to have our users experience possible bugs or see test data, as we can hide functionalities behind toggles, headers, or parameters that allow access to only the development team. As we will see in future installments of this series.\\n\\nAn example strategy is the one in the next diagram.\\n\\n![](https://www.alvarolorente.dev/img/blog/single_environment.jpeg)\\n\\nThis allows us to keep only one environment that discriminates in between test and non-test data that can be clean periodically, while it provides the real environment with the real behavior. With this, we solved:\\n\\n* Real performance & behavior.\\n* Continuous alignment with other teams.\\n* Smaller feedback cycles.\\n* Control of rollout.\\n* Smaller $ cost.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u3030\ufe0f **Change Failure Rate**\\n\\n## Conclusion\\n\\nThere is no one size fit all, but modern practices tend to go towards simplicity and fast feedback loops. There are many practices involved on this simplicity that enables us to feel comfortable with only production environments. We will talk about them on this series.   \\n  \\n## Related Videos\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/UBtiBA5QTEg\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/9C0efJkT0Hg\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>"},{"id":"/2022/09/27/delivery-acceleration-observability","metadata":{"permalink":"/blog/2022/09/27/delivery-acceleration-observability","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-27-delivery-acceleration-observability.md","source":"@site/blog/2022-09-27-delivery-acceleration-observability.md","title":"Delivery Acceleration: Observability","description":"When runing services in production the most important thing is to understand the health of it","date":"2022-09-27T00:00:00.000Z","formattedDate":"September 27, 2022","tags":[{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":2.565,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Observability","draft":false,"description":"When runing services in production the most important thing is to understand the health of it","authors":"alvarolorentedev","tags":["softwaredevelopment","programming","devops","productivity"],"canonical_url":"https://www.alvarolorente.dev/blog/2022/09/27/delivery-acceleration-observability","cover_image":"https://www.alvarolorente.dev/img/blog/no_alarms.png","series":"Accelerate Continious Integration & Delivery Practices"},"prevItem":{"title":"Delivery Acceleration: Deployment Environments","permalink":"/blog/2022/10/10/delivery-acceleration-environments"},"nextItem":{"title":"Delivery Acceleration: DevOps Mentality & Practices","permalink":"/blog/2022/09/25/delivery-acceleration-devops-attitudes"}},"content":"When we talk about observability, we talk about:\\n\\n> Capability of developers to understand the health and status of their application.\\n\\n![](https://www.alvarolorente.dev/img/blog/no_alarms.png)\\n\\nWe don\'t want users or clients to be the ones noticing something is wrong. For this, there are multiple tools that fall under the observability category.\\n\\n## Tools\\n\\n### Alarms\\n\\nThis is the first line of defense against issues, the intent is to get notified if any potential issue arises.  \\nThe intent of this is to provide a notification if any parameter of our application is out of range (ex. to many 5xx).\\n\\nThis allows us to use our mental bandwidth to focus in creating value and not continuously check if the parameters are in range.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Mean Time To Recovery**\\n\\n### Metrics\\n\\nAs the name says, this is a set of measurements we track from our code, it allows us to understand the health of individual parts of our system.\\n\\nThis metrics are shown in dashboards that allow us to visually understand what is happening.  We can divide metrics dashboards in 2 types:\\n\\n* Status: It will give us a really fast overview of the health of the system.\\n* Details: It will not tell us what is wrong, but will provide more detailed information to dig deeper into a specific area.\\n\\nIt\'s important to not mix this 2 together, as they have different purposes. Like with alarms, it helps focus our mental bandwidth in the correct place.\\n\\n![](https://www.alvarolorente.dev/img/blog/dashboards.jpeg)\\n\\nAs you see in the previous image, the left represents a detail dashboard that makes it difficult to know on a single view if there is an issue. For this, as in the image on the right,  we have a status dashboard that in a single glance we can spot where to look next.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Mean Time To Recovery**\\n\\n### Logs\\n\\nThis is the lower level you want to go. It should tell you where in the code is your issue, so you can go and fix it.\\n\\nWhen thinking about logging, it is significant not log everything. Due to the added noise that this can bring.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Mean Time To Recovery**\\n\\n## Example\\n\\nlet\'s get practical on how would this work.\\n\\n![](https://www.alvarolorente.dev/img/blog/observability-drawio.png)\\n\\n* Implement your service\\n* Create metrics and send them to your metrics system (ex. [Datadog](https://www.datadoghq.com/), [Grafana](https://grafana.com/))\\n* Create logs and send them to your logging system (ex. [Datadog](https://www.datadoghq.com/), [Kibana](https://www.elastic.co/kibana/), [CloudWatch](https://aws.amazon.com/cloudwatch/)).\\n* Create dashboards:\\n  * Single Status dashboard. Use only simple boxes with green and red backgrounds that represent in one view the health of your system & subsystems.\\n  * Multiple Detail dashboards. Create a dashboard for each subsystem with as much data as necessary to understand where the issue is, so you can later pinpoint the root cause in your logs.\\n* Create alarms based on the status dashboard boxes.\\n* Connect your notification system (ex. [Opsgenie](https://www.atlassian.com/software/opsgenie), [PagerDuty](https://www.pagerduty.com/), [Slack ](https://slack.com/)channel) to the created alarms, so you get push notifications as something goes wrong."},{"id":"/2022/09/25/delivery-acceleration-devops-attitudes","metadata":{"permalink":"/blog/2022/09/25/delivery-acceleration-devops-attitudes","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-25-delivery-acceleration-devops-attitudes.md","source":"@site/blog/2022-09-25-delivery-acceleration-devops-attitudes.md","title":"Delivery Acceleration: DevOps Mentality & Practices","description":"When we run services in production, mentality can make or break our intent to move towards real CI/CD","date":"2022-09-25T00:00:00.000Z","formattedDate":"September 25, 2022","tags":[{"label":"productivity","permalink":"/blog/tags/productivity"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"programming","permalink":"/blog/tags/programming"}],"readingTime":4,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: DevOps Mentality & Practices","draft":false,"description":"When we run services in production, mentality can make or break our intent to move towards real CI/CD","authors":"alvarolorentedev","tags":["productivity","devops","softwaredevelopment","programming"],"series":"Accelerate Continious Integration & Delivery Practices","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/25/delivery-acceleration-devops-attitudes","cover_image":"https://www.alvarolorente.dev/img/blog/run_it.jpg"},"prevItem":{"title":"Delivery Acceleration: Observability","permalink":"/blog/2022/09/27/delivery-acceleration-observability"},"nextItem":{"title":"Delivery Acceleration: Intro","permalink":"/blog/2022/09/24/devilery-acceleration-intro"}},"content":"When we start our journey towards continuous integration & delivery, the first thing to take in count is the mentality. There are a few of them that will make or break our intent. Let\'s see the most important and also some practices.\\n\\n## Mentality\\n\\n### You build it, you run it\\n\\n![](https://www.alvarolorente.dev/img/blog/run_it.jpg)\\n\\n> create a DevOps culture, not a Devs vs Ops\\n\\nThis mentality is the idea that the same people who develop the software re in charge to maintain it in good health by observing it.\\n\\nFor many years, this was not the case. Operations & development were handled by different teams. This caused a dystopian situation where each group had a different goal:\\n\\n* **Devs**: deliver as fast as possible. By pushing code to production without observing the side effects of it.\\n* **Ops**: keep system stability.\\n\\nWith the \'you build it, you run it\' mentality, devs focus on their service or work, while Ops becomes a product team that focus on providing the correct tooling for Developers.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n### Embrace Ownership in Failure Culture\\n\\n![](https://www.alvarolorente.dev/img/blog/1_w7sfzhdxzldtdwt7wfiabg.png)\\n\\n> the problem is not breaking things, is the inability to recover from it\\n\\nNormally, developers feel they need a safety net to feel comfortable to introduce changes to production, this tends to translate in delegating the ownership to others trough peer review or other validation step.  \\nThis lack of ownership have massive effects on the capacity to recover and the gates that code needs to go through, affecting the feedback cycle.\\n\\nTo improve this failure culture is necessary to promote this behavior, having no blame reduces the amount of stress people go through. \\n\\n> If something fails is not an issue of the individual but of the process itself.\\n\\nImagine that every commit goes to production, changes will be so small that fixing or rolling back can be done in minutes or seconds. At the same time, developers will be able to create the correct tooling to feel more comfortable with this practice.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n### Be a Boy Scout\\n\\n![](https://www.alvarolorente.dev/img/blog/scout.jpeg)\\n\\n> Don\u2019t continue the same path if you think something can be done better\\n\\nAs individuals, need to bring change to our products. If we see any new practice, tool, services\u2026 that can support the work of the team, bring it forward. Don\'t shy away because the team is currently doing it.\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n### Learn & Adapt\\n\\n![](https://www.alvarolorente.dev/img/blog/learn-64058_960_720-3730821950.jpeg)\\n\\nNot everything is solved in the same way, don\'t follow:\\n\\n> If your only tool is a hammer then every problem looks like a nail\\n\\nFor this, learn and take your time for it. When you have a new problem, as it\'s possible, you don\'t have the correct tool in your toolbox. \\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n## Practices\\n\\n### Firefighter Role\\n\\n![](https://www.alvarolorente.dev/img/blog/firefighter.jpeg)\\n\\nThe firefighter role is a rotating role inside the team. They are responsible for being the first responder to incidents and helping solve them.  \\nAt the same time, to make sure this person does not suffer from cognitive load due to context switching, this person is not involved on the normal pair rotation and development tasks.  \\nIn exchange, they focus during the week in improving the specific tooling of the project (ex. DB migration tooling).\\n\\nThis affect the next DORA 4 metrics:\\n\\n* \u2714\ufe0f **Deployment frequency**\\n* \u2714\ufe0f **Lead Time for change**\\n* \u2714\ufe0f **Mean Time To Recovery**\\n* \u2714\ufe0f **Change Failure Rate**\\n\\n### On Call Rotation\\n\\n![](https://www.alvarolorente.dev/img/blog/on-call.jpeg)\\n\\nAs the development team is also in charge of running the service, some of them will require after working hour support. On call is just this, the disposition of team members to take care of their services around the clock.  \\nThis tends to sound bad, but there are ways to not make this suck. I can\'t express it better than [Chris Ford](https://twitter.com/ctford) has already done in this [page](https://ctford.github.io/oncall-charter/).\\n\\nThis affect the next DORA 4 metric:\\n\\n* \u2714\ufe0f **Mean Time To Recovery**\\n\\n## Conclusion\\n\\nThese are the starting point to feel comfortable running things in production without the concern that any issue is a catastrophic thing. Failing is not an issue, the important part is to be able to recover as soon as possible from any problem that arises."},{"id":"/2022/09/24/devilery-acceleration-intro","metadata":{"permalink":"/blog/2022/09/24/devilery-acceleration-intro","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-24-devilery-acceleration-intro.md","source":"@site/blog/2022-09-24-devilery-acceleration-intro.md","title":"Delivery Acceleration: Intro","description":"Why do teams perform differently and what are the tools & practices some team use to differentiate themselves","date":"2022-09-24T00:00:00.000Z","formattedDate":"September 24, 2022","tags":[{"label":"programming","permalink":"/blog/tags/programming"},{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":2.635,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Delivery Acceleration: Intro","draft":false,"description":"Why do teams perform differently and what are the tools & practices some team use to differentiate themselves","authors":"alvarolorentedev","tags":["programming","softwaredevelopment","devops","productivity"],"series":"Accelerate Continious Integration & Delivery Practices","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/24/devilery-acceleration-intro","cover_image":"https://www.alvarolorente.dev/img/blog/key_metrics.png"},"prevItem":{"title":"Delivery Acceleration: DevOps Mentality & Practices","permalink":"/blog/2022/09/25/delivery-acceleration-devops-attitudes"},"nextItem":{"title":"The future of teams: Crossfuctional & T-Shaped","permalink":"/blog/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped"}},"content":"This is a series I am really looking forward to writing. I have been doing this presentation for the last 3 years in multiple places.\\n\\n## Am I Crazy?\\n\\nThe answer is no, most of the thing you will see on this series comes from practices derived from Extreme Programming, that show how to build quality and value into products. So bear with me for some time.\\n\\n## Motivation\\n\\nA few years ago, I read the book Accelerate that is derived of the analysis of the state of DevOps report that happens in a regular basis.\\n\\n![](https://www.alvarolorente.dev/img/blog/accelerate.jpg)\\n\\nThe book does not speak only about technology but also speaks about communication, organization, etc. And how this affects effectiveness in teams & companies. I recommend reading the entire book.\\n\\n### 4 key metrics\\n\\nNevertheless, most of the people resume this book (erroneously) in the next table.\\n\\n![](https://www.alvarolorente.dev/img/blog/key_metrics.png)\\n\\nIt does a comparison on a what are called the 4 key metrics, and provide a classification of performance (teams & companies, since 2017 this classification has evolved).\\n\\nWhat does these 4 key metrics  mean:\\n\\n* **Deployment frequency**: is how often does the team deploy to **production**.\\n* **Lead Time for change**: is how much time does a story take to get to **production**.\\n* **Mean Time To Recovery**: is how fast can we solve a production issues.\\n* **Change Failure Rate**: is how frequently do we break things in production.\\n\\nAll this metrics is helping teams understand their feedback cycle and stability. In the case of the team, I currently work with:\\n\\n* **Deployment Frequency**: once per commit to trunk (while doing trunk-based development) what ends up translating to a few times per day.\\n* **Lead Time for change:** below 1h. We can activate a feature as soon as the code is deployed by the CI/CD using feature flags.\\n* **Mean Time To Recovery**: In minutes. We can activate and deactivate feature flags on the fly if any of the code breaks, and we have a good observability and alarming, so we are the first one to notice.\\n* **Change Failure Rate**: We don\'t optimize for this, as MTTR is more important for us (I will explain why later). Nevertheless, we currently only had 2 minor production issues in the last year, so we are way below 1%. Our CI/CD validations help a lot on this.\\n\\nThe intent of this series is to share the Extreme programming practices that we use to achieve being on the [elite classification of DORA 4](https://www.devops-research.com/quickcheck.html).\\n\\n## Note of Caution\\n\\nAs this twitter thread shows, this is not one size fits all, the challenges of a team are not the challenges of another one.  There is no silver bullet or common root cause to the issue, and each team should use this metrics to track improvements in an unbiased way. For this, the 4 key metrics do not mean anything at company level and should not be used to compare teams.\\n\\n![](https://www.alvarolorente.dev/img/blog/metrics_caution.png)\\n\\n## Next\\n\\nIn the following installments, I will walk backwards from having something in production and how to keep it running in a healthy manner stress-free up to coding techniques that enable Trunk-based development."},{"id":"/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped","metadata":{"permalink":"/blog/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-13-the-future-of-teams-crossfunctional-and-t-shaped.md","source":"@site/blog/2022-09-13-the-future-of-teams-crossfunctional-and-t-shaped.md","title":"The future of teams: Crossfuctional & T-Shaped","description":"Team structure matters, how can we enable teams to be more productive & independent","date":"2022-09-13T00:00:00.000Z","formattedDate":"September 13, 2022","tags":[{"label":"softwaredevelopment","permalink":"/blog/tags/softwaredevelopment"},{"label":"architecture","permalink":"/blog/tags/architecture"},{"label":"technology","permalink":"/blog/tags/technology"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":3.295,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"The future of teams: Crossfuctional & T-Shaped","draft":false,"description":"Team structure matters, how can we enable teams to be more productive & independent","authors":"alvarolorentedev","tags":["softwaredevelopment","architecture","technology","productivity"],"series":"","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped","cover_image":"https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-tshapped-crossfunctional-drawio.png"},"prevItem":{"title":"Delivery Acceleration: Intro","permalink":"/blog/2022/09/24/devilery-acceleration-intro"},"nextItem":{"title":"Event Storming to split Monolith into Microservices","permalink":"/blog/2022/09/09/event-storming-to-split-the-monolith-into-microservices"}},"content":"In software development, over the last years we always talk about on cross-functional teams, as a good split of responsibilities to provide autonomy in teams. What does that mean? Why is this so? And what does it look like?\\n\\n## History & types of teams\\n\\nIt\'s probably easier to see the evolution of team culture as a chronology, as it has been an evolving thing.\\n\\n### Specialization-Based Teams\\n\\nTraditionally, when we had only big monolithic applications, teams have been split by their expertise. This meaning all the quality assurance, Frontend, Backend roles will be in a team with their expertise-based peers. This might look like the next image:\\n\\n![](https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-drawio-1.png)\\n\\nWhat are the pros and cons of this model:\\n\\n* \u2714\ufe0f Improve depth of knowledge from peers.\\n* \u2714\ufe0f No dependency on individuals, the Bus factor tends to be bigger than 1.\\n* \u274c Bottlenecks in between teams, due to different priorities and timelines.\\n* \u274c Lack of breath of knowledge.\\n* \u274c Low domain expertise due to coverage of all domains.\\n* \u274c Continuous context switch due to support of multiple domains.\\n* \u274c Design issues due [Conway\'s Law](https://en.wikipedia.org/wiki/Conway%27s_law) relation in between communication patterns and architecture.\\n* \u274c Eventually, teams grow too big and have management issues due to [Dunbar\'s Number](https://en.wikipedia.org/wiki/Dunbar%27s_number \\"dunbars\\") on human relationships.\\n\\n### Specialized Cross-functional Teams\\n\\nDue to the shortcomings of the previous model and the raise of microservices and some concepts from DDD,  the intention of splitting teams was to make sure a specific domain and their solutions were cover by the same people.  \\nThis allows more independence and control over what is required to fulfill the needs of that domain. \\n\\nThis might look like the next image:\\n\\n![](https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-expertise-crossfunctional-teams-drawio.png)\\n\\nWhat are the pros and cons of this model:\\n\\n* \u2714\ufe0f Common domain expertise, allowing faster and informed decisions.\\n* \u2714\ufe0f Single domain will not require a lot of context switch.\\n* \u2714\ufe0f Helps design on microservices environments due to [Conway\'s Law](https://en.wikipedia.org/wiki/Conway%27s_law).\\n* \u2714\ufe0f Teams tend to stay small and follow [Dunbar\'s Number](https://en.wikipedia.org/wiki/Dunbar%27s_number \\"dunbars\\") on human relationships (ex. Amazon 2 large pizza team size).\\n* \u274c Bottlenecks in between team members, due to process dependency.\\n* \u274c Lack of depth of knowledge from peers.\\n* \u274c Lack of breath of knowledge being shared.\\n* \u274c Bus factor tends to be small.\\n\\n### T-shaped Cross-Functional Teams\\n\\nThe previous organization helped many teams to be able to focus and do the right thing in the right moment.\\n\\nNevertheless, it lacked the focus on collaboration and support inside the team, as each person has their small set of responsibilities can easily cause bottlenecks inside a single team.\\n\\nT-shaped development tries to solve this by making sure all team members can work in every part of the solution (represented by the horizontal part of the \'T\'). Nevertheless, each member can have his own preferred field of expertise  (represented by the vertical part of the \'T\').   \\nThis has been enabled by the lower complexity on the tooling and entry-level learning curve to most of the expertises.\\n\\n![](https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-tshapped-crossfunctional-drawio.png)\\n\\nWhat are the pros and cons of this model:\\n\\n* \u2714\ufe0f No bottlenecks as all team members can chip in to the different needs.\\n* \u2714\ufe0f Common domain expertise, allowing faster and informed decisions.\\n* \u2714\ufe0f Single domain will not require a lot of context switch.\\n* \u2714\ufe0f Helps design on microservices environments due to [Conway\'s Law](https://en.wikipedia.org/wiki/Conway%27s_law).\\n* \u2714\ufe0f Teams tend to stay small and follow [Dunbar\'s Number](https://en.wikipedia.org/wiki/Dunbar%27s_number \\"dunbars\\") on human relationships (ex. Amazon 2 large pizza team size).\\n* \u2714\ufe0f Shared tasks improve a team member depth of knowledge.\\n* \u2714\ufe0f Shared tasks improve  a team member breath of knowledge.\\n* \u2714\ufe0f As knowledge is spread inside the team, the Bus Factor is not an issue.\\n\\n## Conclusion\\n\\nTime has improved things for all teams, and we are probably not at the end of the transformation of teams. Nevertheless, it is good for companies and individuals to adapt to changes in the environment."},{"id":"/2022/09/09/event-storming-to-split-the-monolith-into-microservices","metadata":{"permalink":"/blog/2022/09/09/event-storming-to-split-the-monolith-into-microservices","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-09-event-storming-to-split-the-monolith-into-microservices.md","source":"@site/blog/2022-09-09-event-storming-to-split-the-monolith-into-microservices.md","title":"Event Storming to split Monolith into Microservices","description":"how can we define what is the scope of a service, event storming is here to help us","date":"2022-09-09T00:00:00.000Z","formattedDate":"September 9, 2022","tags":[{"label":"api","permalink":"/blog/tags/api"},{"label":"microservices","permalink":"/blog/tags/microservices"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"architecture","permalink":"/blog/tags/architecture"}],"readingTime":4.83,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Event Storming to split Monolith into Microservices","draft":false,"description":"how can we define what is the scope of a service, event storming is here to help us","authors":"alvarolorentedev","tags":["api","microservices","programming","architecture"],"series":"The journey from the monolith to microservices","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/09/event-storming-to-split-the-monolith-into-microservices","cover_image":"https://www.alvarolorente.dev/img/blog/event-storming.png"},"prevItem":{"title":"The future of teams: Crossfuctional & T-Shaped","permalink":"/blog/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped"},"nextItem":{"title":"Patterns to avoiding microlithic microservices","permalink":"/blog/2022/09/05/patterns-to-avoiding-microlithic-microservices"}},"content":"On our previous installments, we discussed the smells that can happen when splitting microservices, and the strategies that exist to make them as independent as possible. But how do we define boundaries? How do we define the process that our microservice is in charge off?\\n\\n## Event Storming\\n\\nEvent storming is a technique that is part of [DDD](https://en.wikipedia.org/wiki/Domain-driven_design). But, what is Event storming?, the definition on [Wikipedia](https://en.wikipedia.org/wiki/Event_storming \\"wikipedia\\") is:\\n\\n> A workshop-based method to quickly find out what is happening in the domain of a software program. The business process is \\"stormed out\\" as a series of domain events.\\n\\nThis process is run with stickies in a physical or digital board during a session, and requires the \'experts\' on the process to be present to provide the context what/whom/how. The outcome is an understanding of the **business process**, not the technical one. To be able to separate them into different steps with clear responsibilities.\\n\\n### Step-By-Step Guide\\n\\nlet\'s do an example of how a company sets up our internet connection\\n\\n#### Prepare a board and the people for the session\\n\\nEvent storming requires people to share a common view and brainstorm and discuss on it. This process takes to count time as a dimension. And has multiple types of stickies that can be used.  \\nYou can see an example board on the next image:\\n\\n![](https://www.alvarolorente.dev/img/blog/event-storming.png)\\n\\nRegarding the Stickies, their color represent a specific meaning\\\\[1\\\\]:\\n\\n* **Events (orange):** Represent the factual events and anything that is relevant to a domain expert.\\n* **Commands (blue):** These are requests to do something. They can originate from a user or system or by another event.\\n* **System (pink):** These represent systems involved in the domain. They may issue commands or receive commands along with triggering events.\\n* **User (yellow):** These are human users involved in the process. They may be a single person or a department/team.\\n* **Aggregate (tan):** This is the first level of categorization and can be thought of as the \u201cthing\u201d that a group of events operates on.\\n* **Read Model (green):** This represents data that may be critical for a user or system to decide.\\n* **Policy (gray):** These represent standards or rules that may need to be executed, such as rules for a compliance policy.\\n\\n#### Define the **Events** of your system\\n\\nEvents are the most important information of our board. They represent facts regarding the process and helps encapsulate the knowledge of the \'experts\'.  \\nAs we mention before, time is a significant dimension. A process always happens in a period of time. Starting by organizing this \'things\' that happen in a timeline is a good way to start.  \\n![](https://www.alvarolorente.dev/img/blog/event-storming-map-events-drawio.png)\\n\\nIn our example, you can see on the previous image we go from checking coverage, to creating a user, to creating a contract and connecting our user to the network.\\n\\n#### Identify the **Systems** involved (Optional)\\n\\nThe intent of this step is to identify the existing systems and their interdependency. When we discuss systems, they can be internal or external.\\n\\n![](https://www.alvarolorente.dev/img/blog/event-storming-map-systems-drawio.png)\\n\\nIn our example, all starts with the website, but soon enough it becomes apparent most of the process is taken care by the monolith.\\n\\nThis step is optional in the case you have a greenfield. Nevertheless, I highly recommend it if you are splitting a monolith.\\n\\n#### Add the **Actors**\\n\\nThese are real people who are part of the process, they tend to be the starting point of a chain of events, or even on a manual process we are trying to automate the executors of the individual step.\\n\\n![](https://www.alvarolorente.dev/img/blog/event-storming-map-actors-drawio.png)  \\nIn our case, the user is the one starting the process, but there needs to be a technician doing the last steps manually.\\n\\n#### Connect the dots with **Commands**\\n\\nNow we are left with events that are done by someone and take effect in parts of our system. But we are missing the cause and effect that made this look this way.\\n\\nCommands allow exactly this, is a specific action or decision that will push our system into a certain direction.\\n\\n![](https://www.alvarolorente.dev/img/blog/event-storming-map-commands-drawio.png)\\n\\nCommands can be positive or negative actions, causing bifurcation and showing different cases that our system needs to cope with.\\n\\n#### Define **Bounded Context**\\n\\nnow we are left to define where each of the sub-process that conform our system starts and ends. This is done by grouping the stickies with an enclosing and giving a noun + verb to it, as it\'s a sub-process and it evokes action.  \\n![](https://www.alvarolorente.dev/img/blog/event-storming-bounded-contexts-drawio.png)\\n\\nNow you have a set of split actions that can become their microservices and provide part of the process independently.\\n\\n#### Create **Capabilities Matrix** (Optional)\\n\\nNow, with the bounded context, we can start defining the capabilities of our services. This is straightforward to express in a matrix.\\n\\n| Context | Capabilities |\\n| --- | --- |\\n| Network Management | Check coverage <br/> Enable Network <br/> 3rd party Hardware management integration |\\n| User Management | Create User <br/> User Email Verification |\\n| contract Management | Create Contract <br/> User Email Verification <br/> 3rd party digital signature integration |\\n\\n#### Devise your **Goal Architecture** (Optional)\\n\\nKnowing our current architecture, it\'s good to think where we want to go.   \\nThis is not only a technical challenge, but an organizational challenge due to [Conway\'s law](https://en.wikipedia.org/wiki/Conway%27s_law). If we would like to be successful in splitting a monolith our communication, meaning the teams structure involved, need to resemble this target state.\\n\\n![](https://www.alvarolorente.dev/img/blog/event-storming-goal-architecture-drawio.png)\\n\\n#### Define a **plan** on how to split the Monolith (Optional)\\n\\nA change so big as the one shown on the previous image can be overwhelming for an organization and create a paralysis and doubts. It\'s always good to split the problem in steps to understand progress and be always on a better state. This will improve morale.  \\n![](https://www.alvarolorente.dev/img/blog/event-storming-plan-architecture-drawio.png)\\n\\n###### \\\\[1\\\\] [https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/](https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/ \\"https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/\\")"},{"id":"/2022/09/05/patterns-to-avoiding-microlithic-microservices","metadata":{"permalink":"/blog/2022/09/05/patterns-to-avoiding-microlithic-microservices","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-05-patterns-to-avoiding-microlithic-microservices.md","source":"@site/blog/2022-09-05-patterns-to-avoiding-microlithic-microservices.md","title":"Patterns to avoiding microlithic microservices","description":"how can we decouple services to avoid some common pitfalls","date":"2022-09-05T00:00:00.000Z","formattedDate":"September 5, 2022","tags":[{"label":"api","permalink":"/blog/tags/api"},{"label":"microservices","permalink":"/blog/tags/microservices"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"architecture","permalink":"/blog/tags/architecture"}],"readingTime":2.24,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Patterns to avoiding microlithic microservices","draft":false,"description":"how can we decouple services to avoid some common pitfalls","authors":"alvarolorentedev","tags":["api","microservices","programming","architecture"],"series":"The journey from the monolith to microservices","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/05/patterns-to-avoiding-microlithic-microservices","cover_image":"https://www.alvarolorente.dev/img/blog/microliths.jpg"},"prevItem":{"title":"Event Storming to split Monolith into Microservices","permalink":"/blog/2022/09/09/event-storming-to-split-the-monolith-into-microservices"},"nextItem":{"title":"Common mistakes when splitting the monolith","permalink":"/blog/2022/09/04/common-mistakes-when-splitting-the-monolith"}},"content":"On the previous installment of this series, we discussed the pitfalls that could happen when we split a monolith into microservices. In specific, we talked about creating what are called microliths.  \\n![](https://www.alvarolorente.dev/img/blog/microliths.jpg)\\n\\nGiven that you have followed the recommendations on designing your domains correctly. Today we are going to elaborate on patterns to remove that synchronous communication in between \'microservices\'. This will help our services to become more resilient.\\n\\n## The Patterns\\n\\n### Circuit Breakers\\n\\nThe most simple solution we can go for is called **circuit breakers**. As it implies, is just a piece of code that upon multiple request failed to a downstream service will fail silently and allow service to resume their normal behavior.\\n\\n![](https://www.alvarolorente.dev/img/blog/circuitbreakerdesignpattern.png)\\n\\nWhat are we solving and what are we letting unsolved:\\n\\n* \u2714\ufe0f We don\u2019t fail continuously if some other service fails.\\n* \u274c We silently don\u2019t finish the entire process requested.\\n* \u274c We require all chain of dependencies to be called.\\n* \u274c We force other services to scale to our needs.\\n* \u274c Data is mutable, so errors will be propagated and not solvable.\\n\\n### Outbox Pattern\\n\\nThe next level in solving our microlithic issue is to decouple our services using Pub/Sub to exchange models in between services.  \\nOur service will consume and store the necessary information to run the process locally, and will broadcast the outcome models. This will mean there will always be a strong consistency in the outbox, and eventual consistency on the service database (if it exists).\\n\\n![](https://www.alvarolorente.dev/img/blog/reactivemicroliths.jpg)\\n\\nWhat are we solving and what are we letting unsolved:\\n\\n* \u2714\ufe0f We don\u2019t fail continuously if some other service fails.\\n* \u2714\ufe0f We always finish our process and promise the rest will be done.\\n* \u2714\ufe0f We just require our service to do what we promise.\\n* \u2714\ufe0f Fast services will be fast, and slow services can go slow.\\n* \u274c Data is mutable, so errors will be propagated and not solvable.\\n\\n### Event Sourcing\\n\\nThe last level is **event sourcing**. The idea is to use the events that generated a specific state and not use the calculated state that a service can provide us.\\n\\nThis allows a higher resilience due to the immutability of the data. In this case, calculation issues of the past can be solved, as we can reprocess the entire set of events that took us to a certain state.  \\n![](https://www.alvarolorente.dev/img/blog/microsystems.jpg)\\n\\n## Conclusion and follow-ups\\n\\nThese are some of the patterns that can make our services more independent and resilient. Nevertheless, each of them has a different complexity, meaning it also affects the complexity of our code. For this, we need to make sure we use the correct tool for the job."},{"id":"/2022/09/04/common-mistakes-when-splitting-the-monolith","metadata":{"permalink":"/blog/2022/09/04/common-mistakes-when-splitting-the-monolith","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-09-04-common-mistakes-when-splitting-the-monolith.md","source":"@site/blog/2022-09-04-common-mistakes-when-splitting-the-monolith.md","title":"Common mistakes when splitting the monolith","description":"A set of the most common mistakes when splitting your monolith into microservices","date":"2022-09-04T00:00:00.000Z","formattedDate":"September 4, 2022","tags":[{"label":"api","permalink":"/blog/tags/api"},{"label":"microservices","permalink":"/blog/tags/microservices"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"architecture","permalink":"/blog/tags/architecture"}],"readingTime":3.63,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Common mistakes when splitting the monolith","draft":false,"description":"A set of the most common mistakes when splitting your monolith into microservices","authors":"alvarolorentedev","tags":["api","microservices","programming","architecture"],"series":"The journey from the monolith to microservices","canonical_url":"https://www.alvarolorente.dev/blog/2022/09/04/common-mistakes-when-splitting-the-monolith","cover_image":"https://user-images.githubusercontent.com/3071208/188307797-7c30c8cb-bff7-4755-822b-7cf469cba372.JPG"},"prevItem":{"title":"Patterns to avoiding microlithic microservices","permalink":"/blog/2022/09/05/patterns-to-avoiding-microlithic-microservices"},"nextItem":{"title":"Automate Anything: Power Automate + Trello + IFTTT","permalink":"/blog/2022/08/24/power-automate-automating-social-media"}},"content":"## The Monolith\\n\\nWe have all at this point encounter the big service that jumpstarted the business. It\'s always good to find it or know it existed. It shows that there was an intent to not resolve every architectural problem before we even knew we had a business.\\n\\nNevertheless, it tends to outgrow itself and become more a pain than a solution. Some of these pains are:\\n\\n* We all work on the same code base, and conflicts and side effects start to happen.\\n* You need to release the entire solution, even if different teams have different cycles.\\n* There are code freezes to go through validation cycles.\\n* It scales as a whole, not only the portion that has an increase in traffic.\\n\\nDue to these pains, microservices were created. To give team/domain independence to create focused solutions on a business that has already been validated.\\n\\n![](https://www.alvarolorente.dev/img/blog/monolith.JPG)\\n\\n## The Microservices\\n\\nLet\'s start with a [definition of a microservice](https://aws.amazon.com/microservices/):\\n\\n> Microservices are an architectural and organizational approach to software development where software is composed of small independent services that communicate over well-defined APIs. These services are owned by small, self-contained teams.\\n\\n![microservices](https://user-images.githubusercontent.com/3071208/188307797-7c30c8cb-bff7-4755-822b-7cf469cba372.JPG)\\n\\nAll sounds like flowers and happiness when we talk about microservice. Nevertheless, does microservices solve the entire issue by itself?\\n\\nHave you encountered the next cases in a microservice architecture?\\n\\n* Before we release a new version, we need to sync deploys with another team.\\n* Our application was down, but is not our issue.\\n* Our service was working and scaling fine until the team X started using us.\\n* And more\u2026\\n\\nWhat is happening?\\n\\n### Microliths\\n\\nThe smells mention before are caused by what [Jonas Boner](http://jonasboner.com/) call Microliths, a great word for what is happening here.  \\nEven if we think this are \'independent\' services, synchronous communication can cause side effects we don\'t want:\\n\\n* There can be cascading events between your services.\\n* Your domain boundaries are not clear because you don\u2019t own the entire process.\\n* Slow services are forced to scale by faster services requirements.\\n* There is additional latency on the network calls.\\n\\n![](https://microlithalternatives.kanekotic.com/images/microliths.jpg)\\n\\n### What got lost in translation?\\n\\nHaving microliths comes from multiple misconceptions we have. Some of them are:\\n\\n#### Domains != Resources\\n\\nEvery so often, when we divide the monolith, we think about domains being resources. Due to how we normally have divided API\'s and DB\'s as we think about splitting what already exists and not about extracting the processes being achieved.\\n\\nWhen thinking about a microservice, we should think about what part of the process it is trying to solve, this will help us define good boundaries for our bounded context.\\n\\nWhen we think in a process, data is secondary. The process will require different pieces of existing data to fulfill their capabilities, and it is ok for it to own its copy of what is needed to fulfill his mission.\\n\\n#### Independence != Single Source\\n\\nA single source of data does not mean independence, as whenever your software requires complementary data, it will have to acquire it from somewhere else, what means a direct  dependency. This also affects boundaries as you must enter other team\'s domain.\\n\\nIf you strive for independence, copy the information you require for your process, even if it exists somewhere else.\\n\\n#### Fast != Synchronous\\n\\nHumans think that a direct response is always faster than sending out a message. While occasionally this is true, in microservices this could start a cascade of synchronous calls from one service to the next one, leaving our users in a timeout limbo.\\n\\nThink if really your system requires calling others directly or if you can message them to start their process.\\n\\n#### Resilience != Complete\\n\\nMaking sure the entire process has been completed, is normally confused by resiliency. Resiliency only refers to the capability to complete the process.  \\nIf we have well-defined contracts in between our pieces, we don\'t need to finish things synchronously, we can promise our users things will happen. And let our services do their work at their speed.\\n\\n## Conclusion and follow-ups\\n\\nAre we doomed?  \\n![](https://microlithalternatives.kanekotic.com/images/timetopanic.jpg)\\n\\nThe answer is no, we are not doomed! We can design our services with the correct division using some DDD tooling and also use the correct tools to decouple our microservices.  \\nLet\'s talk about this on the next chapters of this series."},{"id":"/2022/08/24/power-automate-automating-social-media","metadata":{"permalink":"/blog/2022/08/24/power-automate-automating-social-media","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-08-24-power-automate-automating-social-media.md","source":"@site/blog/2022-08-24-power-automate-automating-social-media.md","title":"Automate Anything: Power Automate + Trello + IFTTT","description":"how to automate tedius tasks with low code platforms","date":"2022-08-24T00:00:00.000Z","formattedDate":"August 24, 2022","tags":[{"label":"lowcode","permalink":"/blog/tags/lowcode"},{"label":"serverless","permalink":"/blog/tags/serverless"},{"label":"showdev","permalink":"/blog/tags/showdev"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":0.905,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Automate Anything: Power Automate + Trello + IFTTT","description":"how to automate tedius tasks with low code platforms","authors":"alvarolorentedev","tags":["lowcode","serverless","showdev","productivity"],"draft":false,"series":"","canonical_url":"https://www.alvarolorente.dev/blog/2022/08/24/power-automate-automating-social-media","cover_image":"https://github.com/alvarolorentedev/diagrams/blob/main/automate.drawio.png?raw=true"},"prevItem":{"title":"Common mistakes when splitting the monolith","permalink":"/blog/2022/09/04/common-mistakes-when-splitting-the-monolith"},"nextItem":{"title":"Commiting Like a Pro in NodeJs: The Message","permalink":"/blog/2022/08/09/commiting-like-pro-part-2"}},"content":"## Video\\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/KhrRVrCmtIw\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\" allowfullscreen></iframe>\\n\\n## Long Version\\n\\nI am currently starting some new open-source projects and I feel it is tedious to do some recurrent tasks. For example:\\n\\n* Promote this blog post in social media\\n* Announce a new release.\\n\\n[Power Automate](https://powerautomate.microsoft.com/en-us/) & [IFTTT](https://ifttt.com/) integrations allow just this, by a process of action and reaction.  \\n![](https://github.com/alvarolorentedev/diagrams/blob/main/automate.drawio.png?raw=true)\\n\\nThese systems provide:\\n\\n* **Triggers**: they are the starting point of what will happen after.\\n* **Actions**: they react to previous steps on the described flow.\\n\\nAn example of this is the next flow:\\n\\n![image](https://user-images.githubusercontent.com/3071208/186482177-7b6eb6c0-8632-4cd2-87c9-613788f553f8.png)\\n\\n![image](https://user-images.githubusercontent.com/3071208/186478753-1ebcf35c-eb1e-492a-b41c-ac67a749d7f5.png)\\n\\n* In IFTTT, if a new feed item exists in the RSS of my blog, it\'s posted as a card in a Trello board.\\n* The Power automate flow looks for new cards on that column.\\n* Retrieve the content\\n* post it into medium\\n* Post into Twitter and LinkedIn about the new blog post.\\n\\nAs you can see, automation is cool and can save us a lot of effort by increasing our productivity."},{"id":"/2022/08/09/commiting-like-pro-part-2","metadata":{"permalink":"/blog/2022/08/09/commiting-like-pro-part-2","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-08-09-commiting-like-pro-part-2.md","source":"@site/blog/2022-08-09-commiting-like-pro-part-2.md","title":"Commiting Like a Pro in NodeJs: The Message","description":"Using tools to create descriptive commits","date":"2022-08-09T00:00:00.000Z","formattedDate":"August 9, 2022","tags":[{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"git","permalink":"/blog/tags/git"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":4.365,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Commiting Like a Pro in NodeJs: The Message","description":"Using tools to create descriptive commits","authors":"alvarolorentedev","tags":["webdev","git","programming","productivity"],"draft":false,"series":"commiting Like a Pro in NodeJs","canonical_url":"https://www.alvarolorente.dev/blog/2022/08/09/commiting-like-pro-part-2","cover_image":"https://commitizen-tools.github.io/commitizen/images/demo.gif"},"prevItem":{"title":"Automate Anything: Power Automate + Trello + IFTTT","permalink":"/blog/2022/08/24/power-automate-automating-social-media"},"nextItem":{"title":"Commiting Like a Pro in NodeJs: The hooks","permalink":"/blog/2022/08/08/commiting-like-pro-part-1"}},"content":"## Why are messages important?\\n\\nCommit messages are part of the collaboration we do day to day inside a team, it works as a record of what has happened.\\n\\n> Every time you perform a commit, you\u2019re recording a snapshot of your project that you can revert to or compare to later.\\n>\\n> \u2014 Pro Git Book\\n\\nCommit messages are used in many ways, including:\\n\\n* To help a future reader quickly understand what changed and why it changed\\n* To assist with easily undoing specific changes\\n* To prepare change notes or bump versions for a release\\n\\nAll three of these use cases require a clean and consistent commit message style.\\n\\n## Easy Commit messages with Commitizen\\n\\nThis tool purpose is to define a standard way of committing rules and communicating it. The reasoning behind it is that it is easier to read, and enforces writing descriptive commits. Removing the ambiguity of options and the mental load of following the standard manually.\\n\\n[Commitizen](https://github.com/commitizen) will prompt you a series of questions that will generate the final commit message. It has multiple adapters, in my case I prefer to be controlling the questions, so I use [cz-format-extension](https://github.com/tyankatsu0105/cz-format-extension \\"tyankatsu0105/cz-format-extension\\").\\n\\n![](https://commitizen-tools.github.io/commitizen/images/demo.gif)\\n\\nYou can add commitizen to your project with the next command line\\n\\n```sh\\nnpm install commitizen --save-dev # npm\\nyarn add commitizen -D  # Yarn\\n```\\n\\nAdd any of the available [adapters](https://github.com/commitizen/cz-cli#adapters), in my case [cz-format-extension](https://github.com/tyankatsu0105/cz-format-extension \\"tyankatsu0105/cz-format-extension\\"):\\n\\n```sh\\n    npm install cz-format-extension --save-dev # npm\\n    yarn add cz-format-extension -D  # Yarn\\n```\\n\\nIn your `package.json` you will need to add the next section:\\n\\n```sh\\n  ...\\n  \\"config\\": {\\n    ...\\n    \\"commitizen\\": {\\n      \\"path\\": \\"cz-format-extension\\"\\n    }\\n  }\\n  ...\\n```\\n\\nThe Adapter [cz-format-extension](https://github.com/tyankatsu0105/cz-format-extension \\"tyankatsu0105/cz-format-extension\\") allows a massive flexibility as the questions can be defined in a `.czfrec.js` file. An example is:\\n\\n```js\\nconst { contributors } = require(\'./package.json\')\\n\\nmodule.exports = {\\n  questions({inquirer}) {\\n    return [\\n      {\\n        type: \\"list\\",\\n        name: \\"type\\",\\n        message: \\"\'What is the type of this change:\\",\\n        choices: [\\n           {\\n              type: \\"list\\",\\n              name: \\"type\\",\\n              message: \\"\'What is the type of this change:\\",\\n              choices: [\\n          {\\n            \\"name\\": \\"feat: A new feature\\",\\n            \\"value\\": \\"feat\\"\\n          },\\n          {\\n            \\"name\\": \\"fix: A bug fix\\",\\n            \\"value\\": \\"fix\\"\\n          },\\n          {\\n            \\"name\\": \\"docs: Documentation only changes\\",\\n            \\"value\\": \\"docs\\"\\n          },\\n          ...\\n        ]\\n      },\\n      {\\n        type: \'list\',\\n        name: \'scope\',\\n        message: \'What is the scope of this change:\',\\n        choices: [\\n            {\\n              \\"name\\": \\"core: base system of the application\\",\\n              \\"value\\": \\"core\\"\\n            },\\n            {\\n              \\"name\\": \\"extensions: systems that are observed\\",\\n              \\"value\\": \\"extensions\\"\\n            },\\n            {\\n              \\"name\\": \\"tools: other things in the project\\",\\n              \\"value\\": \\"tools\\"\\n            },\\n        ]\\n      },\\n      {\\n        type: \'input\',\\n        name: \'message\',\\n        message: \\"Write a short, imperative tense description of the change\\\\n\\",\\n        validate: (message) => message.length === 0 ? \'message is required\' : true\\n      },\\n      {\\n        type: \'input\',\\n        name: \'body\',\\n        message: \'Provide a longer description of the change: (press enter to skip)\\\\n\',\\n      },\\n      {\\n        type: \'confirm\',\\n        name: \'isBreaking\',\\n        message: \'Are there any breaking changes?\',\\n        default: false\\n      },\\n      {\\n        type: \'input\',\\n        name: \'breaking\',\\n        message: \'Describe the breaking changes:\\\\n\',\\n        when: answers => answers.isBreaking\\n      },\\n      {\\n        type: \'confirm\',\\n        name: \'isIssueAffected\',\\n        message: \'Does this change affect any open issues?\',\\n        default: false\\n      },\\n      {\\n        type: \'input\',\\n        name: \'issues\',\\n        message: \'Add issue references:\\\\n\',\\n        when: answers => answers.isIssueAffected,\\n        default: undefined,\\n        validate: (issues) => issues.length === 0 ? \'issues is required\' : true\\n      },\\n      {\\n        type: \'checkbox\',\\n        name: \'coauthors\',\\n        message: \'Select Co-Authors if any:\',\\n        choices: contributors.map(contributor => ({\\n            name: contributor.name,\\n            value: `Co-authored-by: ${contributor.name} <${contributor.email}>`,\\n        }))\\n      },\\n    ]\\n  },\\n  commitMessage({answers}) {\\n    const scope = answers.scope ? `(${answers.scope})` : \'\';\\n    const head = `${answers.type}${scope}: ${answers.message}`;\\n    const body = answers.body ? answers.body : \'\';\\n    const breaking = answers.breaking ? `BREAKING CHANGE: ${answers.breaking}` : \'\';\\n    const issues = answers.issues ? answers.issues : \'\';\\n    const coauthors = answers.coauthors.join(\'\\\\n\');\\n\\n    return [head, body, breaking, issues, coauthors].join(\'\\\\n\\\\n\').trim()\\n  }\\n}\\n```\\n\\nThe file creates a process of questions for:\\n\\n* type: align with semantic release message specification\\n* scope: affected part of the application\\n* message: the imperative written message\\n* body: longer description\\n* breaking: to determine if it\'s a breaking change for semantic release\\n* Issue: related issue of our ticketing system\\n* Co-Authors: people working in the tasks while pair programming\\n\\nAll these questions are asked interactively and not by the brain power of doing manual work.\\n\\nAnd you can then add some nice npm scripts in your `package.json` file pointing to the local version of Commitizen:\\n\\n      ...\\n      \\"scripts\\": {\\n        \\"commit\\": \\"cz\\"\\n      }\\n\\nThis will be more convenient for your users because then if they want to do a commit, all they need to do is run `npm run commit` and they will get the prompts needed to start a commit!\\n\\n> **NOTE:** If you are using `precommit` hooks thanks to something like [`husky`](https://www.npmjs.com/package/husky), you will need to name your script something other than `\\"commit\\"` (e.g. `\\"cm\\": \\"cz\\"`). The reason is because npm scripts has a \\"feature\\" where it automatically runs scripts with the name _prexxx_ where _xxx_ is the name of another script. In essence, npm and husky will run `\\"precommit\\"` scripts twice if you name the script `\\"commit\\"`, and the workaround is to prevent the npm-triggered _precommit_ script.\\n\\nThat is all :) . I will do a special mention to [commitlint](https://commitlint.js.org/#/) that is a very useful tool to lint commit messages. I do not use it anymore as it has some overlap with commitizen."},{"id":"/2022/08/08/commiting-like-pro-part-1","metadata":{"permalink":"/blog/2022/08/08/commiting-like-pro-part-1","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-08-08-commiting-like-pro-part-1.md","source":"@site/blog/2022-08-08-commiting-like-pro-part-1.md","title":"Commiting Like a Pro in NodeJs: The hooks","description":"Using git hooks to make sure your commits do what you expect","date":"2022-08-08T00:00:00.000Z","formattedDate":"August 8, 2022","tags":[{"label":"agile","permalink":"/blog/tags/agile"},{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":2.13,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Commiting Like a Pro in NodeJs: The hooks","description":"Using git hooks to make sure your commits do what you expect","authors":"alvarolorentedev","tags":["agile","webdev","programming","productivity"],"draft":false,"series":"commiting Like a Pro in NodeJs","canonical_url":"https://www.alvarolorente.dev/blog/2022/08/08/commiting-like-pro-part-1"},"prevItem":{"title":"Commiting Like a Pro in NodeJs: The Message","permalink":"/blog/2022/08/09/commiting-like-pro-part-2"},"nextItem":{"title":"Stop doing PR\'s inside the Office","permalink":"/blog/2022/08/08/stop-prs"}},"content":"## What & Why Git hooks?\\n\\nGit hooks are scripts that Git executes locally before or after events such as commit, push, and receive.\\n\\nThese hooks are completely programmable trough bash scripting. Examples of what can be done:\\n\\n* pre-commit: Enforce project coding standards.\\n* pre-push: Run tests.\\n\\nThis allows us to make sure we are committing the correct things at the correct time. Not breaking our code just because of the mental load of doing things as a manual process that can be forgotten.\\n\\n## How to Start\\n\\n### Add Husky\\n\\n[Husky](https://typicode.github.io/husky/#/) is a tool that allows Git hooks using JavaScript configured using individual files for hooks in a `.husky/` directory.\\n\\nThe fastest way to install husky is by using `husky-init`, a one-time command to quickly initialize a project with husky:\\n\\n```sh\\nnpx husky-init && npm install       # npm\\nnpx husky-init && yarn              # Yarn 1\\nyarn dlx husky-init --yarn2 && yarn # Yarn 2+\\npnpm dlx husky-init && pnpm install # pnpm\\n```\\n\\nIt will set up husky, modify package.json and create a sample pre-commit hook that you can edit. By default, it will run test when you commit.\\n\\nTo add another hook, use `husky add`.\\n\\nIf you are not comfortable using  `husky-init` you can find other options [here](https://typicode.github.io/husky/#/?id=manual).\\n\\n### Add lint-staged\\n\\nHusky is very useful, but it will run natively to git and not focus the commands in our bash scripts for all the files, not only the ones we want to commit.\\n\\n[Lint Staged](https://github.com/okonet/lint-staged) appear to resolve this problem. It allows you to run the process against staged git files that match a pattern.\\n\\n[![asciicast](https://asciinema.org/a/199934.svg)](https://asciinema.org/a/199934)\\n\\nInstall `lint-staged` by adding it to your local project.\\n\\n```sh\\nnpm install lint-staged --save-dev\\nyarn add lint-staged -D \\n```\\n\\nIn your package.json add it as a script(`\\"lint-staged\\": \\"lint-staged\\",`) and refer it through a `pre-commit` hook. If using Husky, this can be found in `.husky/pre-commit` with the next content:\\n\\n```sh\\n#!/bin/sh\\n. \\"$(dirname \\"$0\\")/_/husky.sh\\"\\n\\nyarn lint-staged\\n```\\n\\nThere are multiple ways to [configure lint-staged](https://github.com/okonet/lint-staged#configuration). One of them is having a `lint-staged.config.js` file in your project root folder. In this file, you can express what process you want to run for what types of files. For example:\\n\\n```js\\nmodule.exports = {\\n  \'*.{ts,tsx}\': [() => \'yarn tsc:check\', \'yarn format\', \'yarn lint:fix\', \'yarn test\', \'git add .\'],\\n};\\n```\\n\\nThe previous snipped runs the compiler check, formatting, linting and test before adding the fixed staged files to the current commit.\\n\\n## Conclusion\\n\\nWith this two tools, we will now be pushing code that will pass similar checks than our CI/CD system."},{"id":"/2022/08/08/stop-prs","metadata":{"permalink":"/blog/2022/08/08/stop-prs","editUrl":"https://github.com/alvarolorentedev/website/tree/main/blog/2022-08-08-stop-prs.md","source":"@site/blog/2022-08-08-stop-prs.md","title":"Stop doing PR\'s inside the Office","description":"PRs should only be part of certain environments and not a general practice","date":"2022-08-08T00:00:00.000Z","formattedDate":"August 8, 2022","tags":[{"label":"agile","permalink":"/blog/tags/agile"},{"label":"webdev","permalink":"/blog/tags/webdev"},{"label":"programming","permalink":"/blog/tags/programming"},{"label":"productivity","permalink":"/blog/tags/productivity"}],"readingTime":3.02,"hasTruncateMarker":false,"authors":[{"name":"Alvaro Jose","title":"Fractional CTO & Founder","url":"https://github.com/alvarolorentedev","imageURL":"https://avatars.githubusercontent.com/u/3071208","key":"alvarolorentedev"}],"frontMatter":{"title":"Stop doing PR\'s inside the Office","description":"PRs should only be part of certain environments and not a general practice","authors":"alvarolorentedev","tags":["agile","webdev","programming","productivity"],"draft":false,"canonical_url":"https://www.alvarolorente.dev/blog/2022/08/08/stop-prs","cover_image":"https://github.com/alvarolorentedev/diagrams/blob/main/Stop%20doing%20PR.drawio.png?raw=true"},"prevItem":{"title":"Commiting Like a Pro in NodeJs: The hooks","permalink":"/blog/2022/08/08/commiting-like-pro-part-1"}},"content":"Over the last few years, some practices appear to be more a dogma than a value adding practice. One of this is `Pull Requests`.\\n\\n### Why PR\'s exist\\n\\n* **Malicious Code Prevention**: Pull requests exist mostly as a practice accepted for `zero trust environments` (ex. Open Source). An attack vector on this type of environment is the ability of anyone to contribute, meaning you could inject code that could create known vulnerabilities that packages will inherit. That is why maintainers validate code from unknown users.\\n\\n![Malicious actors](https://github.com/alvarolorentedev/diagrams/blob/main/Stop%20doing%20PR.drawio.png?raw=true)\\n\\n* **Highly Distributed Teams**: PR\'s can be use for highly distributed teams (around the clock) as a way to do knowledge sharing. If someone in side A of the world can follow and understand the changes for a feature that is being developed in side B of the world.\\n\\n![Distributed Teams](https://github.com/alvarolorentedev/diagrams/blob/main/Stop%20doing%20PR-Around%20The%20Clock.drawio.png?raw=true)\\n\\n### The issue\\n\\nIS there any value of doing PRs when people work collocated? What is the cost of PRs in trust environments?\\n\\nThe value that normally people give to PRs is the one of having a **peer review process**. Nevertheless, we will see later in this article that there are less invasive ways to do this.\\n\\nSome costs of PRs are:\\n\\n* **Slow Delivery**: PRs are a start and stop strategy where there is a gateway to merge code. This is time that needs to be taken by developers (writting & preparing a PR) and reviewers (reviewing, commenting, etc) to go through the process. At the same time is more time the code takes to get to production (merging, re-testing, etc). This is significant for features but also for fixes, meaning you can go from a response time of minutes to hours.\\n* **Isolation work**: When working on branches, devs work on code that works isolated but needs to be merged with a continuous stream of changes. This means that any test isolated will probably be invalidated upon merging.\\n* **Lack of ownership**: As work is done isolated, the developer who creates a PR delegates part or the responsibility to the reviewer. Humans don\'t have compilers or containers to run the code in our brain, meaning catching errors tends to be out of our realm.\\n* **Egos**: As catching errors tends to be out of our human realm, PRs tend to become a thing related to preferences (Style, patterns, etc). This hardly provides any value to the code as either tools like linters can do this automatically or it brings premature optimizations.\\n* **Late feedback**: Any valid recommendation is actually provided quite late in the process, when the code has already been written and validated. Causing rework that takes time.\\n\\n### The Alternatives\\n\\n`Pull requests` are just one of the asynchronous peer code reviews styles. Is not the only way of doing peer reviews.\\n\\nSome other types of peer reviews that I, personally, like are:\\n\\n* **Over-the-shoulder**: The bases of this is to have a conversation over what has been or is being implemented. This creates a synchronous feedback loop on an async process. It does not fix all the shortcomings of a PR, but it creates a faster feedback loop.\\n* **Pair Programming / Mob Programming**: The idea is that multiple developers work in the same code base in the same computer, creating a synchronous feedback loop in a synchronous process. This with `Trunk-based development` allows very fast feedback loops at product level, and with the correct tools generates resilience and ownership among developers.\\n\\nThe disclaimer here is I have worked doing pair programming, TDD and trunk-based development for more than 5 years in multiple size companies, and it has always been a bliss."}]}')}}]);