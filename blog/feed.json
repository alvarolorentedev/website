{
    "version": "https://jsonfeed.org/version/1",
    "title": "Alvaro Lorente, Fractional CTO & Founder Blog",
    "home_page_url": "https://alvarolorente.dev/blog",
    "description": "Alvaro Lorente, Fractional CTO & Founder Blog",
    "items": [
        {
            "id": "/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development",
            "content_html": "<p>In 2024, Software has become the backbone of countless industries, it seems natural to equate software engineering strictly with coding. After all, code is the very fabric of software. However, I've come to appreciate that software engineering encompasses far more than just the act of coding. It involves understanding business needs, validating ideas, crafting user experiences, and so much more. </p><p>The reality is that while coding a solution is vital, it is also a considerable investment—both in time and resources. This investment makes it imperative to explore and validate options thoroughly before committing to a specific path. </p><p>Here, we delve into why software engineering is not just about coding and how a broader perspective can lead to more successful outcomes.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-high-cost-of-coding\">The High Cost of Coding<a class=\"hash-link\" href=\"#the-high-cost-of-coding\" title=\"Direct link to heading\">​</a></h2><p>Coding, by nature, is an expensive process. This cost isn't just financial; it encompasses time, effort, and the opportunity cost of not pursuing other projects. This high cost makes it essential to ensure that once the coding phase begins, the project has a high probability of success. Pre-validation steps, therefore, are not just beneficial but critical.</p><table><thead><tr><th><strong>Type</strong></th><th><strong>Cost</strong></th></tr></thead><tbody><tr><td><strong>Direct Development Costs</strong></td><td><strong>- Developer Salaries</strong>: The most significant direct cost, encompassing the wages of personnel directly involved in the development process.</td></tr><tr><td>- <strong>Tools and Licenses</strong>: Expenses related to the software licenses, development tools, integrated development environments (IDEs), and any third-party services required for coding and project management.</td><td></td></tr><tr><td>Infrastructure Costs</td><td><strong>- Hardware</strong>: Investments in servers, computers, and other hardware necessary for development, testing, and deployment.</td></tr></tbody></table><ul><li><strong>Software</strong>: Costs for operating systems, databases, server software, and any other software infrastructure required.</li><li><strong>Cloud Services</strong>: Expenses related to cloud computing resources if the development or hosting environment is cloud-based, including storage, computing power, and bandwidth. |\n| Opportunity Costs             | <strong>- Resource Allocation</strong>: The cost of dedicating resources to one project over another, potentially more valuable project. This includes the time and attention of the development team.</li><li><strong>Market Entry Timing</strong>: The potential revenue lost by not entering the market sooner, especially relevant in fast-moving sectors where being first can confer a significant advantage.                                                 |\n| Maintenance and Support Costs | <strong>- Ongoing Maintenance</strong>: Regular updates, bug fixes, and security patches to ensure the software remains functional and secure over time.</li><li><strong>Customer Support</strong>: Costs associated with providing user support, including staffing support desks, creating documentation, and developing training materials.                                                                                                                      |</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-value-of-software-teams\">The Value of Software Teams<a class=\"hash-link\" href=\"#the-value-of-software-teams\" title=\"Direct link to heading\">​</a></h2><p>While coding is undeniably at the heart of the development cycle. The value that software teams bring to an organization stretches far beyond the lines of code they write. Recognizing and leveraging these additional contributions can significantly enhance the impact and success of projects. Here’s a closer look at the diverse values software teams offer:</p><ol><li><strong>Identifying the Problems:</strong> The first step in any software project isn't to start coding, but to understand the problem being solved. This means engaging with stakeholders, conducting market research, and performing competitive analysis. A profound understanding of the issue helps in crafting solutions that are not just technically sound, but also relevant and useful.</li><li><strong>Validating the Business Case:</strong> Before a single line of code is written, it's critical to validate the business case for the project. This involves analyzing the potential return on investment, exploring the market demand, and considering various business models. Tools like the Lean Canvas can help in structuring these thoughts and ensuring that the project is viable from a business perspective.</li><li><strong>Exploring Solutions Beyond Code:</strong> Not every issue requires a complex, coded solution. Occasionally, the answer might lie in utilizing existing platforms, integrating with third-party services, or even creating a non-technical process. For instance, automating tasks through existing tools or leveraging no-code/low-code platforms can be both cost-effective and efficient.</li></ol><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-process-of-creating-new-solutions\">The Process of Creating New Solutions<a class=\"hash-link\" href=\"#the-process-of-creating-new-solutions\" title=\"Direct link to heading\">​</a></h3><p>Tu fit the value of a team we have defined. This process involves several key steps designed to validate the business case, explore efficient development alternatives, and ensure the solution effectively addresses user needs without unnecessarily reinventing the wheel. Here's a closer look at these critical stages:</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"validating-business-without-creating-a-repetitive-solution\">Validating Business Without Creating a Repetitive Solution<a class=\"hash-link\" href=\"#validating-business-without-creating-a-repetitive-solution\" title=\"Direct link to heading\">​</a></h3><p>Before diving into development, it's crucial to ensure that the solution being proposed does not merely replicate existing offerings without adding value. This validation involves:</p><ul><li><strong>Market Research</strong>: Conducting thorough market research to understand the competitive landscape and identify gaps or unmet needs that the new solution could address.</li><li><strong>User Interviews and Surveys</strong>: Engaging directly with potential users to gather insights into their challenges and the limitations of current solutions.</li><li><strong>Feasibility Studies</strong>: Assessing the technical and economic feasibility of the proposed solution to ensure it's viable and sustainable over time.</li></ul><p>This stage aims to confirm that the solution brings unique value to the market, justifying the investment required for its development.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"explore-buy-vs-build-alternative\">Explore Buy vs. Build Alternative<a class=\"hash-link\" href=\"#explore-buy-vs-build-alternative\" title=\"Direct link to heading\">​</a></h3><p>Once the need for a new solution is validated, the next step is to decide whether to develop it in-house (build) or leverage existing solutions through purchase or licensing (buy). This decision should consider:</p><ul><li><strong>Cost Analysis</strong>: Comparing the total cost of ownership (TCO) for both options, including development, maintenance, and potential scalability costs.</li><li><strong>Time to Market</strong>: Evaluating how quickly the solution can be deployed using each approach, considering the urgency of the need it addresses.</li><li><strong>Customization and Control</strong>: Assessing the level of customization required and the importance of having complete control over the solution's features and development roadmap.</li></ul><p>Exploring the buy vs. build alternative helps ensure that resources are allocated efficiently, focusing on creating value rather than duplicating existing technologies.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"explore-low-code-and-no-code\">Explore Low Code and No Code<a class=\"hash-link\" href=\"#explore-low-code-and-no-code\" title=\"Direct link to heading\">​</a></h3><p>For many organizations, low code and no code platforms offer a compelling middle ground between buying off-the-shelf solutions and custom development. These platforms enable:</p><ul><li><strong>Rapid Prototyping</strong>: Allowing teams to quickly build and iterate on solutions without extensive coding, speeding up the validation process.</li><li><strong>Cost Efficiency</strong>: Reducing the need for specialized development skills, thereby lowering the cost of solution development and maintenance.</li><li><strong>Empowering Non-Technical Users</strong>: Enabling business analysts and other non-technical stakeholders to contribute directly to the solution creation process.</li></ul><p>Exploring low code and no code options can democratize the development process and accelerate innovation within the organization.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"creation-of-throwaway-mvps\">Creation of Throwaway MVPs<a class=\"hash-link\" href=\"#creation-of-throwaway-mvps\" title=\"Direct link to heading\">​</a></h3><p>Developing throwaway Minimum Viable Products (MVPs) is a strategy to test hypotheses about a solution's value proposition with minimal investment. This approach involves:</p><ul><li><strong>Focused Development</strong>: Building a simplified version of the solution that includes only the core features necessary to test its viability and user acceptance.</li><li><strong>Feedback and Learning</strong>: Using the MVP to gather user feedback and insights, which can inform further development or pivot decisions.</li><li><strong>Willingness to Pivot or Discard</strong>: Being prepared to modify the solution significantly or abandon it based on feedback, minimizing sunk costs in non-viable directions.</li></ul><p>The creation of throwaway MVPs allows teams to experiment and learn quickly, ensuring that development efforts are focused on solutions that genuinely meet user needs and have a viable business case.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embracing-a-full-spectrum-approach\">Embracing a Full Spectrum Approach<a class=\"hash-link\" href=\"#embracing-a-full-spectrum-approach\" title=\"Direct link to heading\">​</a></h3><p>Software engineering is a discipline that transcends coding. It's about problem-solving, creativity, and understanding human needs. By embracing a holistic approach that includes rigorous validation, exploration of non-coded solutions, and a keen eye on the business aspects, software projects can achieve greater success. This approach saves resources and ensures that when we do code, we're building something of genuine value and relevance.</p><p>As we navigate the complexities of modern software development, let us remember that our goal isn't just to write code but to solve problems in the most efficient and impactful way possible. This perspective is what will continue to drive innovation and success in the field of software engineering.</p>",
            "url": "https://alvarolorente.dev/blog/2024/03/07/T04:00:00.000Z-Beyond Coding: The Cost of Software Development",
            "title": "Beyond Coding: The Cost of Software Development",
            "summary": "Software development is not only about coding, it requires prevalidations, and alternatives to coding",
            "date_modified": "2024-03-07T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": []
        },
        {
            "id": "/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations",
            "content_html": "<p>In the realm of software engineering organizations, the synergy and coherence of a department are often the driving forces of success and innovation. As an engineering leader, I've witnessed the transformative power of establishing common practices across teams. </p><p>These practices streamline operations and foster a culture of collaboration and continuous improvement. The key lies in identifying and implementing a “minimum common denominator” of practices that all teams can adhere to, ensuring consistency while accommodating the diverse nature of our projects and teams.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-importance-of-common-practices\"><strong>The Importance of Common Practices</strong><a class=\"hash-link\" href=\"#the-importance-of-common-practices\" title=\"Direct link to heading\">​</a></h2><p>Common practices serve as a shared language and methodology that bridge the gaps between different teams within a software engineering department. They ensure that despite the varied nature of our work—be it developing new features, fixing bugs, or innovating on technology—there is a foundational set of standards and processes that everyone understands and follows. This common ground enhances efficiency, as teams can seamlessly collaborate or transition between projects without the friction of having to learn entirely new ways of working.</p><p>Moreover, these practices lay the groundwork for a culture of quality and accountability. When everyone adheres to a set of agreed-upon standards, it elevates the overall quality of output. It also simplifies onboarding new team members, as there is a clear set of practices they can learn and adapt to from day one.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"navigating-risk-of-overshoot-or-undershoot\">Navigating Risk of overshoot or undershoot<a class=\"hash-link\" href=\"#navigating-risk-of-overshoot-or-undershoot\" title=\"Direct link to heading\">​</a></h2><p>In the quest to harmonize operations within a software engineering department, striking the right balance between implementing common practices and allowing team-specific practices. Both extremes—having too many common practices or none—pose significant risks that can hinder a team's, and ultimately organization's ability, efficiency, or creativity. </p><p>Let's explore these risks in detail:</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-risks-of-too-many-common-practices\">The Risks of Too Many Common Practices<a class=\"hash-link\" href=\"#the-risks-of-too-many-common-practices\" title=\"Direct link to heading\">​</a></h3><ul><li><strong>Stifled Creativity</strong>: Over-standardization can create an environment where teams and their members feel their creativity and problem-solving abilities are constrained by rigid guidelines. This can dampen innovation, as teams may be less inclined to explore novel solutions that fall outside established practices.</li><li><strong>Reduced Flexibility</strong>: Too many common practices can make it difficult for teams to adapt to specific project needs or unique challenges. This lack of flexibility can lead to inefficiencies, as teams are forced to follow processes that may not be optimal for their current context.</li><li><strong>One-Size-Fits-All Pitfall</strong>: Software projects can vary greatly in terms of scope, complexity, and objectives. A heavy-handed approach to standardization fails to acknowledge these differences, potentially leading to suboptimal approaches and solutions.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-risks-of-too-many-common-practices-1\">The Risks of Too Many Common Practices<a class=\"hash-link\" href=\"#the-risks-of-too-many-common-practices-1\" title=\"Direct link to heading\">​</a></h3><ul><li><strong>Stifled Creativity</strong>: Over-standardization can create an environment where teams and their members feel their creativity and problem-solving abilities are constrained by rigid guidelines. This can dampen innovation, as teams may be less inclined to explore novel solutions that fall outside established practices.</li><li><strong>Reduced Flexibility</strong>: Too many common practices can make it difficult for teams to adapt to specific project needs or unique challenges. This lack of flexibility can lead to inefficiencies, as teams are forced to follow processes that may not be optimal for their current context.</li><li><strong>One-Size-Fits-All Pitfall</strong>: Software projects can vary greatly in terms of scope, complexity, and objectives. A heavy-handed approach to standardization fails to acknowledge these differences, potentially leading to suboptimal approaches and solutions.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-risks-of-no-common-practices\">The Risks of No Common Practices<a class=\"hash-link\" href=\"#the-risks-of-no-common-practices\" title=\"Direct link to heading\">​</a></h3><ul><li><strong>Inconsistency and Chaos</strong>: Without any common practices, teams operate in silos, leading to inconsistencies in code quality, project management, and communication. This can result in integration challenges, technical debt, and a steep learning curve for team members transitioning between projects.</li><li><strong>Knowledge Silos and Isolation</strong>: The absence of shared practices can lead to knowledge silos, where expertise and solutions are not effectively shared across the department. This isolation can hinder collaboration and slow down problem-solving and innovation.</li><li><strong>Quality Control Challenges</strong>: Without a baseline of common practices, ensuring consistent quality across projects becomes a daunting task. This can affect the reliability and maintainability of the software produced, impacting customer satisfaction and trust.</li><li><strong>Complexity in Creating Coherent Systems</strong>: A lack of common practices complicates the development of systems that work seamlessly together, leading to disjointed user experiences.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"defining-a-minimum-common-denominator\"><strong>Defining a Minimum Common Denominator</strong><a class=\"hash-link\" href=\"#defining-a-minimum-common-denominator\" title=\"Direct link to heading\">​</a></h2><p>With these risks in mind. The challenge lies in defining a set of practices that is broad enough to cover the essential aspects of our work, yet flexible enough to allow for the unique needs and creativity of each team. This involves:</p><ul><li><strong>Identifying Core Practices</strong>: Focus on establishing a core set of practices that address critical aspects of software development, such as languages, coding standards, version control, and testing. These practices should form the backbone of your department's operations, ensuring consistency and quality.</li><li><strong>Allowing for Flexibility</strong>: Encourage teams to adapt and supplement these core practices with methodologies that suit their specific project needs and challenges. This flexibility supports creativity and innovation, allowing teams to find the best solutions.</li><li><strong>Fostering a Culture of Collaboration</strong>: Promote an environment where teams are encouraged to share their successes and learnings from adapting common practices. This can help evolve and refine your core practices over time, ensuring they remain relevant and effective.</li></ul><p>By defining and adhering to these minimum common practices, software engineering departments can achieve a balance between uniformity and flexibility. This balance is crucial for fostering an environment where teams can work efficiently and innovate freely, driving the organization towards its goals with cohesion and excellence.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"creating-an-organization-specific-technology-radar-to-define-common-practices\">Creating an Organization-Specific Technology Radar to Define Common Practices<a class=\"hash-link\" href=\"#creating-an-organization-specific-technology-radar-to-define-common-practices\" title=\"Direct link to heading\">​</a></h2><p>To tailor common practices to the unique needs and strategic goals of a software engineering organization, developing an organization-specific Technology Radar can be an invaluable approach. Inspired by the ThoughtWorks Technology Radar, this framework allows organizations to systematically evaluate and adopt technologies and methodologies that best fit their context. Here’s a step-by-step guide on how to implement this framework:</p><ol><li><strong>Define the Radar Structure:</strong> Similar to the ThoughtWorks model, organize your Radar into quadrants that are relevant to your organization, such as Tools, Languages &amp; Frameworks, Platforms, and Practices &amp; Techniques. Within each quadrant, use rings to categorize technologies or practices based on their adoption stage: Explore, Adopt, Trial, and Hold.</li><li><strong>Gather Input:</strong> Solicit input from across the organization to identify technologies, tools, and practices currently in use, as well as those being considered for future projects. Encourage teams to share their experiences, challenges, and successes with different technologies.</li><li><strong>Evaluate and Categorize:</strong> Define an organization wide session to evaluate the collected input based on criteria such as strategic fit, potential benefits, current maturity, and the organization’s ability to support and implement the technology or practice. Based on this evaluation, items are placed into the appropriate quadrant and ring of the Radar.</li><li><strong>Communicate and Implement:</strong> Share the Technology Radar and the derived common practices with the entire engineering department. Provide guidelines, training, and resources to facilitate the adoption of these practices. Encourage teams to integrate these practices into their workflows and projects.</li><li><strong>Monitor, Review, and Update:</strong> Do this at least once a year. Monitor the relevance of the items on the Technology Radar. Gather feedback from teams and conduct periodic reviews to update the Radar and the associated common practices. This ensures that your organization remains agile, adapting to new technologies and methodologies as they emerge.</li></ol><p>By creating and maintaining an organization-specific Technology Radar, software engineering departments can foster a culture of innovation and continuous improvement. This framework not only helps in aligning teams around common practices but also ensures that these practices are dynamically updated to keep pace with technological advancements and organizational growth.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"final-thoughts\">Final Thoughts<a class=\"hash-link\" href=\"#final-thoughts\" title=\"Direct link to heading\">​</a></h2><p>In conclusion, establishing common practices within a software engineering organization is a strategic endeavor that balances innovation with consistency. These practices serve as the backbone of a cohesive engineering department, enabling teams to navigate the complexities of software development with agility and confidence. Ultimately, the careful definition and implementation of common practices empower organizations to achieve their strategic objectives, enhance the quality of their outputs, and maintain a competitive edge in the ever-evolving landscape of technology.</p>",
            "url": "https://alvarolorente.dev/blog/2024/02/29/T04:00:00.000Z-Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations",
            "title": "Harmonizing Innovation: The Power of Common Practices in Software Engineering Organizations",
            "summary": "What is the value of common practices in an engineering department. We will delve into how can you achieve a good level of alignment in your department.",
            "date_modified": "2024-02-29T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": []
        },
        {
            "id": "/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach",
            "content_html": "<p>In the dynamic field of engineering, effective decision-making is crucial. From day-to-day team choices to strategic departmental shifts that align with company-wide objectives, understanding how to navigate these decisions is key to fostering a productive, innovative, and cohesive engineering environment. A well-established decision-making process is vital for several key reasons:</p><ol><li><strong>Clarity and Efficiency</strong>: It provides clear guidelines and roles, streamlining decision-making and saving time and resources.</li><li><strong>Accountability and Quality</strong>: Assigning clear roles enhances accountability, leading to more informed and thoughtful decisions.</li><li><strong>Transparency and Trust</strong>: A transparent process builds trust among team members, ensuring decisions are made fairly.</li></ol><p>In every organization, decisions are made daily across various levels, to help shape the direction we collectively strive for.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"decision-stratums\">Decision Stratum’s<a class=\"hash-link\" href=\"#decision-stratums\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-team-level\">The Team Level<a class=\"hash-link\" href=\"#the-team-level\" title=\"Direct link to heading\">​</a></h3><p>Decisions at the team level often involve immediate, tactical issues related to required execution, technology choices, or problem-solving methods. </p><blockquote><p><strong>Empower your teams</strong> by encouraging autonomy and ownership of decisions within their scope. </p></blockquote><p>Implement a <strong>decentralized decision-making process</strong>, where the teams and its members can make decisions based on their expertise and understanding of the context. This approach enhances agility and accelerates the development process.\nHowever, ensure these decisions align with broader domain and departmental goals through regular sync-ups and transparent communication channels.</p><table><thead><tr><th><strong>Framework</strong></th><th>Classic Brainstorming</th></tr></thead><tbody><tr><td><strong>Action Steps</strong></td><td>1. <strong>Set Clear Objectives</strong>: Begin by clearly defining the problem or topic you're brainstorming about. Ensure everyone understands the goal of the session.</td></tr></tbody></table><ol start=\"2\"><li><strong>Create a Conducive Environment:</strong> Choose a comfortable setting free from distractions. A relaxed atmosphere encourages more open and creative thinking.</li><li><strong>Encourage Uninhibited Participation:</strong> </li></ol><ul><li>Emphasize that all ideas are welcome, no matter how outlandish they may seem.</li><li>Encourage participants to build on or combine ideas from others.</li><li>Avoid criticism or evaluation of ideas during the brainstorming phase to keep the flow of ideas going.</li></ul><ol start=\"4\"><li><strong>Use a Visual Aid</strong>: Write down ideas on a whiteboard, flip chart, or shared document visible to all participants. This helps keep track of the ideas generated and can inspire further thoughts.</li><li><strong>Timebox the Session</strong>: Set a clear time limit for the brainstorming session (e.g., 15-30 minutes). This creates a sense of urgency and helps maintain focus.</li><li><strong>Facilitate the Session</strong>: Have a facilitator guide the session to ensure everyone has a chance to contribute. The facilitator can also help keep the session on track and encourage quieter members to share their ideas.</li><li><strong>Review and Prioritize</strong>: Once the brainstorming phase is complete, review the ideas as a group. You can discuss, combine, or refine ideas and prioritize them based on criteria relevant to your objectives.</li><li><strong>Plan Next Steps</strong>: Decide on actionable steps to explore or implement the top ideas. Assign responsibilities and deadlines as needed. |</li></ol><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-domain-level\">The Domain Level<a class=\"hash-link\" href=\"#the-domain-level\" title=\"Direct link to heading\">​</a></h3><p>Domain-level decisions impact a specific area of expertise within the engineering department, requiring a blend of technical knowledge and strategic foresight. These decisions might involve adopting new technologies, architectural changes, or methodologies that affect how projects within the domain are executed. </p><blockquote><p>Engage <strong>cross-functional teams</strong> in these discussions to gather diverse perspectives and ensure the decision supports both engineering &amp; product goals. </p></blockquote><p>One framework that can be used is <strong>RFCs (Request for Comments)</strong> documents, as they help to build consensus and will become part of your historical knowledge base.  You can start using it by following the next process:</p><ul><li><strong>Define the RFC Process</strong>: Clarify who can submit, the format/template, the review process, and decision-making criteria.</li><li><strong>Submission and Publication</strong>: Make the RFC accessible to all stakeholders through a shared system or platform.</li><li><strong>Feedback and Discussion</strong>: Allow a set period for stakeholders to provide feedback and engage in discussions to refine the proposal.</li><li><strong>Decision-Making</strong>: After feedback, decision-makers approve, request revisions, or reject the RFC, communicating the decision clearly.</li><li><strong>Implementation</strong>: Approved RFCs are added to the project roadmap or backlog for execution.</li><li><strong>Review and Retrospective</strong>: Post-implementation, review the outcomes and conduct a retrospective to improve future RFC processes.</li></ul><table><thead><tr><th><strong>Framework</strong></th><th><strong>RFCs</strong></th></tr></thead><tbody><tr><td><strong>Action Steps</strong></td><td><strong>1. Define the RFC Process</strong>: Clarify who can submit, the format/template, the review process, and decision-making criteria.</td></tr></tbody></table><ol start=\"2\"><li><strong>Submission and Publication</strong>: Make the RFC accessible to all stakeholders through a shared system or platform.</li><li><strong>Feedback and Discussion</strong>: Allow a set period for stakeholders to provide feedback and engage in discussions to refine the proposal.</li><li><strong>Decision-Making</strong>: After feedback, decision-makers approve, request revisions, or reject the RFC, communicating the decision clearly.</li><li><strong>Implementation</strong>: Approved RFCs are added to the project roadmap or backlog for execution.</li><li><strong>Review</strong>: Post-implementation, review the outcomes and conduct a retrospective. |</li></ol><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-department-level\">The Department Level<a class=\"hash-link\" href=\"#the-department-level\" title=\"Direct link to heading\">​</a></h3><p>Department-level decisions shape the engineering culture, define processes, and set the direction that aligns with the company’s strategic objectives. This might include decisions on budget allocations, hiring plans, department structure, or significant technology shifts. </p><blockquote><p>Such decisions require <strong>inclusive leadership</strong>—soliciting input from domain leads, team managers, and sometimes the entire engineering staff. </p></blockquote><p>It’s crucial to balance transparency, providing enough information for informed input, with decisiveness, making clear choices even when there’s no unanimous agreement.</p><table><thead><tr><th><strong>Framework</strong></th><th><strong>OKRs</strong></th></tr></thead><tbody><tr><td><strong>Action Steps</strong></td><td>1. <strong>Set Objectives</strong>: Define clear, ambitious, and achievable objectives for the department.</td></tr></tbody></table><ol start=\"2\"><li><strong>Define Key Results</strong>: Identify measurable outcomes to gauge progress towards each objective.</li><li><strong>Regular Check-ins</strong>: Conduct quarterly OKR reviews to assess progress, make necessary adjustments, and decide on priorities for the next quarter. |</li></ol><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-company-level\">The Company Level<a class=\"hash-link\" href=\"#the-company-level\" title=\"Direct link to heading\">​</a></h3><p>Decisions at the company level often involve considerations beyond the engineering department, including market positioning, customer needs, and cross-departmental initiatives. Engineering leaders must collaborate with peers in other departments and the executive team to ensure engineering strategies and resources align with company-wide goals. </p><blockquote><p>Participate in <strong>strategic planning sessions</strong> and <strong>executive meetings</strong> with a clear voice for the engineering department, advocating for decisions that support both immediate product and technology needs and long-term innovation and growth.</p></blockquote><table><thead><tr><th><strong>Framework</strong></th><th><strong>Balanced Scorecard</strong></th></tr></thead><tbody><tr><td><strong>Action Steps</strong></td><td>1. <strong>Develop Strategy Maps</strong>: Create visual representations of the company’s strategic objectives and how they interconnect.</td></tr></tbody></table><ol start=\"2\"><li><strong>Identify Key Performance Indicators (KPIs)</strong>: For each strategic objective, define specific, measurable indicators of success.</li><li><strong>Strategic Review Meetings</strong>: Hold regular strategic review sessions to discuss progress on KPIs, assess alignment with strategic objectives, and make decisions on strategic adjustments. |</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"decision-alignment\">Decision Alignment<a class=\"hash-link\" href=\"#decision-alignment\" title=\"Direct link to heading\">​</a></h2><p>Aligning decisions across multiple levels within an organization is a critical challenge that requires a structured approach to ensure coherence and efficiency. As organizations grow and become more complex, the need for clear communication and defined roles becomes paramount to avoid confusion and ensure that everyone is working towards the same goals.\nA key strategy in achieving this alignment is to ensure that decision-making processes are transparent and involve the right stakeholders at the right time. This involves not only identifying who needs to be involved in making decisions but also clarifying the extent of their involvement and the expectations from them.\nEffective alignment means that strategic decisions made at the top level are informed by insights from all relevant parts of the organization and that these decisions are effectively communicated and implemented at the operational level.</p><table><thead><tr><th><strong>Framework</strong></th><th><strong>Balanced Scorecard</strong></th></tr></thead><tbody><tr><td><strong>Action Steps</strong></td><td>1. <strong>Identify Tasks and Processes:</strong> List all tasks, activities, or decisions that need to be made within the department. This creates the foundation for assigning responsibilities.</td></tr></tbody></table><ol start=\"2\"><li><strong>Determine the Participants:</strong> Identify all individuals and teams involved. This includes anyone who will perform tasks, make decisions, or needs to be kept informed.</li><li><strong>Create the RACI Chart:</strong> Set up a matrix with tasks or decisions on one axis and the participants on the other. Fill in the matrix with R, A, C, or I to define the role of each participant for each task:</li></ol><ul><li><strong>Responsible (R)</strong>: Who is responsible for executing.</li><li><strong>Accountable (A)</strong>: Who is ultimately accountable for the completion and success of the task. Typically, this is one person.</li><li><strong>Consulted (C)</strong>: Who needs to be consulted or involved in the decision-making process because of their expertise or input.</li><li><strong>Informed (I)</strong>: Who needs to be informed about the task's progress or decisions. |</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>Effective decision-making across an engineering department is a multifaceted challenge that requires a nuanced approach at each level. By empowering teams, fostering cross-functional collaboration, engaging in inclusive leadership, and aligning with company-wide objectives, engineering leaders can navigate the complexities of decision-making with confidence. Remember, the goal is not just to make decisions but to make decisions that propel the department and the company forward in a coherent and strategic manner.</p><p>The frameworks exposed in this article can be use to aid the decision-making process, at the same time there are no hard boundaries for them. For example, we used to use RFCs at department level for cross domain alignments.\nBe prepared to have a toolbox that allows you to apply what makes more sense at each moment to help your team &amp; organization.</p>",
            "url": "https://alvarolorente.dev/blog/2024/02/22/T04:00:00.000Z-Navigating Decision-Making in Engineering: A Framework-Centric Approach",
            "title": "Navigating Decision-Making in Engineering: A Framework-Centric Approach",
            "summary": "How do we navigate decision-making at different levels, and what frameworks can help us.",
            "date_modified": "2024-02-22T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": []
        },
        {
            "id": "/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams",
            "content_html": "<blockquote><p>TL;DR;</p><p>In essence, leadership and management are two sides of the same coin, each playing a critical role in guiding teams and individuals towards achieving their potential and realizing organizational objectives. By building trust and taking control in measure, you empower your teams to innovate, perform, and thrive in an ever-evolving landscape.</p></blockquote><p>Have you ever worked in an organization that either seems too lax on the process or too stiff? What is behind that lack of balance? Are Leaders &amp; Managers roles completely contradictory?</p><p>In the realm of organizational success, the distinction between leadership and management is not just semantics. It's foundational to how teams and individuals achieve their goals. While management is essential for ensuring tasks are completed, budgets are adhered to, and deadlines are met, leadership goes a step beyond, it cultivates an environment of trust, vision, and empowerment.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-essence-of-leadership-building-trust\">The Essence of Leadership: Building Trust<a class=\"hash-link\" href=\"#the-essence-of-leadership-building-trust\" title=\"Direct link to heading\">​</a></h2><p>Leadership is inherently about building trust. It's a leader's responsibility to create a safe environment where team members feel valued, heard, and encouraged to contribute their best work. Trust is not built overnight but is developed through consistent actions, transparency, and an open dialogue. Here are a few ways leaders can build trust:</p><ul><li><p><strong>Empathy and Understanding</strong>: Leaders who show empathy and genuinely understand their team's challenges and needs foster a deeper connection, demonstrating they value their team members not just as employees but as individuals.</p></li><li><p><strong>Consistency in Words and Actions</strong>: Trust is nurtured when leaders follow through on their promises and demonstrate integrity in all actions, proving they are reliable and trustworthy.</p></li><li><p><strong>Empowering Others</strong>: By delegating meaningful tasks and showing confidence in their team's abilities, leaders empower their colleagues, which builds trust and cultivates a sense of ownership.</p></li><li><p><strong>Leading by Example</strong>: Actions often speak louder than words. When leaders embody the values, work ethic, and attitude they wish to see in their teams, they set a powerful example that encourages others to follow suit. Leading by example bridges the gap between directives and action, showing that leaders are willing to do what they ask of others.</p></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-role-of-management-taking-control\">The Role of Management: Taking Control<a class=\"hash-link\" href=\"#the-role-of-management-taking-control\" title=\"Direct link to heading\">​</a></h2><p>Management, while often seen in a less glamorous light, is crucial for organizational success. Managers take control by organizing, planning, and directing resources to meet objectives. Control, in this context, means ensuring that processes are efficient, objectives are clear, and outcomes are predictable. Here's how management takes control:</p><ul><li><p><strong>Setting Clear Goals and Expectations</strong>: Managers excel at clarifying goals and setting expectations, ensuring everyone knows what needs to be done and by when.</p></li><li><p><strong>Monitoring Progress and Making Adjustments</strong>: Control involves keeping a close eye on progress, identifying issues early, and adjusting plans as necessary to stay on course.</p></li><li><p><strong>Efficiency and Optimization</strong>: Managers focus on optimizing resources, reducing waste, and improving efficiency, ensuring that the team can achieve its objectives with the resources available.</p></li><li><p><strong>Keeping Everyone in Sync</strong>: Effective managers facilitate communication across departments, share insights and updates, and ensure that their team’s objectives align with broader company goals.</p></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-imbalance-of-leadership-without-management-and-vice-versa\">The Imbalance of Leadership Without Management, and Vice Versa<a class=\"hash-link\" href=\"#the-imbalance-of-leadership-without-management-and-vice-versa\" title=\"Direct link to heading\">​</a></h2><p>Seeing both roles as contradictory tends to push organizations towards failure. Organizational success requires a delicate balance between leadership and management. An imbalance, where one exists without the other, can lead to challenges that hinder a team’s or organization’s ability to reach its full potential.</p><ul><li><p><strong>Leadership Without Management</strong>: Leadership focused on building trust and vision without the grounding force of management can lead to a lack of direction and inefficiencies. While teams may feel inspired and valued, the absence of structured planning, goal-setting, and resource management can result in missed deadlines, unmet objectives, and wasted potential. In essence, the drive and motivation fostered by leadership need the rudder of management to steer the organization towards its goals effectively.</p></li><li><p><strong>Management Without Leadership</strong>: Conversely, management without leadership often leads to a rigid, uninspired work environment where tasks are completed, and objectives are met, but there’s little room for innovation, engagement, or personal growth. This scenario can enforce a culture of merely 'going through the motions' rather than thriving. Teams may achieve short-term goals but at the cost of long-term engagement and loyalty. The vision, inspiration, and trust-building aspects of leadership are critical for cultivating an environment where employees feel connected to their work and motivated to contribute their best.</p></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"finding-the-right-balance-by-bridging-leadership-and-management\">Finding the Right Balance By Bridging Leadership and Management<a class=\"hash-link\" href=\"#finding-the-right-balance-by-bridging-leadership-and-management\" title=\"Direct link to heading\">​</a></h2><p>The most effective leaders are those who can blend the visionary, trust-building aspects of leadership with the pragmatic, control-oriented nature of management. Here are a few ways to bridge the gap:</p><ul><li><p><strong>Communicate Vision and Purpose</strong>: Share the bigger picture and why work matters, connecting daily tasks to overarching goals.</p></li><li><p><strong>Foster an Environment of Growth</strong>: While maintaining control over the essentials, encourage innovation and risk-taking within parameters that ensure alignment with goals and values.</p></li><li><p><strong>Practice Emotional Intelligence</strong>: Recognize your emotions and those of others to manage interactions and communications effectively, blending empathy with decisiveness.</p></li></ul><p>The synergy of inspirational leadership and effective management ensures that teams are not only motivated to reach their goals but are also equipped with the strategy, resources, and direction to do so.</p>",
            "url": "https://alvarolorente.dev/blog/2024/02/14/leaders-build-trust-managers-take-control-the-path-to-empowering-teams",
            "title": "Leaders Build Trust, Managers Take Control: The Path to Empowering Teams",
            "summary": "Are leaders and managers important for organizational success?",
            "date_modified": "2024-02-14T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "productivity",
                "motivation",
                "career",
                "business"
            ]
        },
        {
            "id": "/2023/06/30/replacement-docker-desktop-with-podman-in-osx",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-would-i-do-this\">Why would I do this?<a class=\"hash-link\" href=\"#why-would-i-do-this\" title=\"Direct link to heading\">​</a></h2><p>D﻿ocker-desktop is a paid product, their licensing mode is by user, and it provides value not for the software side but for their cloud offering (registry, etc). For this, if the intent of you're a company is to use containers locally to facilitate software development,  the cost tends to be high.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-is-podman\">What is podman?<a class=\"hash-link\" href=\"#what-is-podman\" title=\"Direct link to heading\">​</a></h2><p>Podman (short for Pod Manager) is an open-source, Linux-native tool designed to develop, manage, and run containers and container images. It offers a Docker-compatible command-line interface (CLI) that does not rely on a daemon, but directly interacts with the Image registry, container, and image storage, and container process operations.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"migration-steps\">Migration Steps<a class=\"hash-link\" href=\"#migration-steps\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-clean-up-docker-desktop-optional\">1. Clean-up Docker Desktop (Optional)<a class=\"hash-link\" href=\"#1-clean-up-docker-desktop-optional\" title=\"Direct link to heading\">​</a></h3><p> ﻿you will need to run the next <a href=\"https://github.com/docker-archive/toolbox/blob/master/osx/uninstall.sh\" target=\"_blank\" rel=\"noopener noreferrer\">bash script</a></p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token shebang important\">#!/bin/bash</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># Uninstall Script</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">${</span><span class=\"token string variable environment constant\" style=\"color:#36acaa\">USER</span><span class=\"token string variable\" style=\"color:#36acaa\">}</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">!=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"root\"</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">then</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">$0</span><span class=\"token string\" style=\"color:#e3116c\"> must be run as root!\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token builtin class-name\">exit</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fi</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">do</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token builtin class-name\">read</span><span class=\"token plain\"> -p </span><span class=\"token string\" style=\"color:#e3116c\">\"Remove all Docker Machine VMs? (Y/N): \"</span><span class=\"token plain\"> yn</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">case</span><span class=\"token plain\"> </span><span class=\"token variable\" style=\"color:#36acaa\">$yn</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">Yy</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">* </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> docker-machine </span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -f </span><span class=\"token variable\" style=\"color:#36acaa\">$(</span><span class=\"token variable\" style=\"color:#36acaa\">docker-machine </span><span class=\"token variable function\" style=\"color:#d73a49\">ls</span><span class=\"token variable\" style=\"color:#36acaa\"> -q</span><span class=\"token variable\" style=\"color:#36acaa\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">break</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">Nn</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">* </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">break</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    * </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Please answer yes or no.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\">exit</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">esac</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">done</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Removing Applications...\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -rf /Applications/Docker.app</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Removing docker binaries...\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -f /usr/local/bin/docker</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -f /usr/local/bin/docker-machine</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -r /usr/local/bin/docker-machine-driver*</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -f /usr/local/bin/docker-compose</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Removing boot2docker.iso\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">rm</span><span class=\"token plain\"> -rf /usr/local/share/boot2docker</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Forget packages\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pkgutil --forget io.docker.pkg.docker</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pkgutil --forget io.docker.pkg.dockercompose</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pkgutil --forget io.docker.pkg.dockermachine</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pkgutil --forget io.boot2dockeriso.pkg.boot2dockeriso</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"All Done!\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-install-homebrew\">2﻿. Install Homebrew<a class=\"hash-link\" href=\"#2-install-homebrew\" title=\"Direct link to heading\">​</a></h3><p><a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">Homebrew</a> is the defacto command line package manager for OSX, if you don't have it is very recommendable to have it.</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">/bin/bash -c </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">$(</span><span class=\"token string variable function\" style=\"color:#d73a49\">curl</span><span class=\"token string variable\" style=\"color:#36acaa\"> -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh</span><span class=\"token string variable\" style=\"color:#36acaa\">)</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"3-install-podman\">3﻿. Install Podman<a class=\"hash-link\" href=\"#3-install-podman\" title=\"Direct link to heading\">​</a></h3><p>On Mac, each Podman machine is backed by a&nbsp;<a href=\"https://www.qemu.org/\" target=\"_blank\" rel=\"noopener noreferrer\">QEMU</a>&nbsp;based virtual machine. Once installed, the podman command can be run directly from the Unix shell in&nbsp;<code>Terminal</code>, where it remotely communicates with the podman service running in the Machine VM.</p><p>For Mac, Podman is provided through&nbsp;<a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">Homebrew</a>. Once you have set up brew, you can use the&nbsp;<code>brew install</code>&nbsp;command to install Podman:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">brew </span><span class=\"token function\" style=\"color:#d73a49\">install</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">podman</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Next, create and start your first Podman machine:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">podman</span><span class=\"token plain\"> machine init</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">podman</span><span class=\"token plain\"> machine start</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>You can then verify the installation information using:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">podman</span><span class=\"token plain\"> info</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>At this point, podman should have created a proxy file in <code>/usr/local/bin/docker</code>, if it does not exist you will have to create it with:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">sudo</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">vim</span><span class=\"token plain\"> /usr/local/bin/docker</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>a﻿dd in that file the content:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token shebang important\">#!/bin/sh</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"> -e /etc/containers/nodocker </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">||</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">\\</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">echo</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token file-descriptor important\">&amp;2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token builtin class-name\">exec</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">podman</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"</span><span class=\"token string variable\" style=\"color:#36acaa\">$@</span><span class=\"token string\" style=\"color:#e3116c\">\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>t﻿he script needs to be made executable by:</p><div class=\"language-powershell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-powershell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">chmod +x /usr/local/bin/docker</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>y﻿ou should now be able to run a docker as normal</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">docker</span><span class=\"token plain\"> run -it docker.io/hello-world</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"4-use-podman-mac-help\">4. Use podman-mac-help<a class=\"hash-link\" href=\"#4-use-podman-mac-help\" title=\"Direct link to heading\">​</a></h3><p>Y﻿ou should consider using&nbsp;<code>podman-mac-help</code>&nbsp;to migrate transparently to Podman on macOS.</p><ul><li>Continue using familiar Docker commands.</li><li>Take advantage of the benefits of Podman on macOS.</li><li>Your tools, such as&nbsp;<a href=\"https://maven.apache.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Maven</a>&nbsp;or&nbsp;<a href=\"https://www.testcontainers.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Testcontainers</a>, communicate with Podman without reconfiguration.</li></ul><p>The&nbsp;<code>podman-mac-helper</code>&nbsp;tool provides a compatibility layer that allows you to use most Docker commands with Podman on macOS. The service redirects&nbsp;<code>/var/run/docker</code>&nbsp;to the fixed user-assigned UNIX socket location.</p><p>T﻿o enable this, you just need to run:</p><div class=\"language-shell codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">sudo</span><span class=\"token plain\"> podman-mac-helper </span><span class=\"token function\" style=\"color:#d73a49\">install</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"5-install-podman-desktop-optional\">5. Install Podman Desktop (Optional)<a class=\"hash-link\" href=\"#5-install-podman-desktop-optional\" title=\"Direct link to heading\">​</a></h3><p>Finally, to have a better compatibility and a UI to work with as with docker desktop, you can install <a href=\"https://podman-desktop.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Podman desktop</a>b﻿y running: </p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">brew install podman-desktop</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>",
            "url": "https://alvarolorente.dev/blog/2023/06/30/replacement-docker-desktop-with-podman-in-osx",
            "title": "Replace Docker Desktop with Podman in OSX",
            "summary": "a how to tutorial migrate from docker desktop to podman in OSX",
            "date_modified": "2023-06-30T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "devops",
                "docker",
                "softwaredevelopment"
            ]
        },
        {
            "id": "/2023/04/24/continious-delivery-bootcamp-continuous-integration",
            "content_html": "<p>Welcome to our Continuous Delivery Bootcamp! We'll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you'll be a pro at transforming code into working software. Sign up today and start transforming your workflow! </p><p>This chapter we will do an example on how to build and validate our project in github actions.</p><h1>Video</h1><iframe width=\"100%\" height=\"444\" src=\"https://www.youtube.com/embed/QMwXxezykHc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><p>{% embed <a href=\"https://youtu.be/QMwXxezykHc\" target=\"_blank\" rel=\"noopener noreferrer\">https://youtu.be/QMwXxezykHc</a> %}</p><p><a href=\"https://youtu.be/QMwXxezykHc\" target=\"_blank\" rel=\"noopener noreferrer\">﻿Watch the video on Youtube</a></p>",
            "url": "https://alvarolorente.dev/blog/2023/04/24/continious-delivery-bootcamp-continuous-integration",
            "title": "Continious Delivery Bootcamp: Continuous Integration",
            "summary": "Learn how to get things fast into production with good quality",
            "date_modified": "2023-04-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "productivity",
                "devops",
                "development"
            ]
        },
        {
            "id": "/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project",
            "content_html": "<p>This is a #functional #programming series focusing on the main concepts using #kotlin.</p><p>In this second chapter, we will initialize a project with gradle and kotlin</p><h1>Video</h1><iframe width=\"100%\" height=\"444\" src=\"https://www.youtube.com/embed/YSbMLid1h-c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><p>{% embed <a href=\"https://youtu.be/YSbMLid1h-c\" target=\"_blank\" rel=\"noopener noreferrer\">https://youtu.be/YSbMLid1h-c</a> %}</p><p><a href=\"https://youtu.be/YSbMLid1h-c\" target=\"_blank\" rel=\"noopener noreferrer\">﻿Watch the video on Youtube</a></p>",
            "url": "https://alvarolorente.dev/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-initialize-the-project",
            "title": "Functional Programming With Kotlin Bootcamp - Initialize the Project",
            "summary": "Learn how to do functional programming with kotlin",
            "date_modified": "2023-04-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "development",
                "kotlin",
                "functional"
            ]
        },
        {
            "id": "/2023/04/24/functional-programming-with-kotlin-bootcamp-intro",
            "content_html": "<p>This is a #functional #programming series focusing on the main concepts using #kotlin.</p><p>In this first chapter, we will do an intro of the differences between OOP and FP</p><h1>Video</h1><iframe width=\"100%\" height=\"444\" src=\"https://www.youtube.com/embed/DG3cj6dV3YM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><p>{% embed <a href=\"https://youtu.be/DG3cj6dV3YM\" target=\"_blank\" rel=\"noopener noreferrer\">https://youtu.be/DG3cj6dV3YM</a> %}</p><p><a href=\"https://youtu.be/DG3cj6dV3YM\" target=\"_blank\" rel=\"noopener noreferrer\">﻿Watch the video on Youtube</a></p>",
            "url": "https://alvarolorente.dev/blog/2023/04/24/functional-programming-with-kotlin-bootcamp-intro",
            "title": "Functional Programming With Kotlin Bootcamp - Intro",
            "summary": "Learn how to do functional programming with kotlin",
            "date_modified": "2023-04-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "development",
                "kotlin",
                "functional"
            ]
        },
        {
            "id": "/2023/04/13/continious-delivery-bootcamp-intro",
            "content_html": "<p>Welcome to our Continuous Delivery Bootcamp! We'll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you'll be a pro at transforming code into working software. Sign up today and start transforming your workflow! </p><p>This chapter we will do an intro on the tools we will use and how to commit code with git and GitHub works</p><h1>Video</h1><iframe width=\"100%\" height=\"444\" src=\"https://www.youtube.com/embed/nwpUtvHulWM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><p>{% embed <a href=\"https://youtu.be/nwpUtvHulWM\" target=\"_blank\" rel=\"noopener noreferrer\">https://youtu.be/nwpUtvHulWM</a> %}</p><p><a href=\"https://youtu.be/nwpUtvHulWM\" target=\"_blank\" rel=\"noopener noreferrer\">﻿Watch the video on Youtube</a></p>",
            "url": "https://alvarolorente.dev/blog/2023/04/13/continious-delivery-bootcamp-intro",
            "title": "Continious Delivery Bootcamp: Intro",
            "summary": "Learn how to get things fast into production with good quality",
            "date_modified": "2023-04-13T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "productivity",
                "devops",
                "development"
            ]
        },
        {
            "id": "/2023/04/13/continious-delivery-bootcamp-test-driven-development",
            "content_html": "<p>Welcome to our Continuous Delivery Bootcamp! We'll teach you the skills you need to get your projects out the door fast, without sacrificing quality. By the end of this program, you'll be a pro at transforming code into working software. Sign up today and start transforming your workflow! </p><p>This chapter we will do an iteration writing test, doing test driven development not only as a testing tool but also as a design tool.</p><h1>Video</h1><iframe width=\"100%\" height=\"444\" src=\"https://www.youtube.com/embed/MG-Uqve41BQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><p>{% embed <a href=\"https://youtu.be/MG-Uqve41BQ\" target=\"_blank\" rel=\"noopener noreferrer\">https://youtu.be/MG-Uqve41BQ</a> %}</p><p><a href=\"https://youtu.be/MG-Uqve41BQ\" target=\"_blank\" rel=\"noopener noreferrer\">﻿Watch the video on Youtube</a></p>",
            "url": "https://alvarolorente.dev/blog/2023/04/13/continious-delivery-bootcamp-test-driven-development",
            "title": "Continious Delivery Bootcamp: Test Driven Development",
            "summary": "Learn how to get things fast into production with good quality",
            "date_modified": "2023-04-13T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "productivity",
                "devops",
                "development"
            ]
        },
        {
            "id": "/2023/01/26/psycological-safety-in-software-developmente",
            "content_html": "<p>psychological safety is essential for the success of software development teams. By fostering open communication and encouraging a culture of learning and innovation, teams can work more efficiently, effectively, and creatively. By promoting psychological safety, managers and leaders can help their team members to reach their full potential and take the team to the next level.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"long-version\">Long Version<a class=\"hash-link\" href=\"#long-version\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-is-psychological-safety\">What is psychological safety<a class=\"hash-link\" href=\"#what-is-psychological-safety\" title=\"Direct link to heading\">​</a></h3><blockquote><p>Psychological safety refers to the belief that one will not be punished or humiliated for speaking up with ideas, questions, concerns, or mistakes. It is a shared belief held by members of a team that the team is safe for interpersonal risk-taking. This safety allows team members</p></blockquote><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-is-psychological-safety-important\">Why is psychological safety important<a class=\"hash-link\" href=\"#why-is-psychological-safety-important\" title=\"Direct link to heading\">​</a></h3><p>Psychological safety is an essential aspect of any successful organization. Software development organizations are no exception.</p><p>One of the main benefits of psychological safety is the ability to foster open and honest communication. When team members feel safe to speak up, they are more likely to share their thoughts and ideas, which can lead to more efficient problem-solving and decision-making. In a field that is constantly evolving and where new technologies and approaches are continually emerging, it is essential to stay up-to-date and adapt to change.</p><p>Furthermore, it allows for creativity and innovation to flourish. When team members feel secure in their ability to express themselves, they are more likely to think outside the box and come up with new and unique solutions. In software development, this can be the difference between the success and failure of a project.</p><p>However, creating a culture of psychological safety is not always easy. It requires active effort and commitment from everyone on the team, including managers and leaders. One important step is to actively listen to and encourage open dialogue among team members. Managers should also create an environment where mistakes are viewed as opportunities for learning, not as failures.</p><p>Another important step is to establish clear guidelines and expectations for communication and behavior within the team. This can include things like setting ground rules for respectful dialogue and providing training on active listening and conflict resolution.</p><p>Finally, it is essential to hold every one on the team accountable for maintaining a culture of psychological safety. This includes managers, who should lead by example and model the behavior they expect from their team.</p>",
            "url": "https://alvarolorente.dev/blog/2023/01/26/psycological-safety-in-software-developmente",
            "title": "Psychological safety in software development",
            "summary": "What are some success factors of high-performing teams and organizations? One undoubtedly is the ability to share and exchange without fear or shame ",
            "date_modified": "2023-01-26T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "productivity",
                "motivation"
            ]
        },
        {
            "id": "/2022/12/19/api-singleton",
            "content_html": "<p>The singleton pattern has got a bad reputation over the years due to be widely overused in the incorrect use cases. With the proliferation of microservices, <strong>have APIs become the new singleton?</strong></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-problem\">The Problem<a class=\"hash-link\" href=\"#the-problem\" title=\"Direct link to heading\">​</a></h2><p>APIs, or application programming interfaces, have become a ubiquitous part of modern software development. They allow different systems and applications to communicate with one another, enabling the creation of complex, interconnected systems that can share data and functionality. However, there has been a growing concern that APIs are being overused, leading to a proliferation of unnecessarily complex and fragile systems that are difficult to maintain and scale.</p><p>One reason for the perceived overuse of APIs is the ease with which they can be implemented. With the abundance of API management tools and frameworks available, it is relatively straightforward to expose a set of functionality as an API and make it available to other systems. This has led to a proliferation of APIs, many of which are redundant or unnecessary, adding unnecessary complexity to the overall system.</p><p>Another issue is the lack of standardization in the API ecosystem. Each API is typically designed to meet the specific needs of the system it was created for, resulting in a wide variety of different designs and conventions. This can make it difficult for developers to understand and use APIs from other systems, as they may have to learn and adapt to new conventions and patterns each time they encounter a new API.</p><p>In addition to these issues, the reliance on APIs can also lead to fragile systems that are difficult to maintain and scale. When multiple systems are tightly coupled through APIs, a change to one system can have cascading effects on others, leading to unexpected behavior and potential failures. This can make it difficult to make changes or updates to a system without the risk of breaking something else.</p><p>There are also concerns about the security of APIs. As they allow systems to communicate with one another, they can also provide a potential entry point for attackers to gain access to sensitive data or functionality. Properly securing APIs can be a complex and time-consuming task, and if not done correctly, can lead to significant vulnerabilities.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-solution\">The Solution<a class=\"hash-link\" href=\"#the-solution\" title=\"Direct link to heading\">​</a></h2><p>So, what can be done to address these issues? One solution is to use APIs more judiciously, carefully evaluating whether an API is truly necessary before implementing it. This can help reduce the overall complexity of the system and make it easier to maintain and scale. </p><p>It's also important to adopt API design standards and guidelines, which can help ensure that APIs are consistent and easy to understand and use. Finally, proper API security practices should be implemented to protect against potential vulnerabilities.</p>",
            "url": "https://alvarolorente.dev/blog/2022/12/19/api-singleton",
            "title": "Double-edge Microservices: APIs the New Singleton",
            "summary": "In the current world of development we solve all with APIs, is it becoming an overused practice?",
            "date_modified": "2022-12-19T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "webdev",
                "api",
                "architecture",
                "programming"
            ]
        },
        {
            "id": "/2022/12/19/macroInfrastructure-microservice-obsesion",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-context\">The Context<a class=\"hash-link\" href=\"#the-context\" title=\"Direct link to heading\">​</a></h2><p>Cloud and infrastructure as code have revolutionized our industry. They allowed us to be able to procure infrastructure in a simple, adaptable way.<br>\n<!-- -->This allowed us to move from writing huge monolithic applications to write microservices that interact between them.<br>\n<!-- -->One of the most accepted definition of a microservice can be expressed as:</p><blockquote><p>A self-contained portion of code that does not share resources with other services, can be deployed independently, and should be easy to rewrite in a small portion of time.</p></blockquote><p>This sounds great when we talk about individual parts of a software projects. Nevertheless, when thinking about systems and how they operate, There is a point to make about granularity as software does never work fully isolated. It requires interactions with other systems to fulfill their purpose.</p><p>Most of the monolithic applications of the past had an issue of being over-engineered to allow changes that might never happen.</p><p>Could that also happen with microservices?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-issues\">The Issues<a class=\"hash-link\" href=\"#the-issues\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"clarity-of-the-domain\">Clarity Of The Domain<a class=\"hash-link\" href=\"#clarity-of-the-domain\" title=\"Direct link to heading\">​</a></h3><p>When a system grows too much in small pieces, it becomes more and more complex to understand the big picture.<br>\n<!-- -->When pieces are too small, domain events start becoming exchange of information in between nodes of a network. All this removes cohesion on the knowledge over the domain of a system, making it difficult to grasp the real intention and capabilities of concepts and actors across a system.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"babel-tower-issue\">Babel tower Issue<a class=\"hash-link\" href=\"#babel-tower-issue\" title=\"Direct link to heading\">​</a></h3><p>The more parts a system has, the less heterogeneous it becomes. This at the same time translates into a more complex environment with more integrations, frameworks and bigger learning curves that affects delivery. There need to be a balance of when and where in a system a new technology is added. Decisions must be based on needs and not on preferences.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"implicit-runtime-dependencies\">Implicit runtime dependencies<a class=\"hash-link\" href=\"#implicit-runtime-dependencies\" title=\"Direct link to heading\">​</a></h3><p>The more a system get split, the more dependency on certain node it will have. This tends to cause more dependencies in between the pieces of your infrastructure-based puzzle where you start having god infrastructure points that become single point of failure, or you have a chain of dependent infra that need to be deployed in a go or certain order.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hidden-complexity\">Hidden Complexity<a class=\"hash-link\" href=\"#hidden-complexity\" title=\"Direct link to heading\">​</a></h3><p>The more your microservice environment grows, the more it requires a growing support infrastructure for monitoring, alerting and other services not used as part of the main system. This normally is a separate effort which has its cost. The more a system grows, those hidden complexities become a dependency for all the nodes in the system, making it a complex task to evolve and change those dependencies.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-if-yagni\">Why… if YAGNI<a class=\"hash-link\" href=\"#why-if-yagni\" title=\"Direct link to heading\">​</a></h3><p>One of the main ideas of microservices was to be able to validate assumptions fast. Before bootstrapping new services or infrastructure, there is a need to ask ourselves about the existence of a service or infrastructure that contains the domain knowledge required for the experiment in the current ecosystem. If we are not careful, experiments won't be experiments. They will be MVPs, where domain knowledge is re-implemented, just for having it as a standalone node on the system.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"repeating-yourself\">Repeating Yourself<a class=\"hash-link\" href=\"#repeating-yourself\" title=\"Direct link to heading\">​</a></h3><p>When we create pieces of code that are independent, there is always a certain level of bootstrapping that is required and repeated in each node of our systems. This will cause not only a set of duplicated code, but also has a development time cost attached to it. Bootstrapping a project in a high granularity system can be complex to standardize.</p><p>Microservices, the cloud, and infrastructure as a service have definitely revolutionized our industry, nevertheless as in everything there is a need for balance. Making sure we use the right tool for the job, and we don't over-engineer things, not only at a code level but also at infrastructure level, as everything has a cost.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>In conclusion, a macro infrastructure due to microservice obsession can lead to increased complexity and overhead costs, as well as challenges in making changes and updates to the system. While microservices can offer benefits such as increased scalability and flexibility, it is important for organizations to carefully consider their specific needs and choose the right level of granularity for their architecture.</p>",
            "url": "https://alvarolorente.dev/blog/2022/12/19/macroInfrastructure-microservice-obsesion",
            "title": "Double-edge Microservices: Macro Infrastructure due to Microservice Obsession",
            "summary": "Macro Infrastructure due to Microservice Obsession the over-engineering of our age",
            "date_modified": "2022-12-19T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "webdev",
                "api",
                "programming",
                "architecture"
            ]
        },
        {
            "id": "/2022/11/24/tdd-is-not-called-tdt-for-a-reason",
            "content_html": "<p>I have observed quite a few articles lately that elaborate on issues with TDD. Nevertheless, they focused on the first letter but miss the focus of the other two letters.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"not-a-testing-strategy\">Not A Testing Strategy<a class=\"hash-link\" href=\"#not-a-testing-strategy\" title=\"Direct link to heading\">​</a></h2><p>If you take anything out of this article, please think about this quote:</p><blockquote><p>If TDD was about testing it would have been called TDT (test driven testing).</p></blockquote><p>The fact that we do test upfront in TDD does not mean at all that there is a direct relationship with a testing strategy, and as many preach, unit testing is not enough to create robust software.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"a-design-strategy\">A Design Strategy<a class=\"hash-link\" href=\"#a-design-strategy\" title=\"Direct link to heading\">​</a></h2><p>TDD is actually a <strong>Design Strategy</strong>, this is why the 2 last letter are for <strong>driven development</strong>. This means that your final code is being moved by those tests and not the other way around.</p><p>The design that TDD will move you towards to is <strong>minimalistic</strong>. Reducing the tendency of overengineering solutions when you don't need them. This brings a <strong>reducing time to market</strong>, by reducing the <strong>accidental complexity</strong>.</p><p>When doing TDD most developers have the complexity of letting go their <strong>egos</strong>, the problem when people fight against the practices is because they think to know better. Nevertheless, it tends to <strong>generate waste</strong> because most code optimizations tend to be premature and most extensibility points will never be modified.</p><p>There are places where TDD does not fit, for example while investigating a technology through a spike or PoC because in these cases, the person is exploring knowledge not generating value. In other cases, TDD allows you to bring value in the shortest way possible.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>If you are an experienced developer, do not discard TDD because you think you know better, allow it to challenge you. If you are a new developer, learn from the different ways of doing things and understand the value, don't take articles at face value.</p>",
            "url": "https://alvarolorente.dev/blog/2022/11/24/tdd-is-not-called-tdt-for-a-reason",
            "title": "TDD is not called TDT for a reason",
            "summary": "When people elaborate on TDD they seem to stay focused on the first letter but miss the focus of the other two letters. ",
            "date_modified": "2022-11-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "webdev",
                "testing",
                "architecture",
                "programming"
            ]
        },
        {
            "id": "/2022/10/14/delivery-acceleration-parallel-changes-strategy",
            "content_html": "<p>As we develop a product over time, changes need to be made as we need to accommodate new functionality. As most of our systems don't run isolated, and we have clients that used them (ex. public API), We have to keep compatibility at least on a temporary basis. How do we achieve this?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"versions\">Versions<a class=\"hash-link\" href=\"#versions\" title=\"Direct link to heading\">​</a></h2><p>A common practice is to have different versions for the multiple clients. While simple, it also requires significant effort to maintain as whenever an issue or bug is spotted, multiple places are affected, meaning there are more possibility of side effects.<br>\n<!-- -->It also makes it more difficult to make a case for clients to migrate from one to the other due to the contract changes.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/version.png\" class=\"img_ev3q\"></p><p>This affect mostly negatively the next DORA 4 metrics:</p><ul><li>❌ <strong>Lead Time for change</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"versionless-expand--contract\">Versionless: Expand &amp; Contract<a class=\"hash-link\" href=\"#versionless-expand--contract\" title=\"Direct link to heading\">​</a></h2><p>As the name says, this strategy intents to have only one state of truth and not a multitude of them. Versionless has been heavily adopted as a principle by GraphQL, for example.<br>\n<!-- -->We can achieve this in any code base by implementing a strategy for parallel changes called <strong>Expand &amp; Contract</strong>, it's call this way due to the phases code goes through. Let's see for example we want to migrate from using one field value to a similar field with a more complex representation.</p><ul><li><strong>Expand</strong>: We add the new 'field' to the existing contract, and add the code to support this strategy on the existing code.</li><li><strong>Contract</strong>: We monitor the usage of the old 'field' to understand when it is possible to deprecate, at that point we remove the old code.</li></ul><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/expand_contract.jpeg\" class=\"img_ev3q\"></p><p>With this, we have a clean source code that we can evolve indefinitely as required by the business.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Lead Time for change</strong></li></ul>",
            "url": "https://alvarolorente.dev/blog/2022/10/14/delivery-acceleration-parallel-changes-strategy",
            "title": "Delivery Acceleration: Parallel Changes Strategy",
            "summary": "Code evolve and changes. Making sure we don't break things in a continuous deployment environment.",
            "date_modified": "2022-10-14T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "softwaredevelopment",
                "programming",
                "devops",
                "productivity"
            ]
        },
        {
            "id": "/2022/10/12/delivery-acceleration-version-control-integration-strategy",
            "content_html": "<p>I have already written some <a href=\"https://www.alvarolorente.dev/blog/2022/08/08/stop-prs\" target=\"_blank\" rel=\"noopener noreferrer\">other post</a> on this topic. I will go straight to the point on comparing Git Flow (a <a href=\"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\" target=\"_blank\" rel=\"noopener noreferrer\">legacy strategy</a> that most companies use) and Trunk-Based Development.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"gitflow-the-bad--the-ugly\">Gitflow: The Bad &amp; The Ugly<a class=\"hash-link\" href=\"#gitflow-the-bad--the-ugly\" title=\"Direct link to heading\">​</a></h2><p>Why do I call it the bad and the ugly? Because it does not allow you to achieve Continuous Deployment.<br>\n<!-- -->The idea is that every developer works isolated on their branch, validate on their branch and ask through a merge request to add their code to the X stage branch.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/gitflow-diagram-768x973.png\" class=\"img_ev3q\"><br>\n<!-- -->There are multiple issues with this:</p><ul><li>Code does not exist isolated, we don't deploy isolated code, so the isolated test is not valid as it will require retesting.</li><li>The peer review process happens at the end, causing a very slow feedback loop. Having to rewrite code that could be avoided.</li><li>The more time the branch lives, the more it diverges from the original behavior and the more complex it is to merge.</li><li>Merging can cause complex conflicts that require revalidation, and it might have side effect in other features. </li><li>As there needs to be validations of the merges, it's normal to have multiple environments that give a false sense of security, increases the $ cost and increases the lead time.</li><li>Egos and preferences become part of the review process, as it has become an 'accepted' practice that the 'experts' or 'leads' do the reviews.</li></ul><p>All of this is red tape to go through is a problem that makes delivery slower, and create a lack of ownership mentality farther away from what happen to the individual branch.</p><p>This affects mostly negatively, most of DORA 4 metrics:</p><ul><li>❌ <strong>Deployment frequency</strong></li><li>❌ <strong>Lead Time for change</strong></li><li>❌ <strong>Mean Time To Recovery</strong></li></ul><p>Is there a simpler and better way to collaborate on code way?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"trunk-based-development-the-good\">Trunk-Based Development: The Good<a class=\"hash-link\" href=\"#trunk-based-development-the-good\" title=\"Direct link to heading\">​</a></h2><p>What happens if we all commit to the same branch.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/trunk.png\" class=\"img_ev3q\"></p><p>Most of the expressed issues are solved, in this scenario by:</p><ul><li>Code is never isolated, as we all push code to the same place.</li><li>Teams that do this practices also practice pair programming, making the peer review process is continuous and synchronous.</li><li>As individuals push multiple times a day, merge conflicts are non-existent or small.</li><li>Does not require revalidation, as validation is a continuous stream in the single environment.</li><li>No ego environment tent to appear as there is no centralize approver of code, so it's not a matter of preference but a team effort and ownership.</li></ul><p>As we have seen before, having unfinished code does not need to affect users, as it is common practice to use feature flags and/or branching by abstraction.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>Simplicity is king. Having a simpler structure enables speed and quality of delivery, as it allow teams to work closely, take shared ownership and act faster related to a smaller change.</p>",
            "url": "https://alvarolorente.dev/blog/2022/10/12/delivery-acceleration-version-control-integration-strategy",
            "title": "Delivery Acceleration: Version Control Integration Strategy",
            "summary": "How do you integrate code in the team matters, it will directly affect the rest of your architecture and practices like we have seen in previous chapters",
            "date_modified": "2022-10-12T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "productivity",
                "devops",
                "programming",
                "softwaredevelopment"
            ]
        },
        {
            "id": "/2022/10/11/delivery-acceleration-testing-validation",
            "content_html": "<p>Before we enable code for our clients, we need to test and validate it does what is expected. This could be an entire series of its own (please let me know if you want one), so I will keep it on a high level.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"testing\">Testing<a class=\"hash-link\" href=\"#testing\" title=\"Direct link to heading\">​</a></h2><p>I could probably spend hours sharing different types of testing strategies and where and why to use them.<br>\n<!-- -->In reality, the most important thing, is to make sure we use the correct ratio of the different types of tests, as it will highly affect the time and location of your testing.</p><p>This ratio has always been shown as a pyramid with:</p><ul><li><strong>Unit test</strong>: validate individual pieces of logic that are isolated.</li><li><strong>Integration test</strong>: validates interactions with multiple parts of your system or other systems.</li><li><strong>Integrated test</strong>: They test the system as a whole.</li></ul><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/pyramid.jpeg\" class=\"img_ev3q\"></p><p>Tests are divided in these layers because there is a cost in time and complexity.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Change Failure Rate</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"validation\">Validation<a class=\"hash-link\" href=\"#validation\" title=\"Direct link to heading\">​</a></h2><p>Validation differs from testing as it's the confirmation that the behavior is what the user expected, for now, humans are the only ones that can discern this.<br>\n<!-- -->As we have seen in the previous chapter, the recommendation is to do this in production, so you get:</p><ul><li>Get real behaviors of interactions with other systems</li><li>Get real performance</li></ul><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Change Failure Rate</strong></li></ul>",
            "url": "https://alvarolorente.dev/blog/2022/10/11/delivery-acceleration-testing-validation",
            "title": "Delivery Acceleration: Testing & Validation",
            "summary": "is testing enough to make sure our code works?",
            "date_modified": "2022-10-11T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "softwaredevelopment",
                "programming",
                "devops",
                "productivity"
            ]
        },
        {
            "id": "/2022/10/10/delivery-acceleration-enabling-features",
            "content_html": "<p>Now that we know where our code lives, we need to make sure our users get access to the features. For this, we need to get our code to the environment we want to deploy to, and control the rollout (if you are not a big bang release fan).</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"bluegreen-deployment-getting-to-prod-with-0-downtime\">Blue/Green Deployment: Getting to prod with 0 downtime<a class=\"hash-link\" href=\"#bluegreen-deployment-getting-to-prod-with-0-downtime\" title=\"Direct link to heading\">​</a></h2><p>What is this?, The concept is simple, we have a set of machines (ex. blue) where we currently have our app running, and we want to deploy. The intent is to create a new set of machines (ex. green) where our new version of the code will run. We would like to validate as much as possible (ex. automated e2e tests) that this new version is up to par with the previous one before moving the traffic and destroy the previous version.</p><p>You can see the process in the next graph:</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/blue_green.jpeg\" class=\"img_ev3q\"></p><p>With this, we are trying to achieve a 0 downtime while deploying a new version of our code. This is critical for teams that practice continuous deployment, as you want to avoid having systems down as you deploy multiple times a day.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"enabling-feature-access-to-users\">Enabling feature access to users<a class=\"hash-link\" href=\"#enabling-feature-access-to-users\" title=\"Direct link to heading\">​</a></h2><p>there are multiple ways to enable access to users, in between them:</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"big-bang-releases\">Big Bang Releases<a class=\"hash-link\" href=\"#big-bang-releases\" title=\"Direct link to heading\">​</a></h3><p>This is the plug and pray solution. Pushing the code and expecting it to work as it's enabled for all users. This is a very dangerous strategy as your blast radius is all your users.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"canary-releases\">Canary Releases<a class=\"hash-link\" href=\"#canary-releases\" title=\"Direct link to heading\">​</a></h3><p>This is a practice that comes from the mining industry, The idea was the next one:</p><blockquote><p>If a canary is in the same place where humans are inside the mine, when there is a problem with the breathable air it will be the first one to perish.</p></blockquote><p>If we translate this to software, the idea is to have deployed the changes only to one or a few servers. With this, we can monitor this canary instances and act if any issue happens, we reduce the blast radius of issues to only the users who go through that server.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/canary.jpeg\" class=\"img_ev3q\"></p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Change Failure Rate</strong></li></ul><p>This approach provides us a way to reduce the blast radius from a big bang release. Nevertheless, it does not help us to prevent or act faster upon a bug in our code. </p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"feature-flag-releases\">Feature Flag Releases<a class=\"hash-link\" href=\"#feature-flag-releases\" title=\"Direct link to heading\">​</a></h3><p>To improve upon the canary release strategy, we can move towards feature flags.</p><p>Feature Flags are hiding our code behind a 'flag' this can help decide if the code is enabled or disabled, as in the next image.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/toggles.jpeg\" class=\"img_ev3q\"></p><p>There are a multitude of services, libraries &amp; SDKs that allow you to create flags in your code. They help by:</p><ul><li>Decouple activation of features from the release pipeline.</li><li>Solving incidents in a matter of seconds.</li><li>Do a controlled rollout. For example:<ul><li>Enable only for team.</li><li>Enable for X% of the traffic.</li><li>Enable for users in a specific country.</li></ul></li></ul><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul>",
            "url": "https://alvarolorente.dev/blog/2022/10/10/delivery-acceleration-enabling-features",
            "title": "Delivery Acceleration: Enabling Features",
            "summary": "How do we roll out features? What are some practices that can save us from the big bang release",
            "date_modified": "2022-10-10T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "productivity",
                "devops",
                "programming",
                "softwaredevelopment"
            ]
        },
        {
            "id": "/2022/10/10/delivery-acceleration-environments",
            "content_html": "<p>Our services need to run somewhere, so our users can access it. It's a very common practices to have multiple environments like dev, staging, and prod. Is this actually a good practices?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ci-vs-cd-vs-cd\">CI vs. CD vs. CD<a class=\"hash-link\" href=\"#ci-vs-cd-vs-cd\" title=\"Direct link to heading\">​</a></h2><p>when people talk about continuous integration, delivery and deployment, they normally talk about it as a whole.</p><p>Nevertheless, let's reflect why these are 3 different practices. As they are steps in a journey, you can do one and not the next one.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/cicd.png\" class=\"img_ev3q\"></p><ul><li>Continuous integration: allows making reproducible states of the code in multiple places.</li><li>Continuous Delivery: Now that it's reproducible, it needs to be marked as potentially deployable and provide the ability to deploy it.</li><li>Continuous Deployment: Delivers the code to your clients and not only to your team as you commit.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-trap-of-multiple-environments\">The trap of Multiple Environments<a class=\"hash-link\" href=\"#the-trap-of-multiple-environments\" title=\"Direct link to heading\">​</a></h2><p>As you can imagine, with the previous definition of CI/CD, having multiple environments will never allow you to achieve Continuous Deployment.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/environments.jpeg\" class=\"img_ev3q\"></p><p>The intent of having multiple environments is to reduce change failure rate, are we actually achieving this with the practices? The answer is normally not due to:</p><ul><li>A non-production environment will never be the same as a production.<ul><li>Different data</li><li>Different performance</li><li>Different security practices</li><li>Etc…</li></ul></li><li>Stress and ownership of moving things to production</li><li>Accumulation of code in lower environments (meaning more bugs).</li><li>Longer feedback loop.</li><li>Continuous misalignment due to development cycles in between different teams.</li></ul><p>As you can see, this makes a fake sense of safety, but it does not affect positively the change failure rate.</p><p>This affects mostly negatively, most of DORA 4 metrics:</p><ul><li>❌ <strong>Deployment frequency</strong></li><li>❌ <strong>Lead Time for change</strong></li><li>❌ <strong>Mean Time To Recovery</strong></li><li>〰️ <strong>Change Failure Rate</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"achieving-continuous-deployment-only-prod-is-it-so-crazy\">Achieving Continuous Deployment, Only prod, is it so crazy?<a class=\"hash-link\" href=\"#achieving-continuous-deployment-only-prod-is-it-so-crazy\" title=\"Direct link to heading\">​</a></h2><p>How can a team Continuous deployment? The answer tends to be simple, making every commit go to production and testing in it.<br>\n<!-- -->Be aware this does not mean to have our users experience possible bugs or see test data, as we can hide functionalities behind toggles, headers, or parameters that allow access to only the development team. As we will see in future installments of this series.</p><p>An example strategy is the one in the next diagram.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/single_environment.jpeg\" class=\"img_ev3q\"></p><p>This allows us to keep only one environment that discriminates in between test and non-test data that can be clean periodically, while it provides the real environment with the real behavior. With this, we solved:</p><ul><li>Real performance &amp; behavior.</li><li>Continuous alignment with other teams.</li><li>Smaller feedback cycles.</li><li>Control of rollout.</li><li>Smaller $ cost.</li></ul><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>〰️ <strong>Change Failure Rate</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>There is no one size fit all, but modern practices tend to go towards simplicity and fast feedback loops. There are many practices involved on this simplicity that enables us to feel comfortable with only production environments. We will talk about them on this series.   </p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"related-videos\">Related Videos<a class=\"hash-link\" href=\"#related-videos\" title=\"Direct link to heading\">​</a></h2><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UBtiBA5QTEg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9C0efJkT0Hg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe>",
            "url": "https://alvarolorente.dev/blog/2022/10/10/delivery-acceleration-environments",
            "title": "Delivery Acceleration: Deployment Environments",
            "summary": "Where should we run our services? are there hidden consts on certain practices?",
            "date_modified": "2022-10-10T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "softwaredevelopment",
                "programming",
                "productivity",
                "devops"
            ]
        },
        {
            "id": "/2022/09/27/delivery-acceleration-observability",
            "content_html": "<p>When we talk about observability, we talk about:</p><blockquote><p>Capability of developers to understand the health and status of their application.</p></blockquote><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/no_alarms.png\" class=\"img_ev3q\"></p><p>We don't want users or clients to be the ones noticing something is wrong. For this, there are multiple tools that fall under the observability category.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"tools\">Tools<a class=\"hash-link\" href=\"#tools\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"alarms\">Alarms<a class=\"hash-link\" href=\"#alarms\" title=\"Direct link to heading\">​</a></h3><p>This is the first line of defense against issues, the intent is to get notified if any potential issue arises.<br>\n<!-- -->The intent of this is to provide a notification if any parameter of our application is out of range (ex. to many 5xx).</p><p>This allows us to use our mental bandwidth to focus in creating value and not continuously check if the parameters are in range.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Mean Time To Recovery</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"metrics\">Metrics<a class=\"hash-link\" href=\"#metrics\" title=\"Direct link to heading\">​</a></h3><p>As the name says, this is a set of measurements we track from our code, it allows us to understand the health of individual parts of our system.</p><p>This metrics are shown in dashboards that allow us to visually understand what is happening.  We can divide metrics dashboards in 2 types:</p><ul><li>Status: It will give us a really fast overview of the health of the system.</li><li>Details: It will not tell us what is wrong, but will provide more detailed information to dig deeper into a specific area.</li></ul><p>It's important to not mix this 2 together, as they have different purposes. Like with alarms, it helps focus our mental bandwidth in the correct place.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/dashboards.jpeg\" class=\"img_ev3q\"></p><p>As you see in the previous image, the left represents a detail dashboard that makes it difficult to know on a single view if there is an issue. For this, as in the image on the right,  we have a status dashboard that in a single glance we can spot where to look next.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Mean Time To Recovery</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"logs\">Logs<a class=\"hash-link\" href=\"#logs\" title=\"Direct link to heading\">​</a></h3><p>This is the lower level you want to go. It should tell you where in the code is your issue, so you can go and fix it.</p><p>When thinking about logging, it is significant not log everything. Due to the added noise that this can bring.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Mean Time To Recovery</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"example\">Example<a class=\"hash-link\" href=\"#example\" title=\"Direct link to heading\">​</a></h2><p>let's get practical on how would this work.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/observability-drawio.png\" class=\"img_ev3q\"></p><ul><li>Implement your service</li><li>Create metrics and send them to your metrics system (ex. <a href=\"https://www.datadoghq.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Datadog</a>, <a href=\"https://grafana.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Grafana</a>)</li><li>Create logs and send them to your logging system (ex. <a href=\"https://www.datadoghq.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Datadog</a>, <a href=\"https://www.elastic.co/kibana/\" target=\"_blank\" rel=\"noopener noreferrer\">Kibana</a>, <a href=\"https://aws.amazon.com/cloudwatch/\" target=\"_blank\" rel=\"noopener noreferrer\">CloudWatch</a>).</li><li>Create dashboards:<ul><li>Single Status dashboard. Use only simple boxes with green and red backgrounds that represent in one view the health of your system &amp; subsystems.</li><li>Multiple Detail dashboards. Create a dashboard for each subsystem with as much data as necessary to understand where the issue is, so you can later pinpoint the root cause in your logs.</li></ul></li><li>Create alarms based on the status dashboard boxes.</li><li>Connect your notification system (ex. <a href=\"https://www.atlassian.com/software/opsgenie\" target=\"_blank\" rel=\"noopener noreferrer\">Opsgenie</a>, <a href=\"https://www.pagerduty.com/\" target=\"_blank\" rel=\"noopener noreferrer\">PagerDuty</a>, <a href=\"https://slack.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Slack </a>channel) to the created alarms, so you get push notifications as something goes wrong.</li></ul>",
            "url": "https://alvarolorente.dev/blog/2022/09/27/delivery-acceleration-observability",
            "title": "Delivery Acceleration: Observability",
            "summary": "When runing services in production the most important thing is to understand the health of it",
            "date_modified": "2022-09-27T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "softwaredevelopment",
                "programming",
                "devops",
                "productivity"
            ]
        },
        {
            "id": "/2022/09/25/delivery-acceleration-devops-attitudes",
            "content_html": "<p>When we start our journey towards continuous integration &amp; delivery, the first thing to take in count is the mentality. There are a few of them that will make or break our intent. Let's see the most important and also some practices.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mentality\">Mentality<a class=\"hash-link\" href=\"#mentality\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"you-build-it-you-run-it\">You build it, you run it<a class=\"hash-link\" href=\"#you-build-it-you-run-it\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/run_it.jpg\" class=\"img_ev3q\"></p><blockquote><p>create a DevOps culture, not a Devs vs Ops</p></blockquote><p>This mentality is the idea that the same people who develop the software re in charge to maintain it in good health by observing it.</p><p>For many years, this was not the case. Operations &amp; development were handled by different teams. This caused a dystopian situation where each group had a different goal:</p><ul><li><strong>Devs</strong>: deliver as fast as possible. By pushing code to production without observing the side effects of it.</li><li><strong>Ops</strong>: keep system stability.</li></ul><p>With the 'you build it, you run it' mentality, devs focus on their service or work, while Ops becomes a product team that focus on providing the correct tooling for Developers.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embrace-ownership-in-failure-culture\">Embrace Ownership in Failure Culture<a class=\"hash-link\" href=\"#embrace-ownership-in-failure-culture\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/1_w7sfzhdxzldtdwt7wfiabg.png\" class=\"img_ev3q\"></p><blockquote><p>the problem is not breaking things, is the inability to recover from it</p></blockquote><p>Normally, developers feel they need a safety net to feel comfortable to introduce changes to production, this tends to translate in delegating the ownership to others trough peer review or other validation step.<br>\n<!-- -->This lack of ownership have massive effects on the capacity to recover and the gates that code needs to go through, affecting the feedback cycle.</p><p>To improve this failure culture is necessary to promote this behavior, having no blame reduces the amount of stress people go through. </p><blockquote><p>If something fails is not an issue of the individual but of the process itself.</p></blockquote><p>Imagine that every commit goes to production, changes will be so small that fixing or rolling back can be done in minutes or seconds. At the same time, developers will be able to create the correct tooling to feel more comfortable with this practice.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"be-a-boy-scout\">Be a Boy Scout<a class=\"hash-link\" href=\"#be-a-boy-scout\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/scout.jpeg\" class=\"img_ev3q\"></p><blockquote><p>Don’t continue the same path if you think something can be done better</p></blockquote><p>As individuals, need to bring change to our products. If we see any new practice, tool, services… that can support the work of the team, bring it forward. Don't shy away because the team is currently doing it.</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"learn--adapt\">Learn &amp; Adapt<a class=\"hash-link\" href=\"#learn--adapt\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/learn-64058_960_720-3730821950.jpeg\" class=\"img_ev3q\"></p><p>Not everything is solved in the same way, don't follow:</p><blockquote><p>If your only tool is a hammer then every problem looks like a nail</p></blockquote><p>For this, learn and take your time for it. When you have a new problem, as it's possible, you don't have the correct tool in your toolbox. </p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"practices\">Practices<a class=\"hash-link\" href=\"#practices\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"firefighter-role\">Firefighter Role<a class=\"hash-link\" href=\"#firefighter-role\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/firefighter.jpeg\" class=\"img_ev3q\"></p><p>The firefighter role is a rotating role inside the team. They are responsible for being the first responder to incidents and helping solve them.<br>\n<!-- -->At the same time, to make sure this person does not suffer from cognitive load due to context switching, this person is not involved on the normal pair rotation and development tasks.<br>\n<!-- -->In exchange, they focus during the week in improving the specific tooling of the project (ex. DB migration tooling).</p><p>This affect the next DORA 4 metrics:</p><ul><li>✔️ <strong>Deployment frequency</strong></li><li>✔️ <strong>Lead Time for change</strong></li><li>✔️ <strong>Mean Time To Recovery</strong></li><li>✔️ <strong>Change Failure Rate</strong></li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"on-call-rotation\">On Call Rotation<a class=\"hash-link\" href=\"#on-call-rotation\" title=\"Direct link to heading\">​</a></h3><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/on-call.jpeg\" class=\"img_ev3q\"></p><p>As the development team is also in charge of running the service, some of them will require after working hour support. On call is just this, the disposition of team members to take care of their services around the clock.<br>\n<!-- -->This tends to sound bad, but there are ways to not make this suck. I can't express it better than <a href=\"https://twitter.com/ctford\" target=\"_blank\" rel=\"noopener noreferrer\">Chris Ford</a> has already done in this <a href=\"https://ctford.github.io/oncall-charter/\" target=\"_blank\" rel=\"noopener noreferrer\">page</a>.</p><p>This affect the next DORA 4 metric:</p><ul><li>✔️ <strong>Mean Time To Recovery</strong></li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>These are the starting point to feel comfortable running things in production without the concern that any issue is a catastrophic thing. Failing is not an issue, the important part is to be able to recover as soon as possible from any problem that arises.</p>",
            "url": "https://alvarolorente.dev/blog/2022/09/25/delivery-acceleration-devops-attitudes",
            "title": "Delivery Acceleration: DevOps Mentality & Practices",
            "summary": "When we run services in production, mentality can make or break our intent to move towards real CI/CD",
            "date_modified": "2022-09-25T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "productivity",
                "devops",
                "softwaredevelopment",
                "programming"
            ]
        },
        {
            "id": "/2022/09/24/devilery-acceleration-intro",
            "content_html": "<p>This is a series I am really looking forward to writing. I have been doing this presentation for the last 3 years in multiple places.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"am-i-crazy\">Am I Crazy?<a class=\"hash-link\" href=\"#am-i-crazy\" title=\"Direct link to heading\">​</a></h2><p>The answer is no, most of the thing you will see on this series comes from practices derived from Extreme Programming, that show how to build quality and value into products. So bear with me for some time.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"motivation\">Motivation<a class=\"hash-link\" href=\"#motivation\" title=\"Direct link to heading\">​</a></h2><p>A few years ago, I read the book Accelerate that is derived of the analysis of the state of DevOps report that happens in a regular basis.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/accelerate.jpg\" class=\"img_ev3q\"></p><p>The book does not speak only about technology but also speaks about communication, organization, etc. And how this affects effectiveness in teams &amp; companies. I recommend reading the entire book.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"4-key-metrics\">4 key metrics<a class=\"hash-link\" href=\"#4-key-metrics\" title=\"Direct link to heading\">​</a></h3><p>Nevertheless, most of the people resume this book (erroneously) in the next table.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/key_metrics.png\" class=\"img_ev3q\"></p><p>It does a comparison on a what are called the 4 key metrics, and provide a classification of performance (teams &amp; companies, since 2017 this classification has evolved).</p><p>What does these 4 key metrics  mean:</p><ul><li><strong>Deployment frequency</strong>: is how often does the team deploy to <strong>production</strong>.</li><li><strong>Lead Time for change</strong>: is how much time does a story take to get to <strong>production</strong>.</li><li><strong>Mean Time To Recovery</strong>: is how fast can we solve a production issues.</li><li><strong>Change Failure Rate</strong>: is how frequently do we break things in production.</li></ul><p>All this metrics is helping teams understand their feedback cycle and stability. In the case of the team, I currently work with:</p><ul><li><strong>Deployment Frequency</strong>: once per commit to trunk (while doing trunk-based development) what ends up translating to a few times per day.</li><li><strong>Lead Time for change:</strong> below 1h. We can activate a feature as soon as the code is deployed by the CI/CD using feature flags.</li><li><strong>Mean Time To Recovery</strong>: In minutes. We can activate and deactivate feature flags on the fly if any of the code breaks, and we have a good observability and alarming, so we are the first one to notice.</li><li><strong>Change Failure Rate</strong>: We don't optimize for this, as MTTR is more important for us (I will explain why later). Nevertheless, we currently only had 2 minor production issues in the last year, so we are way below 1%. Our CI/CD validations help a lot on this.</li></ul><p>The intent of this series is to share the Extreme programming practices that we use to achieve being on the <a href=\"https://www.devops-research.com/quickcheck.html\" target=\"_blank\" rel=\"noopener noreferrer\">elite classification of DORA 4</a>.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"note-of-caution\">Note of Caution<a class=\"hash-link\" href=\"#note-of-caution\" title=\"Direct link to heading\">​</a></h2><p>As this twitter thread shows, this is not one size fits all, the challenges of a team are not the challenges of another one.  There is no silver bullet or common root cause to the issue, and each team should use this metrics to track improvements in an unbiased way. For this, the 4 key metrics do not mean anything at company level and should not be used to compare teams.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/metrics_caution.png\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"next\">Next<a class=\"hash-link\" href=\"#next\" title=\"Direct link to heading\">​</a></h2><p>In the following installments, I will walk backwards from having something in production and how to keep it running in a healthy manner stress-free up to coding techniques that enable Trunk-based development.</p>",
            "url": "https://alvarolorente.dev/blog/2022/09/24/devilery-acceleration-intro",
            "title": "Delivery Acceleration: Intro",
            "summary": "Why do teams perform differently and what are the tools & practices some team use to differentiate themselves",
            "date_modified": "2022-09-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "programming",
                "softwaredevelopment",
                "devops",
                "productivity"
            ]
        },
        {
            "id": "/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped",
            "content_html": "<p>In software development, over the last years we always talk about on cross-functional teams, as a good split of responsibilities to provide autonomy in teams. What does that mean? Why is this so? And what does it look like?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"history--types-of-teams\">History &amp; types of teams<a class=\"hash-link\" href=\"#history--types-of-teams\" title=\"Direct link to heading\">​</a></h2><p>It's probably easier to see the evolution of team culture as a chronology, as it has been an evolving thing.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"specialization-based-teams\">Specialization-Based Teams<a class=\"hash-link\" href=\"#specialization-based-teams\" title=\"Direct link to heading\">​</a></h3><p>Traditionally, when we had only big monolithic applications, teams have been split by their expertise. This meaning all the quality assurance, Frontend, Backend roles will be in a team with their expertise-based peers. This might look like the next image:</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-drawio-1.png\" class=\"img_ev3q\"></p><p>What are the pros and cons of this model:</p><ul><li>✔️ Improve depth of knowledge from peers.</li><li>✔️ No dependency on individuals, the Bus factor tends to be bigger than 1.</li><li>❌ Bottlenecks in between teams, due to different priorities and timelines.</li><li>❌ Lack of breath of knowledge.</li><li>❌ Low domain expertise due to coverage of all domains.</li><li>❌ Continuous context switch due to support of multiple domains.</li><li>❌ Design issues due <a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\" target=\"_blank\" rel=\"noopener noreferrer\">Conway's Law</a> relation in between communication patterns and architecture.</li><li>❌ Eventually, teams grow too big and have management issues due to <a href=\"https://en.wikipedia.org/wiki/Dunbar%27s_number\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"dunbars\">Dunbar's Number</a> on human relationships.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"specialized-cross-functional-teams\">Specialized Cross-functional Teams<a class=\"hash-link\" href=\"#specialized-cross-functional-teams\" title=\"Direct link to heading\">​</a></h3><p>Due to the shortcomings of the previous model and the raise of microservices and some concepts from DDD,  the intention of splitting teams was to make sure a specific domain and their solutions were cover by the same people.<br>\n<!-- -->This allows more independence and control over what is required to fulfill the needs of that domain. </p><p>This might look like the next image:</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-expertise-crossfunctional-teams-drawio.png\" class=\"img_ev3q\"></p><p>What are the pros and cons of this model:</p><ul><li>✔️ Common domain expertise, allowing faster and informed decisions.</li><li>✔️ Single domain will not require a lot of context switch.</li><li>✔️ Helps design on microservices environments due to <a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\" target=\"_blank\" rel=\"noopener noreferrer\">Conway's Law</a>.</li><li>✔️ Teams tend to stay small and follow <a href=\"https://en.wikipedia.org/wiki/Dunbar%27s_number\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"dunbars\">Dunbar's Number</a> on human relationships (ex. Amazon 2 large pizza team size).</li><li>❌ Bottlenecks in between team members, due to process dependency.</li><li>❌ Lack of depth of knowledge from peers.</li><li>❌ Lack of breath of knowledge being shared.</li><li>❌ Bus factor tends to be small.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"t-shaped-cross-functional-teams\">T-shaped Cross-Functional Teams<a class=\"hash-link\" href=\"#t-shaped-cross-functional-teams\" title=\"Direct link to heading\">​</a></h3><p>The previous organization helped many teams to be able to focus and do the right thing in the right moment.</p><p>Nevertheless, it lacked the focus on collaboration and support inside the team, as each person has their small set of responsibilities can easily cause bottlenecks inside a single team.</p><p>T-shaped development tries to solve this by making sure all team members can work in every part of the solution (represented by the horizontal part of the 'T'). Nevertheless, each member can have his own preferred field of expertise  (represented by the vertical part of the 'T').<br>\n<!-- -->This has been enabled by the lower complexity on the tooling and entry-level learning curve to most of the expertises.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/t-shapped-cross-functional-tshapped-crossfunctional-drawio.png\" class=\"img_ev3q\"></p><p>What are the pros and cons of this model:</p><ul><li>✔️ No bottlenecks as all team members can chip in to the different needs.</li><li>✔️ Common domain expertise, allowing faster and informed decisions.</li><li>✔️ Single domain will not require a lot of context switch.</li><li>✔️ Helps design on microservices environments due to <a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\" target=\"_blank\" rel=\"noopener noreferrer\">Conway's Law</a>.</li><li>✔️ Teams tend to stay small and follow <a href=\"https://en.wikipedia.org/wiki/Dunbar%27s_number\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"dunbars\">Dunbar's Number</a> on human relationships (ex. Amazon 2 large pizza team size).</li><li>✔️ Shared tasks improve a team member depth of knowledge.</li><li>✔️ Shared tasks improve  a team member breath of knowledge.</li><li>✔️ As knowledge is spread inside the team, the Bus Factor is not an issue.</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>Time has improved things for all teams, and we are probably not at the end of the transformation of teams. Nevertheless, it is good for companies and individuals to adapt to changes in the environment.</p>",
            "url": "https://alvarolorente.dev/blog/2022/09/13/the-future-of-teams-crossfunctional-and-t-shaped",
            "title": "The future of teams: Crossfuctional & T-Shaped",
            "summary": "Team structure matters, how can we enable teams to be more productive & independent",
            "date_modified": "2022-09-13T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "softwaredevelopment",
                "architecture",
                "technology",
                "productivity"
            ]
        },
        {
            "id": "/2022/09/09/event-storming-to-split-the-monolith-into-microservices",
            "content_html": "<p>On our previous installments, we discussed the smells that can happen when splitting microservices, and the strategies that exist to make them as independent as possible. But how do we define boundaries? How do we define the process that our microservice is in charge off?</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"event-storming\">Event Storming<a class=\"hash-link\" href=\"#event-storming\" title=\"Direct link to heading\">​</a></h2><p>Event storming is a technique that is part of <a href=\"https://en.wikipedia.org/wiki/Domain-driven_design\" target=\"_blank\" rel=\"noopener noreferrer\">DDD</a>. But, what is Event storming?, the definition on <a href=\"https://en.wikipedia.org/wiki/Event_storming\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"wikipedia\">Wikipedia</a> is:</p><blockquote><p>A workshop-based method to quickly find out what is happening in the domain of a software program. The business process is \"stormed out\" as a series of domain events.</p></blockquote><p>This process is run with stickies in a physical or digital board during a session, and requires the 'experts' on the process to be present to provide the context what/whom/how. The outcome is an understanding of the <strong>business process</strong>, not the technical one. To be able to separate them into different steps with clear responsibilities.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"step-by-step-guide\">Step-By-Step Guide<a class=\"hash-link\" href=\"#step-by-step-guide\" title=\"Direct link to heading\">​</a></h3><p>let's do an example of how a company sets up our internet connection</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"prepare-a-board-and-the-people-for-the-session\">Prepare a board and the people for the session<a class=\"hash-link\" href=\"#prepare-a-board-and-the-people-for-the-session\" title=\"Direct link to heading\">​</a></h4><p>Event storming requires people to share a common view and brainstorm and discuss on it. This process takes to count time as a dimension. And has multiple types of stickies that can be used.<br>\n<!-- -->You can see an example board on the next image:</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming.png\" class=\"img_ev3q\"></p><p>Regarding the Stickies, their color represent a specific meaning<!-- -->[<!-- -->1<!-- -->]<!-- -->:</p><ul><li><strong>Events (orange):</strong> Represent the factual events and anything that is relevant to a domain expert.</li><li><strong>Commands (blue):</strong> These are requests to do something. They can originate from a user or system or by another event.</li><li><strong>System (pink):</strong> These represent systems involved in the domain. They may issue commands or receive commands along with triggering events.</li><li><strong>User (yellow):</strong> These are human users involved in the process. They may be a single person or a department/team.</li><li><strong>Aggregate (tan):</strong> This is the first level of categorization and can be thought of as the “thing” that a group of events operates on.</li><li><strong>Read Model (green):</strong> This represents data that may be critical for a user or system to decide.</li><li><strong>Policy (gray):</strong> These represent standards or rules that may need to be executed, such as rules for a compliance policy.</li></ul><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"define-the-events-of-your-system\">Define the <strong>Events</strong> of your system<a class=\"hash-link\" href=\"#define-the-events-of-your-system\" title=\"Direct link to heading\">​</a></h4><p>Events are the most important information of our board. They represent facts regarding the process and helps encapsulate the knowledge of the 'experts'.<br>\n<!-- -->As we mention before, time is a significant dimension. A process always happens in a period of time. Starting by organizing this 'things' that happen in a timeline is a good way to start.<br>\n<img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-map-events-drawio.png\" class=\"img_ev3q\"></p><p>In our example, you can see on the previous image we go from checking coverage, to creating a user, to creating a contract and connecting our user to the network.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"identify-the-systems-involved-optional\">Identify the <strong>Systems</strong> involved (Optional)<a class=\"hash-link\" href=\"#identify-the-systems-involved-optional\" title=\"Direct link to heading\">​</a></h4><p>The intent of this step is to identify the existing systems and their interdependency. When we discuss systems, they can be internal or external.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-map-systems-drawio.png\" class=\"img_ev3q\"></p><p>In our example, all starts with the website, but soon enough it becomes apparent most of the process is taken care by the monolith.</p><p>This step is optional in the case you have a greenfield. Nevertheless, I highly recommend it if you are splitting a monolith.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"add-the-actors\">Add the <strong>Actors</strong><a class=\"hash-link\" href=\"#add-the-actors\" title=\"Direct link to heading\">​</a></h4><p>These are real people who are part of the process, they tend to be the starting point of a chain of events, or even on a manual process we are trying to automate the executors of the individual step.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-map-actors-drawio.png\" class=\"img_ev3q\"><br>\n<!-- -->In our case, the user is the one starting the process, but there needs to be a technician doing the last steps manually.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"connect-the-dots-with-commands\">Connect the dots with <strong>Commands</strong><a class=\"hash-link\" href=\"#connect-the-dots-with-commands\" title=\"Direct link to heading\">​</a></h4><p>Now we are left with events that are done by someone and take effect in parts of our system. But we are missing the cause and effect that made this look this way.</p><p>Commands allow exactly this, is a specific action or decision that will push our system into a certain direction.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-map-commands-drawio.png\" class=\"img_ev3q\"></p><p>Commands can be positive or negative actions, causing bifurcation and showing different cases that our system needs to cope with.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"define-bounded-context\">Define <strong>Bounded Context</strong><a class=\"hash-link\" href=\"#define-bounded-context\" title=\"Direct link to heading\">​</a></h4><p>now we are left to define where each of the sub-process that conform our system starts and ends. This is done by grouping the stickies with an enclosing and giving a noun + verb to it, as it's a sub-process and it evokes action.<br>\n<img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-bounded-contexts-drawio.png\" class=\"img_ev3q\"></p><p>Now you have a set of split actions that can become their microservices and provide part of the process independently.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"create-capabilities-matrix-optional\">Create <strong>Capabilities Matrix</strong> (Optional)<a class=\"hash-link\" href=\"#create-capabilities-matrix-optional\" title=\"Direct link to heading\">​</a></h4><p>Now, with the bounded context, we can start defining the capabilities of our services. This is straightforward to express in a matrix.</p><table><thead><tr><th>Context</th><th>Capabilities</th></tr></thead><tbody><tr><td>Network Management</td><td>Check coverage <br> Enable Network <br> 3rd party Hardware management integration</td></tr><tr><td>User Management</td><td>Create User <br> User Email Verification</td></tr><tr><td>contract Management</td><td>Create Contract <br> User Email Verification <br> 3rd party digital signature integration</td></tr></tbody></table><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"devise-your-goal-architecture-optional\">Devise your <strong>Goal Architecture</strong> (Optional)<a class=\"hash-link\" href=\"#devise-your-goal-architecture-optional\" title=\"Direct link to heading\">​</a></h4><p>Knowing our current architecture, it's good to think where we want to go.<br>\n<!-- -->This is not only a technical challenge, but an organizational challenge due to <a href=\"https://en.wikipedia.org/wiki/Conway%27s_law\" target=\"_blank\" rel=\"noopener noreferrer\">Conway's law</a>. If we would like to be successful in splitting a monolith our communication, meaning the teams structure involved, need to resemble this target state.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-goal-architecture-drawio.png\" class=\"img_ev3q\"></p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"define-a-plan-on-how-to-split-the-monolith-optional\">Define a <strong>plan</strong> on how to split the Monolith (Optional)<a class=\"hash-link\" href=\"#define-a-plan-on-how-to-split-the-monolith-optional\" title=\"Direct link to heading\">​</a></h4><p>A change so big as the one shown on the previous image can be overwhelming for an organization and create a paralysis and doubts. It's always good to split the problem in steps to understand progress and be always on a better state. This will improve morale.<br>\n<img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/event-storming-plan-architecture-drawio.png\" class=\"img_ev3q\"></p><h6 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-httpswwwcapitalonecomtechsoftware-engineeringevent-storming-for-microservice-architecture\">[<!-- -->1<!-- -->]<!-- --> <a href=\"https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/\">https://www.capitalone.com/tech/software-engineering/event-storming-for-microservice-architecture/</a><a class=\"hash-link\" href=\"#1-httpswwwcapitalonecomtechsoftware-engineeringevent-storming-for-microservice-architecture\" title=\"Direct link to heading\">​</a></h6>",
            "url": "https://alvarolorente.dev/blog/2022/09/09/event-storming-to-split-the-monolith-into-microservices",
            "title": "Event Storming to split Monolith into Microservices",
            "summary": "how can we define what is the scope of a service, event storming is here to help us",
            "date_modified": "2022-09-09T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "api",
                "microservices",
                "programming",
                "architecture"
            ]
        },
        {
            "id": "/2022/09/05/patterns-to-avoiding-microlithic-microservices",
            "content_html": "<p>On the previous installment of this series, we discussed the pitfalls that could happen when we split a monolith into microservices. In specific, we talked about creating what are called microliths.<br>\n<img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/microliths.jpg\" class=\"img_ev3q\"></p><p>Given that you have followed the recommendations on designing your domains correctly. Today we are going to elaborate on patterns to remove that synchronous communication in between 'microservices'. This will help our services to become more resilient.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-patterns\">The Patterns<a class=\"hash-link\" href=\"#the-patterns\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"circuit-breakers\">Circuit Breakers<a class=\"hash-link\" href=\"#circuit-breakers\" title=\"Direct link to heading\">​</a></h3><p>The most simple solution we can go for is called <strong>circuit breakers</strong>. As it implies, is just a piece of code that upon multiple request failed to a downstream service will fail silently and allow service to resume their normal behavior.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/circuitbreakerdesignpattern.png\" class=\"img_ev3q\"></p><p>What are we solving and what are we letting unsolved:</p><ul><li>✔️ We don’t fail continuously if some other service fails.</li><li>❌ We silently don’t finish the entire process requested.</li><li>❌ We require all chain of dependencies to be called.</li><li>❌ We force other services to scale to our needs.</li><li>❌ Data is mutable, so errors will be propagated and not solvable.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"outbox-pattern\">Outbox Pattern<a class=\"hash-link\" href=\"#outbox-pattern\" title=\"Direct link to heading\">​</a></h3><p>The next level in solving our microlithic issue is to decouple our services using Pub/Sub to exchange models in between services.<br>\n<!-- -->Our service will consume and store the necessary information to run the process locally, and will broadcast the outcome models. This will mean there will always be a strong consistency in the outbox, and eventual consistency on the service database (if it exists).</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/reactivemicroliths.jpg\" class=\"img_ev3q\"></p><p>What are we solving and what are we letting unsolved:</p><ul><li>✔️ We don’t fail continuously if some other service fails.</li><li>✔️ We always finish our process and promise the rest will be done.</li><li>✔️ We just require our service to do what we promise.</li><li>✔️ Fast services will be fast, and slow services can go slow.</li><li>❌ Data is mutable, so errors will be propagated and not solvable.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"event-sourcing\">Event Sourcing<a class=\"hash-link\" href=\"#event-sourcing\" title=\"Direct link to heading\">​</a></h3><p>The last level is <strong>event sourcing</strong>. The idea is to use the events that generated a specific state and not use the calculated state that a service can provide us.</p><p>This allows a higher resilience due to the immutability of the data. In this case, calculation issues of the past can be solved, as we can reprocess the entire set of events that took us to a certain state.<br>\n<img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/microsystems.jpg\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion-and-follow-ups\">Conclusion and follow-ups<a class=\"hash-link\" href=\"#conclusion-and-follow-ups\" title=\"Direct link to heading\">​</a></h2><p>These are some of the patterns that can make our services more independent and resilient. Nevertheless, each of them has a different complexity, meaning it also affects the complexity of our code. For this, we need to make sure we use the correct tool for the job.</p>",
            "url": "https://alvarolorente.dev/blog/2022/09/05/patterns-to-avoiding-microlithic-microservices",
            "title": "Patterns to avoiding microlithic microservices",
            "summary": "how can we decouple services to avoid some common pitfalls",
            "date_modified": "2022-09-05T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "api",
                "microservices",
                "programming",
                "architecture"
            ]
        },
        {
            "id": "/2022/09/04/common-mistakes-when-splitting-the-monolith",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-monolith\">The Monolith<a class=\"hash-link\" href=\"#the-monolith\" title=\"Direct link to heading\">​</a></h2><p>We have all at this point encounter the big service that jumpstarted the business. It's always good to find it or know it existed. It shows that there was an intent to not resolve every architectural problem before we even knew we had a business.</p><p>Nevertheless, it tends to outgrow itself and become more a pain than a solution. Some of these pains are:</p><ul><li>We all work on the same code base, and conflicts and side effects start to happen.</li><li>You need to release the entire solution, even if different teams have different cycles.</li><li>There are code freezes to go through validation cycles.</li><li>It scales as a whole, not only the portion that has an increase in traffic.</li></ul><p>Due to these pains, microservices were created. To give team/domain independence to create focused solutions on a business that has already been validated.</p><p><img loading=\"lazy\" src=\"https://www.alvarolorente.dev/img/blog/monolith.JPG\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-microservices\">The Microservices<a class=\"hash-link\" href=\"#the-microservices\" title=\"Direct link to heading\">​</a></h2><p>Let's start with a <a href=\"https://aws.amazon.com/microservices/\" target=\"_blank\" rel=\"noopener noreferrer\">definition of a microservice</a>:</p><blockquote><p>Microservices are an architectural and organizational approach to software development where software is composed of small independent services that communicate over well-defined APIs. These services are owned by small, self-contained teams.</p></blockquote><p><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/3071208/188307797-7c30c8cb-bff7-4755-822b-7cf469cba372.JPG\" alt=\"microservices\" class=\"img_ev3q\"></p><p>All sounds like flowers and happiness when we talk about microservice. Nevertheless, does microservices solve the entire issue by itself?</p><p>Have you encountered the next cases in a microservice architecture?</p><ul><li>Before we release a new version, we need to sync deploys with another team.</li><li>Our application was down, but is not our issue.</li><li>Our service was working and scaling fine until the team X started using us.</li><li>And more…</li></ul><p>What is happening?</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"microliths\">Microliths<a class=\"hash-link\" href=\"#microliths\" title=\"Direct link to heading\">​</a></h3><p>The smells mention before are caused by what <a href=\"http://jonasboner.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Jonas Boner</a> call Microliths, a great word for what is happening here.<br>\n<!-- -->Even if we think this are 'independent' services, synchronous communication can cause side effects we don't want:</p><ul><li>There can be cascading events between your services.</li><li>Your domain boundaries are not clear because you don’t own the entire process.</li><li>Slow services are forced to scale by faster services requirements.</li><li>There is additional latency on the network calls.</li></ul><p><img loading=\"lazy\" src=\"https://microlithalternatives.kanekotic.com/images/microliths.jpg\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-got-lost-in-translation\">What got lost in translation?<a class=\"hash-link\" href=\"#what-got-lost-in-translation\" title=\"Direct link to heading\">​</a></h3><p>Having microliths comes from multiple misconceptions we have. Some of them are:</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"domains--resources\">Domains != Resources<a class=\"hash-link\" href=\"#domains--resources\" title=\"Direct link to heading\">​</a></h4><p>Every so often, when we divide the monolith, we think about domains being resources. Due to how we normally have divided API's and DB's as we think about splitting what already exists and not about extracting the processes being achieved.</p><p>When thinking about a microservice, we should think about what part of the process it is trying to solve, this will help us define good boundaries for our bounded context.</p><p>When we think in a process, data is secondary. The process will require different pieces of existing data to fulfill their capabilities, and it is ok for it to own its copy of what is needed to fulfill his mission.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"independence--single-source\">Independence != Single Source<a class=\"hash-link\" href=\"#independence--single-source\" title=\"Direct link to heading\">​</a></h4><p>A single source of data does not mean independence, as whenever your software requires complementary data, it will have to acquire it from somewhere else, what means a direct  dependency. This also affects boundaries as you must enter other team's domain.</p><p>If you strive for independence, copy the information you require for your process, even if it exists somewhere else.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"fast--synchronous\">Fast != Synchronous<a class=\"hash-link\" href=\"#fast--synchronous\" title=\"Direct link to heading\">​</a></h4><p>Humans think that a direct response is always faster than sending out a message. While occasionally this is true, in microservices this could start a cascade of synchronous calls from one service to the next one, leaving our users in a timeout limbo.</p><p>Think if really your system requires calling others directly or if you can message them to start their process.</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"resilience--complete\">Resilience != Complete<a class=\"hash-link\" href=\"#resilience--complete\" title=\"Direct link to heading\">​</a></h4><p>Making sure the entire process has been completed, is normally confused by resiliency. Resiliency only refers to the capability to complete the process.<br>\n<!-- -->If we have well-defined contracts in between our pieces, we don't need to finish things synchronously, we can promise our users things will happen. And let our services do their work at their speed.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion-and-follow-ups\">Conclusion and follow-ups<a class=\"hash-link\" href=\"#conclusion-and-follow-ups\" title=\"Direct link to heading\">​</a></h2><p>Are we doomed?<br>\n<img loading=\"lazy\" src=\"https://microlithalternatives.kanekotic.com/images/timetopanic.jpg\" class=\"img_ev3q\"></p><p>The answer is no, we are not doomed! We can design our services with the correct division using some DDD tooling and also use the correct tools to decouple our microservices.<br>\n<!-- -->Let's talk about this on the next chapters of this series.</p>",
            "url": "https://alvarolorente.dev/blog/2022/09/04/common-mistakes-when-splitting-the-monolith",
            "title": "Common mistakes when splitting the monolith",
            "summary": "A set of the most common mistakes when splitting your monolith into microservices",
            "date_modified": "2022-09-04T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "api",
                "microservices",
                "programming",
                "architecture"
            ]
        },
        {
            "id": "/2022/08/24/power-automate-automating-social-media",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"video\">Video<a class=\"hash-link\" href=\"#video\" title=\"Direct link to heading\">​</a></h2><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/KhrRVrCmtIw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"long-version\">Long Version<a class=\"hash-link\" href=\"#long-version\" title=\"Direct link to heading\">​</a></h2><p>I am currently starting some new open-source projects and I feel it is tedious to do some recurrent tasks. For example:</p><ul><li>Promote this blog post in social media</li><li>Announce a new release.</li></ul><p><a href=\"https://powerautomate.microsoft.com/en-us/\" target=\"_blank\" rel=\"noopener noreferrer\">Power Automate</a> &amp; <a href=\"https://ifttt.com/\" target=\"_blank\" rel=\"noopener noreferrer\">IFTTT</a> integrations allow just this, by a process of action and reaction.<br>\n<img loading=\"lazy\" src=\"https://github.com/alvarolorentedev/diagrams/blob/main/automate.drawio.png?raw=true\" class=\"img_ev3q\"></p><p>These systems provide:</p><ul><li><strong>Triggers</strong>: they are the starting point of what will happen after.</li><li><strong>Actions</strong>: they react to previous steps on the described flow.</li></ul><p>An example of this is the next flow:</p><p><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/3071208/186482177-7b6eb6c0-8632-4cd2-87c9-613788f553f8.png\" alt=\"image\" class=\"img_ev3q\"></p><p><img loading=\"lazy\" src=\"https://user-images.githubusercontent.com/3071208/186478753-1ebcf35c-eb1e-492a-b41c-ac67a749d7f5.png\" alt=\"image\" class=\"img_ev3q\"></p><ul><li>In IFTTT, if a new feed item exists in the RSS of my blog, it's posted as a card in a Trello board.</li><li>The Power automate flow looks for new cards on that column.</li><li>Retrieve the content</li><li>post it into medium</li><li>Post into Twitter and LinkedIn about the new blog post.</li></ul><p>As you can see, automation is cool and can save us a lot of effort by increasing our productivity.</p>",
            "url": "https://alvarolorente.dev/blog/2022/08/24/power-automate-automating-social-media",
            "title": "Automate Anything: Power Automate + Trello + IFTTT",
            "summary": "how to automate tedius tasks with low code platforms",
            "date_modified": "2022-08-24T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "lowcode",
                "serverless",
                "showdev",
                "productivity"
            ]
        },
        {
            "id": "/2022/08/09/commiting-like-pro-part-2",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-are-messages-important\">Why are messages important?<a class=\"hash-link\" href=\"#why-are-messages-important\" title=\"Direct link to heading\">​</a></h2><p>Commit messages are part of the collaboration we do day to day inside a team, it works as a record of what has happened.</p><blockquote><p>Every time you perform a commit, you’re recording a snapshot of your project that you can revert to or compare to later.</p><p>— Pro Git Book</p></blockquote><p>Commit messages are used in many ways, including:</p><ul><li>To help a future reader quickly understand what changed and why it changed</li><li>To assist with easily undoing specific changes</li><li>To prepare change notes or bump versions for a release</li></ul><p>All three of these use cases require a clean and consistent commit message style.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"easy-commit-messages-with-commitizen\">Easy Commit messages with Commitizen<a class=\"hash-link\" href=\"#easy-commit-messages-with-commitizen\" title=\"Direct link to heading\">​</a></h2><p>This tool purpose is to define a standard way of committing rules and communicating it. The reasoning behind it is that it is easier to read, and enforces writing descriptive commits. Removing the ambiguity of options and the mental load of following the standard manually.</p><p><a href=\"https://github.com/commitizen\" target=\"_blank\" rel=\"noopener noreferrer\">Commitizen</a> will prompt you a series of questions that will generate the final commit message. It has multiple adapters, in my case I prefer to be controlling the questions, so I use <a href=\"https://github.com/tyankatsu0105/cz-format-extension\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"tyankatsu0105/cz-format-extension\">cz-format-extension</a>.</p><p><img loading=\"lazy\" src=\"https://commitizen-tools.github.io/commitizen/images/demo.gif\" class=\"img_ev3q\"></p><p>You can add commitizen to your project with the next command line</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npm install commitizen --save-dev # npm</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">yarn add commitizen -D  # Yarn</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>Add any of the available <a href=\"https://github.com/commitizen/cz-cli#adapters\" target=\"_blank\" rel=\"noopener noreferrer\">adapters</a>, in my case <a href=\"https://github.com/tyankatsu0105/cz-format-extension\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"tyankatsu0105/cz-format-extension\">cz-format-extension</a>:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    npm install cz-format-extension --save-dev # npm</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    yarn add cz-format-extension -D  # Yarn</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>In your <code>package.json</code> you will need to add the next section:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"config\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"commitizen\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      \"path\": \"cz-format-extension\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ...</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The Adapter <a href=\"https://github.com/tyankatsu0105/cz-format-extension\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"tyankatsu0105/cz-format-extension\">cz-format-extension</a> allows a massive flexibility as the questions can be defined in a <code>.czfrec.js</code> file. An example is:</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> contributors </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">require</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'./package.json'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">exports</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">questions</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">{</span><span class=\"token parameter\">inquirer</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"list\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"'What is the type of this change:\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">choices</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">           </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"list\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"type\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"'What is the type of this change:\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token literal-property property\" style=\"color:#36acaa\">choices</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"feat: A new feature\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"feat\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"fix: A bug fix\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"fix\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"docs: Documentation only changes\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"docs\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">          </span><span class=\"token spread operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'list'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'scope'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'What is the scope of this change:'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">choices</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"core: base system of the application\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"core\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"extensions: systems that are observed\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"extensions\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"name\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"tools: other things in the project\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"tools\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'input'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'message'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Write a short, imperative tense description of the change\\n\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token function-variable function\" style=\"color:#d73a49\">validate</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> message</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">length</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'message is required'</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'input'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'body'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Provide a longer description of the change: (press enter to skip)\\n'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'confirm'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'isBreaking'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Are there any breaking changes?'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword module\" style=\"color:#00009f\">default</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'input'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'breaking'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Describe the breaking changes:\\n'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token function-variable function\" style=\"color:#d73a49\">when</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token parameter\">answers</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">isBreaking</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'confirm'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'isIssueAffected'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Does this change affect any open issues?'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword module\" style=\"color:#00009f\">default</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'input'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'issues'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Add issue references:\\n'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token function-variable function\" style=\"color:#d73a49\">when</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token parameter\">answers</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">isIssueAffected</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword module\" style=\"color:#00009f\">default</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword nil\" style=\"color:#00009f\">undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token function-variable function\" style=\"color:#d73a49\">validate</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">issues</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> issues</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">length</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'issues is required'</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'checkbox'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'coauthors'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">message</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'Select Co-Authors if any:'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token literal-property property\" style=\"color:#36acaa\">choices</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> contributors</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">map</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">contributor</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token literal-property property\" style=\"color:#36acaa\">name</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> contributor</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token literal-property property\" style=\"color:#36acaa\">value</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\">Co-authored-by: </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">contributor</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">name</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\"> &lt;</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">contributor</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">email</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\">&gt;</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">commitMessage</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">{</span><span class=\"token parameter\">answers</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> scope </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">scope</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\">(</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">answers</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">scope</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\">)</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">''</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> head </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">answers</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">type</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">scope</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\">: </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">answers</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">message</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> body </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">body</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">body</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">''</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> breaking </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">breaking</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\">BREAKING CHANGE: </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">answers</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation property-access\">breaking</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">''</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> issues </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">issues</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">issues</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">''</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> coauthors </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> answers</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">coauthors</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">join</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'\\n'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">head</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> body</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> breaking</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> issues</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> coauthors</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">join</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'\\n\\n'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">trim</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The file creates a process of questions for:</p><ul><li>type: align with semantic release message specification</li><li>scope: affected part of the application</li><li>message: the imperative written message</li><li>body: longer description</li><li>breaking: to determine if it's a breaking change for semantic release</li><li>Issue: related issue of our ticketing system</li><li>Co-Authors: people working in the tasks while pair programming</li></ul><p>All these questions are asked interactively and not by the brain power of doing manual work.</p><p>And you can then add some nice npm scripts in your <code>package.json</code> file pointing to the local version of Commitizen:</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  ...</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  \"scripts\": {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    \"commit\": \"cz\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>This will be more convenient for your users because then if they want to do a commit, all they need to do is run <code>npm run commit</code> and they will get the prompts needed to start a commit!</p><blockquote><p><strong>NOTE:</strong> If you are using <code>precommit</code> hooks thanks to something like <a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" rel=\"noopener noreferrer\"><code>husky</code></a>, you will need to name your script something other than <code>\"commit\"</code> (e.g. <code>\"cm\": \"cz\"</code>). The reason is because npm scripts has a \"feature\" where it automatically runs scripts with the name <em>prexxx</em> where <em>xxx</em> is the name of another script. In essence, npm and husky will run <code>\"precommit\"</code> scripts twice if you name the script <code>\"commit\"</code>, and the workaround is to prevent the npm-triggered <em>precommit</em> script.</p></blockquote><p>That is all :) . I will do a special mention to <a href=\"https://commitlint.js.org/#/\" target=\"_blank\" rel=\"noopener noreferrer\">commitlint</a> that is a very useful tool to lint commit messages. I do not use it anymore as it has some overlap with commitizen.</p>",
            "url": "https://alvarolorente.dev/blog/2022/08/09/commiting-like-pro-part-2",
            "title": "Commiting Like a Pro in NodeJs: The Message",
            "summary": "Using tools to create descriptive commits",
            "date_modified": "2022-08-09T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "webdev",
                "git",
                "programming",
                "productivity"
            ]
        },
        {
            "id": "/2022/08/08/commiting-like-pro-part-1",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what--why-git-hooks\">What &amp; Why Git hooks?<a class=\"hash-link\" href=\"#what--why-git-hooks\" title=\"Direct link to heading\">​</a></h2><p>Git hooks are scripts that Git executes locally before or after events such as commit, push, and receive.</p><p>These hooks are completely programmable trough bash scripting. Examples of what can be done:</p><ul><li>pre-commit: Enforce project coding standards.</li><li>pre-push: Run tests.</li></ul><p>This allows us to make sure we are committing the correct things at the correct time. Not breaking our code just because of the mental load of doing things as a manual process that can be forgotten.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-to-start\">How to Start<a class=\"hash-link\" href=\"#how-to-start\" title=\"Direct link to heading\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"add-husky\">Add Husky<a class=\"hash-link\" href=\"#add-husky\" title=\"Direct link to heading\">​</a></h3><p><a href=\"https://typicode.github.io/husky/#/\" target=\"_blank\" rel=\"noopener noreferrer\">Husky</a> is a tool that allows Git hooks using JavaScript configured using individual files for hooks in a <code>.husky/</code> directory.</p><p>The fastest way to install husky is by using <code>husky-init</code>, a one-time command to quickly initialize a project with husky:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx husky-init &amp;&amp; npm install       # npm</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx husky-init &amp;&amp; yarn              # Yarn 1</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">yarn dlx husky-init --yarn2 &amp;&amp; yarn # Yarn 2+</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pnpm dlx husky-init &amp;&amp; pnpm install # pnpm</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>It will set up husky, modify package.json and create a sample pre-commit hook that you can edit. By default, it will run test when you commit.</p><p>To add another hook, use <code>husky add</code>.</p><p>If you are not comfortable using  <code>husky-init</code> you can find other options <a href=\"https://typicode.github.io/husky/#/?id=manual\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"add-lint-staged\">Add lint-staged<a class=\"hash-link\" href=\"#add-lint-staged\" title=\"Direct link to heading\">​</a></h3><p>Husky is very useful, but it will run natively to git and not focus the commands in our bash scripts for all the files, not only the ones we want to commit.</p><p><a href=\"https://github.com/okonet/lint-staged\" target=\"_blank\" rel=\"noopener noreferrer\">Lint Staged</a> appear to resolve this problem. It allows you to run the process against staged git files that match a pattern.</p><p><a href=\"https://asciinema.org/a/199934\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" src=\"https://asciinema.org/a/199934.svg\" alt=\"asciicast\" class=\"img_ev3q\"></a></p><p>Install <code>lint-staged</code> by adding it to your local project.</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npm install lint-staged --save-dev</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">yarn add lint-staged -D </span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>In your package.json add it as a script(<code>\"lint-staged\": \"lint-staged\",</code>) and refer it through a <code>pre-commit</code> hook. If using Husky, this can be found in <code>.husky/pre-commit</code> with the next content:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">#!/bin/sh</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">. \"$(dirname \"$0\")/_/husky.sh\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">yarn lint-staged</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>There are multiple ways to <a href=\"https://github.com/okonet/lint-staged#configuration\" target=\"_blank\" rel=\"noopener noreferrer\">configure lint-staged</a>. One of them is having a <code>lint-staged.config.js</code> file in your project root folder. In this file, you can express what process you want to run for what types of files. For example:</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">exports</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string-property property\" style=\"color:#36acaa\">'*.{ts,tsx}'</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'yarn tsc:check'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'yarn format'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'yarn lint:fix'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'yarn test'</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'git add .'</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg class=\"copyButtonIcon_y97N\" viewBox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewBox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>The previous snipped runs the compiler check, formatting, linting and test before adding the fixed staged files to the current commit.</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a class=\"hash-link\" href=\"#conclusion\" title=\"Direct link to heading\">​</a></h2><p>With this two tools, we will now be pushing code that will pass similar checks than our CI/CD system.</p>",
            "url": "https://alvarolorente.dev/blog/2022/08/08/commiting-like-pro-part-1",
            "title": "Commiting Like a Pro in NodeJs: The hooks",
            "summary": "Using git hooks to make sure your commits do what you expect",
            "date_modified": "2022-08-08T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "agile",
                "webdev",
                "programming",
                "productivity"
            ]
        },
        {
            "id": "/2022/08/08/stop-prs",
            "content_html": "<p>Over the last few years, some practices appear to be more a dogma than a value adding practice. One of this is <code>Pull Requests</code>.</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-prs-exist\">Why PR's exist<a class=\"hash-link\" href=\"#why-prs-exist\" title=\"Direct link to heading\">​</a></h3><ul><li><strong>Malicious Code Prevention</strong>: Pull requests exist mostly as a practice accepted for <code>zero trust environments</code> (ex. Open Source). An attack vector on this type of environment is the ability of anyone to contribute, meaning you could inject code that could create known vulnerabilities that packages will inherit. That is why maintainers validate code from unknown users.</li></ul><p><img loading=\"lazy\" src=\"https://github.com/alvarolorentedev/diagrams/blob/main/Stop%20doing%20PR.drawio.png?raw=true\" alt=\"Malicious actors\" class=\"img_ev3q\"></p><ul><li><strong>Highly Distributed Teams</strong>: PR's can be use for highly distributed teams (around the clock) as a way to do knowledge sharing. If someone in side A of the world can follow and understand the changes for a feature that is being developed in side B of the world.</li></ul><p><img loading=\"lazy\" src=\"https://github.com/alvarolorentedev/diagrams/blob/main/Stop%20doing%20PR-Around%20The%20Clock.drawio.png?raw=true\" alt=\"Distributed Teams\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-issue\">The issue<a class=\"hash-link\" href=\"#the-issue\" title=\"Direct link to heading\">​</a></h3><p>IS there any value of doing PRs when people work collocated? What is the cost of PRs in trust environments?</p><p>The value that normally people give to PRs is the one of having a <strong>peer review process</strong>. Nevertheless, we will see later in this article that there are less invasive ways to do this.</p><p>Some costs of PRs are:</p><ul><li><strong>Slow Delivery</strong>: PRs are a start and stop strategy where there is a gateway to merge code. This is time that needs to be taken by developers (writting &amp; preparing a PR) and reviewers (reviewing, commenting, etc) to go through the process. At the same time is more time the code takes to get to production (merging, re-testing, etc). This is significant for features but also for fixes, meaning you can go from a response time of minutes to hours.</li><li><strong>Isolation work</strong>: When working on branches, devs work on code that works isolated but needs to be merged with a continuous stream of changes. This means that any test isolated will probably be invalidated upon merging.</li><li><strong>Lack of ownership</strong>: As work is done isolated, the developer who creates a PR delegates part or the responsibility to the reviewer. Humans don't have compilers or containers to run the code in our brain, meaning catching errors tends to be out of our realm.</li><li><strong>Egos</strong>: As catching errors tends to be out of our human realm, PRs tend to become a thing related to preferences (Style, patterns, etc). This hardly provides any value to the code as either tools like linters can do this automatically or it brings premature optimizations.</li><li><strong>Late feedback</strong>: Any valid recommendation is actually provided quite late in the process, when the code has already been written and validated. Causing rework that takes time.</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"the-alternatives\">The Alternatives<a class=\"hash-link\" href=\"#the-alternatives\" title=\"Direct link to heading\">​</a></h3><p><code>Pull requests</code> are just one of the asynchronous peer code reviews styles. Is not the only way of doing peer reviews.</p><p>Some other types of peer reviews that I, personally, like are:</p><ul><li><strong>Over-the-shoulder</strong>: The bases of this is to have a conversation over what has been or is being implemented. This creates a synchronous feedback loop on an async process. It does not fix all the shortcomings of a PR, but it creates a faster feedback loop.</li><li><strong>Pair Programming / Mob Programming</strong>: The idea is that multiple developers work in the same code base in the same computer, creating a synchronous feedback loop in a synchronous process. This with <code>Trunk-based development</code> allows very fast feedback loops at product level, and with the correct tools generates resilience and ownership among developers.</li></ul><p>The disclaimer here is I have worked doing pair programming, TDD and trunk-based development for more than 5 years in multiple size companies, and it has always been a bliss.</p>",
            "url": "https://alvarolorente.dev/blog/2022/08/08/stop-prs",
            "title": "Stop doing PR's inside the Office",
            "summary": "PRs should only be part of certain environments and not a general practice",
            "date_modified": "2022-08-08T00:00:00.000Z",
            "author": {
                "name": "Alvaro Jose",
                "url": "https://github.com/alvarolorentedev"
            },
            "tags": [
                "agile",
                "webdev",
                "programming",
                "productivity"
            ]
        }
    ]
}